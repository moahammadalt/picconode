{"version":3,"sources":["assets/img/favicon.png","contexts/layout.js","actions/category.js","actions/color.js","actions/size.js","reducers/category.js","reducers/color.js","reducers/size.js","utils/API.js","hooks/useFetch.js","hooks/usePrevious.js","constants/urls.js","constants/index.js","contexts/store.js","layout/SideBarLayout.js","layout/HeaderLayout.js","layout/FooterLayout.js","layout/MainLayout.js","pages/Login/Login.js","pages/Home/Home.js","components/RichInput/RichInput.js","utils/helpers.js","components/CreateUpdateProductForm/CreateUpdateProductForm.js","utils/productCreateUpdate.js","pages/CreateProduct/CreateProduct.js","pages/Category/Category.js","pages/Size/Size.js","pages/Color/Color.js","pages/ProductDetails/ProductDetails.js","router/index.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LayoutContext","createContext","LayoutProvider","children","useState","sideBarCollapsed","setCollapsed","theme","setTheme","loading","setLoading","error","setError","initialState","successNotification","setSuccessNotification","Provider","value","SET_CATEGORIES","INIT_CATEGORIES","SET_COLORS","INIT_COLORS","SET_SIZES","INIT_SIZES","categoryInitialState","categoryReducer","state","action","type","categories","payload","Error","colorInitialState","colorReducer","colors","sizeInitialState","sizeReducer","sizes","baseURL","window","location","hostname","origin","API","axios","create","setAuthorizationToken","token","defaults","headers","common","handleRequestError","response","data","errorMessage","message","extractDataObject","defaultValue","useFetch","fetchInitialObj","setData","fetchObj","doFetch","useContext","useEffect","fetchData","a","res","method","get","url","post","params","key","formData","FormData","append","onSuccess","showSuccessNotification","successMessage","console","log","onError","defaultResponseValue","usePrevious","ref","useRef","current","URLS","login","dashboardRetrive","categoryList","sizeList","colorList","imageUpload","productCreate","productUpdate","slug","productListGet","productItemGet","productDelete","categoryDelete","categoryUpdate","categoryCreate","sizeCreate","sizeDelete","sizeUpdate","colorCreate","colorDelete","colorUpdate","FIRST_INDEX","LAST_INDEX","StoreContext","StoreProvider","useReducer","categoryState","categoryDispatch","sizeState","sizeDispatch","colorState","colorDispatch","setCategories","setSizes","setColors","doCategoriesFetchRequest","doSizesFetchRequest","doColorsFetchRequest","doCategoriesFetch","doSizesFetch","doColorsFetch","authToken","store","initialStore","initCategories","initSizes","initcolors","Sider","Layout","withRouter","props","pathname","isPathMatchRequestedUrl","path","pathToRegexp","exec","collapsible","collapsed","onCollapse","className","src","require","alt","mode","activeKey","selectedKeys","dashboardRoutes","map","showAlways","icon","name","Item","to","Header","HeaderLayout","isLogoutModalOpen","setLogoutModalOpen","isLogedOut","setLogedOut","onClick","title","visible","onOk","set","onCancel","Footer","FooterLayout","Content","MainLayout","style","marginLeft","route","exact","component","Form","form","getFieldDecorator","validateFields","handleSubmit","e","preventDefault","onSubmit","rules","required","prefix","placeholder","size","htmlType","Meta","Card","Home","doProductsFetch","productListData","doDeleteFetch","selectedProductToDelete","setSelectedProductToDelete","handleDeletedProductModal","product","gutter","Array","index","span","cover","length","images","image_name","small_image_link","shape","actions","href","target","description","category_slug","category_type_slug","modules","toolbar","clipboard","matchVisual","formats","RichInput","onChangeHandler","initialValue","editorHtml","setEditorHtml","onChange","html","createHash","arr","Hash","this","isArray","o","prototype","keys","Object","values","getParentChildArr","parentIdKey","arrElem","mappedElem","tree","mappedArr","i","len","id","hasOwnProperty","push","extractSlug","toLowerCase","replace","arrayHasDuplicates","array","valuesSoFar","indexOf","Title","Typography","Option","Select","handleFormSubmit","productsList","productObj","setFieldsValue","getFieldValue","getFieldsValue","parentCategories","categoryTypes","setCategoryTypes","categoryTags","setCategoryTags","sizeFieldsCountArr","setSizeFieldsCountArr","colorFieldsCountArr","setColorFieldsCountArr","0","imagesListObj","setImagesListObj","doImageUpload","prevProductObj","prevParentCategories","productObjIsReady","JSON","stringify","categoriesAreReady","category","onCategoryChanged","onCategoryTypeChanged","imageListObj","selectedIndex","findIndex","undefined","tag","showWarningNotification","msg","notification","warning","placement","duration","label","cat","details","mainPrice","isBest","checked","isHandmade","isOutOfStuck","sortPlace","showSearch","optionFilterProp","filterOption","input","option","join","color","level","fieldIndex","tmpArr","splice","removeSizeFields","prevIndex","addNewSizeFields","dashed","listType","fileList","customRequest","file","product_image","imageResponse","imagesListObjTmp","uid","thumbUrl","image_link","uploadImage","onRemove","fileData","tmpImagesListObj","findSelectedImageIndex","handleImageUploadRemove","forEach","fieldName","startsWith","handleDefaultColorChange","removeColorFields","lastFiledValue","addNewColorFields","extractSizesArr","sizesArr","filter","sizeIndex","is_checked","refId","height","hips","chest","waistline","size_price","amount","extractColorsArr","colorsArr","colorIndex","product_color_code","imgObj","reverse","extractDefaultColorId","defaultColorInArr","defaultColorIndex","extractProductPlace","sortIndex","productsIndexesArr","sort_index","isFirstProduct","Math","min","isLastProduct","max","number","extractProductIndex","productsListHashObj","firstProductId","Number","minIndex","toFixed","beforeIndex","nearestSmallestIndex","includes","extractProductObj","category_id","category_type_id","price","currency","is_best","is_handmade","stock_status","default_color_id","validateProduct","paramsObj","colorsIds","sizesIds","doProductCreateFetch","productCreated","setProductCreated","TreeNode","Tree","Search","Input","resetFields","categoriesList","expandedKeys","setExpandedKeys","autoExpandParent","setAutoExpandParent","createCategoryModalOpen","setCreateCategoryModalOpen","deleteModalItem","setDeleteModalItem","updateModalItem","setUpdateModalItem","updateModalItemName","setUpdateModalItemName","searchValue","setSearchValue","doUpdateFetch","doCreateFetch","dataList","generateList","node","handleCategoryUpdate","closeCreateCategoryModal","handleCategoryCreate","categoryName","parentCategory","parentType","parent_id","getUpdateIcon","item","twoToneColor","getDeleteIcon","marginBottom","getParentKey","parentKey","some","self","onExpand","loop","itemIndex","beforeStr","substr","afterStr","onPressEnter","okText","Size","createSizeModalOpen","setCreateSizeModalOpen","newSizeName","setNewSizeName","closeCreateSizeModal","handleSizeUpdate","handleSizeCreate","bordered","dataSource","renderItem","Color","createColorModalOpen","setCreateColorModalOpen","newColorName","setNewColorName","setSelectedColorHex","setColorPickerIsVisible","closeCreateColorModal","handleColorUpdate","handleColorCreate","ProductDetails","CreateProduct","Category","productSlug","match","productData","err","setNoProductFoundAlert","doProductUpdateFetch","noProductFoundAlert","productUpdated","setProductUpdated","category_tag_id","size_id","size_details","color_id","image","thumbnail_image_link","reduce","acc","field","sizeRefIds","formSizeRefIds","sizeRefId","find","colorRefIds","formColorRefIds","colorRefId","baseRoutes","Login","noAuth","AppContainer","history","isAuthError","success","spinning","basename","App","Boolean","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e963bcb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.39971fa2.png\";","import React, { useState, createContext } from 'react';\n\nconst LayoutContext = createContext();\n\nfunction LayoutProvider({ children }) {\n  const [sideBarCollapsed, setCollapsed] = useState(false);\n  const [theme, setTheme] = useState('dark');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successNotification, setSuccessNotification] = useState(false);\n\n  const initialState = {\n    sideBarCollapsed,\n    setCollapsed,\n    theme,\n    setTheme,\n    loading,\n    setLoading,\n    error,\n    setError,\n    successNotification,\n    setSuccessNotification,\n  };\n\n  return (\n    <LayoutContext.Provider value={initialState}>\n      {children}\n    </LayoutContext.Provider>\n  );\n}\n\nexport { LayoutContext, LayoutProvider};","export const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const INIT_CATEGORIES = 'INIT_CATEGORIES';","export const SET_COLORS = 'SET_COLORS';\nexport const INIT_COLORS = 'INIT_COLORS';","export const SET_SIZES = 'SET_SIZES';\nexport const INIT_SIZES = 'INIT_SIZES';","import { SET_CATEGORIES, INIT_CATEGORIES } from '../actions';\n\nexport const categoryInitialState = [];\n\nexport const categoryReducer = (state, action) => {\n  switch (action.type) {\n    case SET_CATEGORIES:\n      return { categories: action.payload };\n    case INIT_CATEGORIES:\n      return { categories: categoryInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import { SET_COLORS, INIT_COLORS } from '../actions';\n\nexport const colorInitialState = [];\n\nexport const colorReducer = (state, action) => {\n  switch (action.type) {\n    case SET_COLORS:\n      return { colors: action.payload };\n    case INIT_COLORS:\n      return { colors: colorInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import { SET_SIZES, INIT_SIZES } from '../actions';\n\nexport const sizeInitialState = [];\n\nexport const sizeReducer = (state, action) => {\n  switch (action.type) {\n    case SET_SIZES:\n      return { sizes: action.payload };\n    case INIT_SIZES:\n      return { sizes: sizeInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import axios from 'axios';\n\nexport const baseURL = `${\n  window.location.hostname === 'localhost'\n    ? 'http://localhost:1000'\n    : window.location.origin\n}`;\n\nexport const API = axios.create({\n  baseURL: `${baseURL}/adminAPI/`,\n});\n\nexport const setAuthorizationToken = token => {\n\n  if (token) {\n    API.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete API.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const removeAuthorizationToken = () => {\n\n  delete axios.defaults.headers.common['Authorization'];\n};\n\nexport const handleRequestError = error => {\n  const genericError = 'Generic error happened';\n  if(!error) return genericError;\n\n  if(error.response && error.response.data) {\n    return error.response.data.errorMessage || error.message || genericError;\n  }\n\n  if(error.message) return error.message;\n\n  return genericError;\n};\n\nexport const extractDataObject = (data, defaultValue) => data && data.data && data.data.data ? data.data.data : defaultValue || {};\n","import { useState, useContext, useEffect } from 'react';\nimport { LayoutContext } from '../contexts';\n\nimport { API, extractDataObject } from '../utils/API';\n\nfunction useFetch(fetchInitialObj) {\n  const [data, setData] = useState(null);\n  const [fetchObj, doFetch] = useState(fetchInitialObj);\n  const {\n    loading,\n    setLoading,\n    error,\n    setError,\n    setSuccessNotification\n  } = useContext(LayoutContext);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      setSuccessNotification(false);\n      try {\n        setLoading(true);\n        let res = null;\n        switch (fetchObj.method) {\n          case 'GET':\n            res = await API.get(fetchObj.url);\n            break;\n  \n          case 'POST':\n            res = await API.post(fetchObj.url, fetchObj.params);\n            break;\n  \n          case 'FILE_POST':\n            var formData = new FormData();\n            for(const key in fetchObj.params) {\n              formData.append(key, fetchObj.params[key]);\n            }\n            res = await API.post(fetchObj.url, formData, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            break;\n  \n          default:\n            res = fetchObj.params\n              ? await API.post(fetchObj.url, fetchObj.params)\n              : await API.get(fetchObj.url);\n            break;\n        }\n        \n        setData(res);\n        \n        !!fetchObj.onSuccess && fetchObj.onSuccess(extractDataObject(res));\n        !!fetchInitialObj && fetchInitialObj.onSuccess && fetchInitialObj.onSuccess(extractDataObject(res));\n\n        fetchObj.showSuccessNotification &&\n          setSuccessNotification(\n            fetchObj.successMessage || 'request has been done successfully.'\n          );\n      } catch (err) {\n        console.log('err: ', err);\n        !!fetchObj.onError && fetchObj.onError(err);\n        !!fetchInitialObj && fetchInitialObj.onError && fetchInitialObj.onError(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    !!fetchObj && fetchData();\n\n    doFetch(null);\n  }, [ fetchObj ]);\n\n  const defaultResponseValue = (fetchObj && fetchObj.defaultValue) || (fetchInitialObj && fetchInitialObj.defaultValue);\n  \n  return {\n    data: extractDataObject(data, defaultResponseValue),\n    error,\n    loading,\n    doFetch,\n  };\n}\n\nexport default useFetch;\n","import { useState, useContext, useEffect, useRef} from 'react';\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  \n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  \n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n\nexport default usePrevious;","const URLS = {\n  login: '/login',\n  dashboardRetrive: '/dashboard-retrive',\n  categoryList: '/category',\n  sizeList: '/size',\n  colorList: '/color',\n  imageUpload: '/productImage/create',\n  productCreate: '/product/create',\n  productUpdate: ({ slug }) => `/product/${slug}/update`,\n  productListGet: '/product',\n  productItemGet: ({ slug }) => `/product/${slug}`,\n  productDelete: ({ slug }) => `/product/${slug}/delete`,\n  categoryDelete: ({ slug }) => `/category/${slug}/delete`,\n  categoryUpdate: ({ slug }) => `/category/${slug}/update`,\n  categoryCreate: '/category/create',\n  sizeCreate: '/size/create',\n  sizeDelete: ({ slug }) => `/size/${slug}/delete`,\n  sizeUpdate: ({ slug }) => `/size/${slug}/update`,\n  colorCreate: '/color/create',\n  colorDelete: ({ slug }) => `/color/${slug}/delete`,\n  colorUpdate: ({ slug }) => `/color/${slug}/update`,\n}\n\nexport default URLS;","export const FIRST_INDEX = 'FIRST';\nexport const LAST_INDEX = 'LAST';\nexport const SORT_INDEX_STEP = 0.000001;\nexport const SORT_INDEX_DIGITS_NUMBER = 6;\n\nexport { default as URLS } from './urls';","import React, { useReducer, createContext, useEffect } from 'react';\nimport store from 'store';\n\nimport { SET_CATEGORIES, INIT_CATEGORIES, INIT_COLORS, INIT_SIZES, SET_COLORS, SET_SIZES } from '../actions';\nimport { categoryReducer, sizeReducer, colorReducer } from '../reducers';\nimport { useFetch } from '../hooks';\nimport { URLS } from '../constants';\n\n\nconst StoreContext = createContext();\n\nfunction StoreProvider({ children }) {\n  \n  const [categoryState, categoryDispatch] = useReducer(categoryReducer);\n  const [sizeState, sizeDispatch ] = useReducer(sizeReducer);\n  const [colorState, colorDispatch] = useReducer(colorReducer);\n\n  const setCategories = (categories) => {\n    categoryDispatch({ type: SET_CATEGORIES, payload: categories})\n  }\n\n  const initCategories = () => {\n    categoryDispatch({ type: INIT_CATEGORIES})\n  }\n\n  const setSizes = (sizes) => {\n    sizeDispatch({ type: SET_SIZES, payload: sizes})\n  }\n\n  const initSizes = () => {\n    sizeDispatch({ type: INIT_SIZES})\n  }\n\n  const setColors = (colors) => {\n    colorDispatch({ type: SET_COLORS, payload: colors})\n  }\n\n  const initcolors = () => {\n    colorDispatch({ type: INIT_COLORS})\n  }\n\n  const { doFetch: doCategoriesFetchRequest } = useFetch();\n  const { doFetch: doSizesFetchRequest } = useFetch();\n  const { doFetch: doColorsFetchRequest } = useFetch();\n  \n  const doCategoriesFetch = () => {\n    doCategoriesFetchRequest({url: URLS.categoryList, onSuccess: setCategories});\n  }\n  const doSizesFetch = () => {\n    doSizesFetchRequest({url: URLS.sizeList, onSuccess: setSizes});\n  }\n  const doColorsFetch = () => {\n    doColorsFetchRequest({url: URLS.colorList, onSuccess: setColors});\n  }\n\n  const authToken = store.get('authenticationToken');\n\n  useEffect(() => {\n    if(authToken) {\n      doCategoriesFetch();\n      doSizesFetch();\n      doColorsFetch();\n    }\n  }, [authToken])\n\n  const initialStore = {\n    data: {\n      ...categoryState,\n      ...sizeState,\n      ...colorState,\n    },\n    setCategories,\n    initCategories,\n    setSizes,\n    initSizes,\n    setColors,\n    initcolors,\n    doCategoriesFetch,\n    doSizesFetch,\n    doColorsFetch,\n  };\n  \n  return (\n    <StoreContext.Provider value={initialStore}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport { StoreContext, StoreProvider};","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Layout, Menu, Icon } from 'antd';\nimport pathToRegexp from 'path-to-regexp';\n\nimport { dashboardRoutes } from '../router';\nimport { LayoutContext } from '../contexts';\n\nconst { Sider } = Layout;\n\nfunction SideBarLayout(props) {\n  const {\n    location: { pathname }\n  } = props;\n\n  const isPathMatchRequestedUrl = path => !!pathToRegexp(path).exec(pathname);\n  const {\n    sideBarCollapsed,\n    setCollapsed,\n    theme,\n  } = useContext(LayoutContext);\n\n  return (\n    <Sider\n      collapsible\n      collapsed={sideBarCollapsed}\n      onCollapse={() => setCollapsed(!sideBarCollapsed)}\n    >\n      <div className=\"logo\">\n        <img src={require('../assets/img/favicon.png')} alt=\"\" />\n        {!sideBarCollapsed && <span>Picco Logo</span>}\n      </div>\n      <Menu\n        theme={theme}\n        mode=\"inline\"\n        activeKey={pathname}\n        selectedKeys={[pathname]}\n      >\n        {dashboardRoutes.map(({ path, showAlways, icon, name }) => (\n          <Menu.Item key={isPathMatchRequestedUrl(path) ? pathname : path}>\n            {(showAlways || isPathMatchRequestedUrl(path)) && (\n              <Link to={path}>\n                <Icon type={icon} />\n                <span className=\"nav-text\">{name}</span>\n              </Link>\n            )}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  );\n}\n\nexport default withRouter(SideBarLayout);\n","import React, { useState } from 'react';\nimport { Layout, Icon, Modal } from 'antd';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\n\nconst { Header } = Layout;\n\nfunction HeaderLayout() {\n\n  const [isLogoutModalOpen, setLogoutModalOpen] = useState(false);\n  const [isLogedOut, setLogedOut] = useState(false);\n\n  const handleLogout = () => {\n    store.set('authenticationToken', null);\n    setLogedOut(true);\n  }\n  \n\n  return (\n    <Header>\n      {isLogedOut && <Redirect to=\"/login\" />}\n      <div className=\"header-wrapper\">\n        <div className=\"page-name\">header</div>\n        <Icon type=\"logout\" onClick={() => setLogoutModalOpen(true)} className=\"logout-icon\" />  \n      </div>\n      <Modal\n        title=\"Log out from dashboard\"\n        visible={isLogoutModalOpen}\n        onOk={handleLogout}\n        onCancel={() => setLogoutModalOpen(false)}\n      >\n        would you really like to log out?\n      </Modal>\n    </Header>\n  );\n}\n\nexport default HeaderLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nfunction FooterLayout() {\n  return (<Footer>piccoloveliero ©2019</Footer>);\n}\n\nexport default FooterLayout;","import React, { useContext } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport SideBarLayout from './SideBarLayout';\nimport HeaderLayout from './HeaderLayout';\nimport FooterLayout from './FooterLayout';\n\nimport { dashboardRoutes } from '../router';\nimport { LayoutContext } from '../contexts';\n\nconst { Content } = Layout;\n\nfunction MainLayout() {\n  const { sideBarCollapsed } = useContext(LayoutContext);\n\n  return (\n    <Layout style={{ marginLeft: sideBarCollapsed ? '80px' : '200px' }}>\n      <SideBarLayout />\n      <Layout>\n        <HeaderLayout />\n        <Content>\n          <Switch>\n            {dashboardRoutes.map(route => (\n              <Route\n                exact={true}\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n            <Redirect to=\"/\" />\n          </Switch>\n        </Content>\n        <FooterLayout />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport store from 'store';\nimport { Form, Icon, Input, Button, Layout } from 'antd';\n\nimport { useFetch } from '../../hooks';\nimport { setAuthorizationToken } from '../../utils/API';\nimport { URLS } from '../../constants';\n\nimport '../../assets/scss/login.scss';\n\nfunction Login({ form }) {\n  const { getFieldDecorator, validateFields } = form;\n  const authToken = !!store.get('authenticationToken');\n  const {\n    data: { token },\n    doFetch\n  } = useFetch();\n\n  if (token) {\n    store.set('authenticationToken', token);\n    setAuthorizationToken(token);\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    doFetch({\n      url: URLS.login,\n      params: await validateFields()\n    });\n  };\n\n  return token || authToken ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Layout className=\"login-layout\">\n      <img src={require('../../assets/img/favicon.png')} alt=\"\" />\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: 'Please enter your username!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" className=\"input-icon\" />}\n              placeholder=\"Username\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please enter your Password!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" className=\"input-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Layout>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(Login);\n","import React, { useState, useEffect } from 'react';\nimport { Card, Icon, Row, Col, Avatar, Modal } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\n\nimport { baseURL } from '../../utils/API';\nimport '../../assets/scss/productList.scss';\n\nconst { Meta } = Card;\n\nfunction Home() {\n  const { doFetch: doProductsFetch, data: productListData } = useFetch({\n    url: URLS.productListGet\n  });\n  const { doFetch: doDeleteFetch, data: deleteResponse } = useFetch();\n\n  const [selectedProductToDelete, setSelectedProductToDelete] = useState(null);\n\n  const getProductFirstImage = colors => {\n    if (\n      colors.length === 0 ||\n      !colors[0].images ||\n      colors[0].images.length === 0 ||\n      !colors[0].images[0].image_name\n    )\n      return (\n        <Avatar\n          shape=\"square\"\n          size={140}\n          icon={<Icon type=\"smile\" theme=\"outlined\" />}\n          className=\"avatar-image\"\n        />\n      );\n\n    return (\n      <img\n        alt=\"example\"\n        className=\"product-first-image\"\n        src={`${baseURL}${colors[0].images[0].small_image_link}`}\n      />\n    );\n  };\n\n  const handleProductDelete = () => {\n    doDeleteFetch({\n      url: URLS.productDelete({ slug: selectedProductToDelete.slug }),\n      method: 'POST',\n      onSuccess: (data) => {\n        doProductsFetch({\n          url: URLS.productListGet\n        });\n        setSelectedProductToDelete(null);\n      }\n    });\n  };\n\n  const handleDeletedProductModal = product => {\n    setSelectedProductToDelete({ ...product });\n  };\n\n  return (\n    <Row className=\"product-list-wrapper\" gutter={[30, 30]}>\n      {productListData instanceof Array &&\n        productListData.map((product, index) => (\n          <Col span={6} key={product.slug}>\n            <Card\n              cover={getProductFirstImage(product.colors)}\n              actions={[\n                <Icon\n                  type=\"delete\"\n                  key=\"delete\"\n                  onClick={() => handleDeletedProductModal(product)}\n                />,\n                <a href={`${baseURL}/${product.slug}`} target=\"_blank\">\n                  <Icon type=\"link\" key=\"link\" />\n                </a>,\n                <Link to={`product/${product.slug}`}>\n                  <Icon type=\"edit\" key=\"edit\" />\n                </Link>,\n              ]}\n            >\n              <Meta\n                title={product.name}\n                description={`${product.category_slug} ${\n                  product.category_type_slug\n                    ? `-${product.category_type_slug}`\n                    : ''\n                }`}\n              />\n            </Card>\n          </Col>\n        ))}\n\n      <Modal\n        title={`Delete product: ${selectedProductToDelete &&\n          selectedProductToDelete.name}`}\n        visible={!!selectedProductToDelete}\n        onOk={handleProductDelete}\n        onCancel={() => setSelectedProductToDelete(null)}\n      >\n        Do you confirm deleteing the product?\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'}, \n     {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image',],\n  ],\n  clipboard: {\n    matchVisual: false,\n  }\n}\n\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nfunction RichInput({ placeholder = '', onChangeHandler, initialValue = ''}) {\n  const [ editorHtml, setEditorHtml ] = useState('');\n\n  useEffect(() => {\n    if(!editorHtml && !!initialValue) {\n      setEditorHtml(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChange = (html) => {\n    setEditorHtml(html);\n    onChangeHandler(html);\n  }\n\n  return (\n    <ReactQuill \n      onChange={handleChange}\n      value={editorHtml}\n      modules={modules}\n      formats={formats}\n      placeholder={placeholder}\n    />\n   )\n}\n\nexport default RichInput;","export const checkValue = (value, key) => {\n\n\tvalue = key ? key.split(\".\").reduce( (o, x) => (typeof o == \"undefined\" || o === null) ? o : o[x] , value) : value;\n\treturn ((!value && value !== false) || /^\\s*$/.test(value)) ? false : true;\n};\n\nexport const isEmail = (email) => /^[a-z0-9._%+-]+@.+\\..+/.test(email);\n\nexport const isName = (name) => /^(?=.{2,150}$).*/.test(name);\n\nexport const createHash = (arr, key) => {\n  var Hash = function () {\n    this.data = {};\n    if (arr && Array.isArray(arr)) {\n      arr.map((o) => {\n        this.data[o[key]] = o;\n      });\n      this.size = arr.length;\n    }\n    else {\n      this.size = 0;\n    }\n  };\n  Hash.prototype.keys = function () {\n    return Object.keys(this.data);\n  }\n  Hash.prototype.values = function () {\n    return Object.values(this.data);\n  }\n\n  return new Hash();\n};\n\nexport const getParentChildArr = (arr, parentIdKey) => {\n  var tree = [],\n      mappedArr = {},\n      arrElem,\n      mappedElem;\n\n  // First map the nodes of the array to an object -> create a hash table.\n  for(var i = 0, len = arr.length; i < len; i++) {\n    arrElem = arr[i];\n    mappedArr[arrElem.id] = arrElem;\n    mappedArr[arrElem.id]['children'] = [];\n    mappedArr[arrElem.id]['key'] = arrElem.id;\n  }\n\n\n  for (var id in mappedArr) {\n    if (mappedArr.hasOwnProperty(id)) {\n      mappedElem = mappedArr[id];\n      // If the element is not at the root level, add it to its parent array of children.\n      if (mappedElem[parentIdKey|| 'parent_id']) {\n        mappedArr[mappedElem[parentIdKey || 'parent_id']]['children'].push(mappedElem);\n      }\n      // If the element is at the root level, add it to first level elements array.\n      else {\n        tree.push(mappedElem);\n      }\n    }\n  }\n  return tree;\n};\n\nexport const extractSlug = (name = '') => {\n  return name\n    .toLowerCase()\n    .replace(/ /g, '-')\n    .replace(/[^\\w-]+/g, '');\n};\n\nexport const arrayHasDuplicates = (array) => {\n  var valuesSoFar = [];\n  for (var i = 0; i < array.length; ++i) {\n      var value = array[i];\n      if (valuesSoFar.indexOf(value) !== -1) {\n          return true;\n      }\n      valuesSoFar.push(value);\n  }\n  return false;\n}","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Select,\n  Typography,\n  notification,\n  Upload,\n  Icon,\n  Divider,\n  Switch\n} from 'antd';\n\nimport RichInput from '../RichInput';\n\nimport { getParentChildArr } from '../../utils/helpers';\nimport { StoreContext } from '../../contexts';\nimport { URLS, FIRST_INDEX, LAST_INDEX } from '../../constants';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { baseURL } from '../../utils/API';\nimport '../../assets/scss/CreateUpdateProductForm.scss';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction CreateUpdateProductForm({\n  form,\n  handleFormSubmit,\n  productsList = [],\n  productObj = {}\n}) {\n  const {\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    getFieldValue,\n    getFieldsValue\n  } = form;\n  const {\n    data: { categories = [], sizes = [], colors = [] }\n  } = useContext(StoreContext);\n  const parentCategories = getParentChildArr(categories);\n  const [categoryTypes, setCategoryTypes] = useState([]);\n  const [categoryTags, setCategoryTags] = useState([]);\n  const [sizeFieldsCountArr, setSizeFieldsCountArr] = useState([0]);\n  const [colorFieldsCountArr, setColorFieldsCountArr] = useState([0]);\n  const [imagesListObj, setImagesListObj] = useState({ 0: [] });\n\n  const { doFetch: doImageUpload } = useFetch();\n  const prevProductObj = usePrevious(productObj);\n  const prevParentCategories = usePrevious(parentCategories);\n\n  useEffect(() => {\n    const productObjIsReady =\n      JSON.stringify(prevProductObj) !== JSON.stringify(productObj);\n    const categoriesAreReady =\n      JSON.stringify(prevParentCategories) !== JSON.stringify(parentCategories);\n    if (productObjIsReady || categoriesAreReady) {\n      !!productObj.category && onCategoryChanged(productObj.category);\n      !!productObj.type && onCategoryTypeChanged(productObj.type);\n      !!productObj.type && setFieldsValue({ type: productObj.type });\n      !!productObj.sizeFieldsCountArr &&\n        setSizeFieldsCountArr(productObj.sizeFieldsCountArr);\n      !!productObj.colorFieldsCountArr &&\n        setColorFieldsCountArr(productObj.colorFieldsCountArr);\n      !!productObj.imageListObj && setImagesListObj(productObj.imageListObj);\n    }\n  }, [productObj, parentCategories]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const values = await validateFields();\n    handleFormSubmit(values);\n  };\n\n  const onCategoryChanged = value => {\n    const selectedIndex = parentCategories.findIndex(({ id }) => value == id);\n    setCategoryTypes(\n      parentCategories[selectedIndex]\n        ? parentCategories[selectedIndex].children\n        : []\n    );\n    setFieldsValue({\n      type: undefined\n    });\n  };\n\n  const onCategoryTypeChanged = value => {\n    const selectedIndex = categoryTypes.findIndex(({ id }) => value == id);\n    setCategoryTags(\n      categoryTypes[selectedIndex] ? categoryTypes[selectedIndex].children : []\n    );\n    setFieldsValue({\n      tag: undefined\n    });\n  };\n\n  const setDescription = value => {\n    setFieldsValue({\n      description: value\n    });\n  };\n\n  const setDetails = value => {\n    setFieldsValue({\n      details: value\n    });\n  };\n\n  const showWarningNotification = msg => {\n    notification.warning({\n      placement: 'bottomRight',\n      message: 'An error occured!',\n      duration: 4,\n      description: msg\n    });\n  };\n\n  const addNewSizeFields = prevIndex => {\n    const hasPrevSize = !!getFieldValue('sizeOption' + prevIndex);\n    if (!hasPrevSize) {\n      showWarningNotification('please enter the size before adding a new one.');\n    } else {\n      const tmpArr = [...sizeFieldsCountArr];\n      tmpArr.push(tmpArr[tmpArr.length - 1] + 1);\n      setSizeFieldsCountArr(tmpArr);\n    }\n  };\n\n  const removeSizeFields = (index, fieldIndex) => {\n    const tmpArr = [...sizeFieldsCountArr];\n    tmpArr.splice(index, 1);\n    setSizeFieldsCountArr(tmpArr);\n  };\n\n  const addNewColorFields = prevIndex => {\n    const hasPrevColor = !!getFieldValue('colorOption' + prevIndex);\n    if (!hasPrevColor) {\n      showWarningNotification(\n        'please enter the color before adding a new one.'\n      );\n    } else {\n      const tmpArr = [...colorFieldsCountArr];\n      const lastFiledValue = tmpArr[tmpArr.length - 1];\n      tmpArr.push(lastFiledValue + 1);\n      setColorFieldsCountArr(tmpArr);\n      setImagesListObj({\n        ...imagesListObj,\n        [lastFiledValue + 1]: []\n      });\n    }\n  };\n\n  const removeColorFields = (index, fieldIndex) => {\n    const tmpArr = [...colorFieldsCountArr];\n    tmpArr.splice(index, 1);\n    setColorFieldsCountArr(tmpArr);\n\n    const tmpImagesListObj = imagesListObj;\n    delete tmpImagesListObj[fieldIndex];\n    setImagesListObj(tmpImagesListObj);\n  };\n\n  const uploadImage = (file, fieldIndex) => {\n    doImageUpload({\n      method: 'FILE_POST',\n      params: { product_image: file },\n      url: URLS.imageUpload,\n      showSuccessNotification: true,\n      successMessage: 'Image uploaded successfully.',\n      onSuccess: imageResponse => {\n        let imagesListObjTmp = { ...imagesListObj };\n\n        imagesListObjTmp[fieldIndex].push({\n          uid: imageResponse.image_name,\n          thumbUrl: baseURL + imageResponse.image_link,\n          name: imageResponse.image_name\n        });\n        setImagesListObj(imagesListObjTmp);\n        setFieldsValue({\n          [`colorImages${fieldIndex}`]: imagesListObjTmp[fieldIndex]\n        });\n      }\n    });\n  };\n\n  const handleImageUploadRemove = (fileData, fieldIndex) => {\n    const tmpImagesListObj = { ...imagesListObj };\n    const findSelectedImageIndex = imagesListObj[fieldIndex].findIndex(\n      ({ uid }) => fileData.uid === uid\n    );\n    tmpImagesListObj[fieldIndex].splice(findSelectedImageIndex, 1);\n    setImagesListObj(tmpImagesListObj);\n    setFieldsValue({\n      [`colorImages${fieldIndex}`]: tmpImagesListObj[fieldIndex]\n    });\n  };\n\n  const handleDefaultColorChange = (value, fieldIndex) => {\n    Object.keys(getFieldsValue()).forEach(fieldName => {\n      if (\n        fieldName.startsWith('colorDefault') &&\n        fieldIndex != fieldName[fieldName.length - 1]\n      ) {\n        setFieldsValue({\n          [fieldName]: false\n        });\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Form onSubmit={handleSubmit} className=\"form-wrapper\">\n        <Row>\n          <Col span={12}>\n            <Form.Item label=\"Name:\">\n              {getFieldDecorator('name', {\n                initialValue: productObj.name,\n                rules: [\n                  { required: true, message: 'Please enter product name!' }\n                ]\n              })(<Input placeholder=\"product name\" size=\"large\" />)}\n            </Form.Item>\n          </Col>\n          <Col span={12} />\n        </Row>\n        <Divider />\n        <Row gutter={[20, 0]}>\n          <Col span={8}>\n            <Form.Item label=\"Category\">\n              {getFieldDecorator('category', {\n                initialValue: productObj.category,\n                rules: [\n                  { required: true, message: 'Please select the category!' }\n                ]\n              })(\n                <Select\n                  placeholder=\"Select a category\"\n                  onChange={onCategoryChanged}\n                >\n                  {parentCategories.map((cat, index) => (\n                    <Option value={cat.id} key={index}>\n                      {cat.name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            {categoryTypes.length > 0 && (\n              <Form.Item label=\"Type\">\n                {getFieldDecorator('type', {\n                  initialValue: productObj.type,\n                  rules: [\n                    { required: true, message: 'Please select the type!' }\n                  ]\n                })(\n                  <Select\n                    placeholder=\"Select a type\"\n                    onChange={onCategoryTypeChanged}\n                  >\n                    {categoryTypes.map((cat, index) => (\n                      <Option value={cat.id} key={index}>\n                        {cat.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            )}\n          </Col>\n          <Col span={8}>\n            {categoryTags.length > 0 && (\n              <Form.Item label=\"Tag\">\n                {getFieldDecorator('tag', { initialValue: productObj.tag })(\n                  <Select placeholder=\"Select a tag\">\n                    {categoryTags.map((cat, index) => (\n                      <Option value={cat.id} key={index}>\n                        {cat.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            )}\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Description\">\n            {getFieldDecorator('description', {\n              initialValue: productObj.description\n            })(\n              <RichInput\n                placeholder=\"Description\"\n                initialValue={productObj.description}\n                onChangeHandler={setDescription}\n              />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Details\">\n            {getFieldDecorator('details', { initialValue: productObj.details })(\n              <RichInput\n                placeholder=\"Details\"\n                onChangeHandler={setDetails}\n                initialValue={productObj.description}\n              />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Main Price\" className=\"price-input\">\n            {getFieldDecorator('mainPrice', {\n              initialValue: productObj.mainPrice\n            })(<Input size=\"large\" />)}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Best Product:\">\n            {getFieldDecorator('isBest', { initialValue: productObj.isBest })(\n              <Switch checked={getFieldValue('isBest')} />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Handmade Product:\">\n            {getFieldDecorator('isHandmade', {\n              initialValue: productObj.isHandmade\n            })(<Switch checked={getFieldValue('isHandmade')} />)}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Product Out Of Stock:\">\n            {getFieldDecorator('isOutOfStuck', {\n              initialValue: productObj.isOutOfStuck\n            })(<Switch checked={getFieldValue('isOutOfStuck')} />)}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Col span={8}>\n            <Form.Item label=\"Product Place:\">\n              {getFieldDecorator('sortPlace', {\n                initialValue: productObj.sortPlace || LAST_INDEX\n              })(\n                <Select\n                  showSearch\n                  placeholder=\"Select a product\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) => {\n                    const str = Array.isArray(option.props.children)\n                      ? option.props.children.join('')\n                      : option.props.children;\n                    return str.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                  }}\n                >\n                  <Option value={FIRST_INDEX} style={{ color: '#7bb3b3' }}>\n                    At First\n                  </Option>\n                  <Option value={LAST_INDEX} style={{ color: '#7bb3b3' }}>\n                    At Last\n                  </Option>\n                  {productsList.map(\n                    ({ id, name }) =>\n                      productObj.name !== name && (\n                        <Option key={id} value={id}>\n                          Before: {name}\n                        </Option>\n                      )\n                  )}\n                </Select>\n              )}\n            </Form.Item>\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Row>\n            <Title level={4}>Sizes</Title>\n          </Row>\n          {sizeFieldsCountArr.map((fieldIndex, i) => (\n            <div key={i}>\n              <Form.Item className=\"hidden\">\n                {getFieldDecorator(`sizeRefId${fieldIndex}`, {\n                  initialValue: productObj[`sizeRefId${fieldIndex}`],\n                })(\n                  <Input />\n                )}\n              </Form.Item>\n              <Row gutter={[5, 0]} key={fieldIndex}>\n                <Col span={3}>\n                  <Form.Item label=\"Size:\">\n                    {getFieldDecorator(`sizeOption${fieldIndex}`, {\n                      initialValue: productObj[`sizeOption${fieldIndex}`]\n                    })(\n                      <Select placeholder=\"Select a size\">\n                        {sizes.map((size, index) => (\n                          <Option value={size.id} key={index}>\n                            {size.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Size detail:\">\n                    {getFieldDecorator(`sizeDetail${fieldIndex}`, {\n                      initialValue: productObj[`sizeDetail${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Size Price:\">\n                    {getFieldDecorator(`sizePrice${fieldIndex}`, {\n                      initialValue: productObj[`sizePrice${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Height:\">\n                    {getFieldDecorator(`sizeHeight${fieldIndex}`, {\n                      initialValue: productObj[`sizeHeight${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Chest:\">\n                    {getFieldDecorator(`sizeChest${fieldIndex}`, {\n                      initialValue: productObj[`sizeChest${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Waist:\">\n                    {getFieldDecorator(`sizeWaist${fieldIndex}`, {\n                      initialValue: productObj[`sizeWaist${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Hips:\">\n                    {getFieldDecorator(`sizeHips${fieldIndex}`, {\n                      initialValue: productObj[`sizeHips${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  {sizeFieldsCountArr.length !== 1 && (\n                    <Button\n                      className=\"m-t-43 m-r-5\"\n                      type=\"dashed\"\n                      icon=\"minus\"\n                      onClick={() => removeSizeFields(i, fieldIndex)}\n                    />\n                  )}\n                  {i === sizeFieldsCountArr.length - 1 && (\n                    <Button\n                      className=\"m-t-43\"\n                      type=\"dashed\"\n                      icon=\"plus\"\n                      onClick={() => addNewSizeFields(fieldIndex)}\n                    />\n                  )}\n                </Col>\n                <Col span={3}></Col>\n              </Row>\n              {sizeFieldsCountArr.length !== 1 &&\n                i !== sizeFieldsCountArr.length - 1 && <Divider dashed />}\n            </div>\n          ))}\n        </Row>\n        <Divider />\n        <Row>\n          <Row>\n            <Title level={4}>Colors & Images</Title>\n          </Row>\n          {colorFieldsCountArr.map((fieldIndex, i) => (\n            <div key={i}>\n              <Form.Item className=\"hidden\">\n                {getFieldDecorator(`colorRefId${fieldIndex}`, {\n                  initialValue: productObj[`colorRefId${fieldIndex}`],\n                })(\n                  <Input />\n                )}\n              </Form.Item>\n              <Row gutter={[10, 0]} key={fieldIndex}>\n                <Col span={4}>\n                  <Form.Item label={`Color: ${fieldIndex} index: ${i}`}>\n                    {getFieldDecorator(`colorOption${fieldIndex}`, {\n                      initialValue: productObj[`colorOption${fieldIndex}`]\n                    })(\n                      <Select placeholder=\"Select a color\">\n                        {colors.map((color, index) => (\n                          <Option value={color.id} key={index}>\n                            {color.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item label=\"Color code:\">\n                    {getFieldDecorator(`colorCode${fieldIndex}`, {\n                      initialValue: productObj[`colorCode${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    label=\"Color Images:\"\n                    className=\"product-image-upload\"\n                  >\n                    {getFieldDecorator(`colorImages${fieldIndex}`, {\n                      initialValue: productObj[`colorImages${fieldIndex}`]\n                    })(\n                      <Upload\n                        listType=\"picture-card\"\n                        fileList={imagesListObj[fieldIndex]}\n                        customRequest={({ file }) =>\n                          uploadImage(file, fieldIndex)\n                        }\n                        onRemove={file =>\n                          handleImageUploadRemove(file, fieldIndex)\n                        }\n                      >\n                        {imagesListObj[fieldIndex] &&\n                        imagesListObj[fieldIndex].length >= 8 ? null : (\n                          <>\n                            <Icon type=\"plus\" />\n                            <div className=\"ant-upload-text\">Upload</div>\n                          </>\n                        )}\n                      </Upload>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item label=\"Set Default Color:\">\n                    {getFieldDecorator(`colorDefault${fieldIndex}`, {\n                      initialValue: productObj[`colorDefault${fieldIndex}`]\n                    })(\n                      <Switch\n                        checked={getFieldValue(`colorDefault${fieldIndex}`)}\n                        onChange={value =>\n                          handleDefaultColorChange(value, fieldIndex)\n                        }\n                      />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  {colorFieldsCountArr.length !== 1 && (\n                    <Button\n                      className=\"m-t-43 m-r-5\"\n                      type=\"dashed\"\n                      icon=\"minus\"\n                      onClick={() => removeColorFields(i, fieldIndex)}\n                    />\n                  )}\n                  {i === colorFieldsCountArr.length - 1 && (\n                    <Button\n                      className=\"m-t-43\"\n                      type=\"dashed\"\n                      icon=\"plus\"\n                      onClick={() => addNewColorFields(fieldIndex)}\n                    />\n                  )}\n                </Col>\n              </Row>\n              {colorFieldsCountArr.length !== 1 &&\n                i !== colorFieldsCountArr.length - 1 && <Divider dashed />}\n            </div>\n          ))}\n        </Row>\n        {/* <Row>\n        <Form.Item>\n          {getFieldDecorator('description', {\n            rules: [{ required: true, message: 'Please enter product description!' }]\n          })(\n            <Input\n              placeholder=\"product description\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n      </Row> */}\n        <Row className=\"m-t-30\">\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n              Save\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n      {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n      </Modal> */}\n    </Row>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(CreateUpdateProductForm);\n","import { notification } from 'antd';\n\nimport {\n  FIRST_INDEX,\n  LAST_INDEX,\n  SORT_INDEX_STEP,\n  SORT_INDEX_DIGITS_NUMBER\n} from '../constants';\nimport { createHash, extractSlug, arrayHasDuplicates } from './helpers';\n\nexport const extractSizesArr = (values = {}) => {\n  const sizesArr = Object.keys(values)\n    .filter(key => key.startsWith('sizeOption'))\n    .map(key => {\n      const sizeIndex = key[key.length - 1];\n      return {\n        is_checked: true,\n        refId: values[`sizeRefId${sizeIndex}`],\n        id: values[`sizeOption${sizeIndex}`],\n        details: values[`sizeDetail${sizeIndex}`],\n        height: values[`sizeHeight${sizeIndex}`],\n        hips: values[`sizeHips${sizeIndex}`],\n        chest: values[`sizeChest${sizeIndex}`],\n        waistline: values[`sizeWaist${sizeIndex}`],\n        size_price: values[`sizePrice${sizeIndex}`],\n        amount: values[`sizeAmount${sizeIndex}`]\n      };\n    });\n  return !sizesArr[0].id ? [] : sizesArr;\n};\n\nexport const extractColorsArr = values => {\n  const colorsArr = Object.keys(values)\n    .filter(key => key.startsWith('colorOption'))\n    .map(key => {\n      const colorIndex = key[key.length - 1];\n      return {\n        is_checked: true,\n        refId: values[`colorRefId${colorIndex}`],\n        id: values[`colorOption${colorIndex}`],\n        product_color_code: values[`colorCode${colorIndex}`],\n        images: values[`colorImages${colorIndex}`]\n          ? values[`colorImages${colorIndex}`].map(imgObj => ({\n              image_name: imgObj.name\n            }))\n          : [],\n        amount: values[`colorAmount${colorIndex}`]\n      };\n    });\n  return !colorsArr[0].id ? [] : colorsArr.reverse();\n};\n\nexport const extractDefaultColorId = values => {\n  const defaultColorInArr = Object.keys(values).filter(\n    key => key.startsWith('colorDefault') && !!values[key]\n  );\n\n  if (defaultColorInArr.length === 0) return;\n\n  const defaultColorIndex =\n    defaultColorInArr[0][defaultColorInArr[0].length - 1];\n  return values[`colorOption${defaultColorIndex}`];\n};\n\nexport const extractProductPlace = (sortIndex, productsList) => {\n  const productsListHashObj = createHash(productsList, 'id');\n  const productsIndexesArr = productsListHashObj\n    .values()\n    .map(({ sort_index }) => sort_index);\n\n  const isFirstProduct = sortIndex === Math.min(...productsIndexesArr);\n  const isLastProduct = sortIndex === Math.max(...productsIndexesArr);\n  \n  const getPlaceInBetween = () =>\n    Math.min(...productsIndexesArr.filter(number => number > sortIndex));\n\n  switch (true) {\n    case isFirstProduct:\n      return FIRST_INDEX;\n\n    case isLastProduct:\n      return LAST_INDEX;\n\n    default:\n      return getPlaceInBetween();\n  }\n};\n\nexport const extractProductIndex = ({ sortPlace }, productsList) => {\n  const productsListHashObj = createHash(productsList, 'id');\n  const productsIndexesArr = productsListHashObj\n    .values()\n    .map(({ sort_index }) => sort_index);\n  const firstProductId = Number(productsListHashObj.keys()[0]);\n  let sortIndex;\n\n  switch (sortPlace) {\n    case LAST_INDEX:\n      sortIndex = null;\n      break;\n\n    case FIRST_INDEX:\n    case firstProductId:\n      const minIndex = Math.min(...productsIndexesArr);\n      sortIndex = Number(\n        Number(minIndex - 0.1 + SORT_INDEX_STEP).toFixed(\n          SORT_INDEX_DIGITS_NUMBER\n        )\n      );\n      break;\n\n    default:\n      const beforeIndex = productsListHashObj.data[sortPlace].sort_index;\n      const nearestSmallestIndex = Math.max(\n        ...productsIndexesArr.filter(number => number < beforeIndex)\n      );\n      sortIndex = Number(\n        Number(nearestSmallestIndex + SORT_INDEX_STEP).toFixed(\n          SORT_INDEX_DIGITS_NUMBER\n        )\n      );\n      while (productsIndexesArr.includes(sortIndex)) {\n        sortIndex = Number(\n          Number(sortIndex + SORT_INDEX_STEP).toFixed(SORT_INDEX_DIGITS_NUMBER)\n        );\n      }\n      break;\n  }\n\n  return sortIndex;\n};\n\nexport const extractProductObj = (values, productsList) => ({\n  name: values.name,\n  slug: extractSlug(values.name),\n  category_id: values.category,\n  category_type_id: values.type,\n  description: values.description,\n  details: values.details,\n  price: values.mainPrice,\n  currency: 'EUR',\n  is_best: values.isBest ? '1' : '0',\n  is_handmade: values.isHandmade ? '1' : '0',\n  stock_status: values.isOutOfStuck ? '0' : '1',\n  default_color_id: extractDefaultColorId(values),\n  sort_index: extractProductIndex(values, productsList),\n  sizes: extractSizesArr(values),\n  colors: extractColorsArr(values),\n});\n\nexport const validateProduct = (paramsObj) => {\n  let errorMessage;\n\n  if(paramsObj.colors.length === 0) {\n    errorMessage = 'There should be at least one color added.';\n  }\n  if(paramsObj.sizes.length === 0) {\n    errorMessage = 'There should be at least one size added.';\n  }\n\n  const colorsIds = paramsObj.colors.map(color => color.id);\n  if(arrayHasDuplicates(colorsIds)) {\n    errorMessage = 'Colors can not be duplicated, each color should be different from the other.';\n  }\n\n  const sizesIds = paramsObj.sizes.map(size => size.id);\n  if(arrayHasDuplicates(sizesIds)) {\n    errorMessage = 'Sizes can not be duplicated, each size should be different from the other.';\n  }\n\n  if(!!errorMessage) {\n    notification.warning({\n      placement: 'bottomRight',\n      errorMessage: 'An error occured!',\n      duration: 7,\n      description: errorMessage\n    });\n    return false;\n  }\n  else{\n    return true;\n  }\n};\n","import React, { useState } from 'react';\nimport { Form } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nimport CreateUpdateProductForm from '../../components/CreateUpdateProductForm';\n\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { extractProductObj, validateProduct } from '../../utils/productCreateUpdate';\nimport '../../assets/scss/createProduct.scss';\n\nfunction CreateProduct() {\n  const { doFetch: doProductCreateFetch, } = useFetch();\n  const { data: productsList } = useFetch({\n    url: URLS.productListGet,\n    defaultValue: [],\n  });\n  const [productCreated, setProductCreated] = useState(false);\n\n  const handleFormSubmit = values => {\n    const paramsObj = extractProductObj(values, productsList);\n    if(!validateProduct(paramsObj)) return;  \n\n    doProductCreateFetch({\n      url: URLS.productCreate,\n      params: paramsObj,\n      onSuccess: data => !!data.id && setProductCreated(true)\n    });\n  };\n\n  return (\n    <div className=\"main\">\n      {productCreated && <Redirect to=\"/\" />}\n      <div className=\"form-wrapper\">\n        <CreateUpdateProductForm handleFormSubmit={handleFormSubmit} productsList={productsList} />\n      </div>\n      <div className=\"brief-wrapper hidden\">sdcsa</div>\n    </div>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(CreateProduct);\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Tree,\n  Input,\n  Modal,\n  Row,\n  Icon,\n  notification,\n  Button,\n  Form,\n  Select\n} from 'antd';\n\nimport { StoreContext } from '../../contexts';\nimport { getParentChildArr, extractSlug } from '../../utils/helpers';\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\n\nimport '../../assets/scss/category.scss';\n\nconst { TreeNode } = Tree;\nconst { Search } = Input;\nconst { Option } = Select;\n\nfunction Category({ form }) {\n  const {\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    resetFields\n  } = form;\n  const {\n    data: { categories = [] },\n    doCategoriesFetch\n  } = useContext(StoreContext);\n  const categoriesList = getParentChildArr(categories);\n\n  const [expandedKeys, setExpandedKeys] = useState([]);\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\n  const [createCategoryModalOpen, setCreateCategoryModalOpen] = useState(false);\n  const [categoryTypes, setCategoryTypes] = useState([]);\n  const [deleteModalItem, setDeleteModalItem] = useState({});\n  const [updateModalItem, setUpdateModalItem] = useState({});\n  const [updateModalItemName, setUpdateModalItemName] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n\n  const { doFetch: doDeleteFetch } = useFetch();\n  const { doFetch: doUpdateFetch } = useFetch();\n  const { doFetch: doCreateFetch } = useFetch();\n\n  useEffect(() => {\n    if (categoriesList && categoriesList.length && expandedKeys.length === 0) {\n      setExpandedKeys(categoriesList.map(category => category.id));\n    }\n  }, [categoriesList]);\n\n  const dataList = [];\n  const generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n      const node = data[i];\n      const { key, name } = node;\n      dataList.push({ key, name });\n      if (node.children) {\n        generateList(node.children);\n      }\n    }\n  };\n\n  const getParentKey = (key, tree) => {\n    let parentKey;\n    for (let i = 0; i < tree.length; i++) {\n      const node = tree[i];\n      if (node.children) {\n        if (node.children.some(item => item.key === key)) {\n          parentKey = node.key;\n        } else if (getParentKey(key, node.children)) {\n          parentKey = getParentKey(key, node.children);\n        }\n      }\n    }\n    return parentKey;\n  };\n\n  generateList(categoriesList);\n\n  const handleTreeExpand = expandedKeys => {\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(true);\n  };\n\n  const handleSearchChange = e => {\n    const { value } = e.target;\n    const expandedKeys = dataList\n      .map(item => {\n        if (item.name && item.name.indexOf(value) > -1) {\n          return getParentKey(item.key, categoriesList);\n        }\n        return null;\n      })\n      .filter((item, i, self) => item && self.indexOf(item) === i);\n    setSearchValue(value);\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(true);\n  };\n\n  const handleCategoryDelete = () => {\n    doDeleteFetch({\n      url: URLS.categoryDelete({ slug: deleteModalItem.slug }),\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Category ${deleteModalItem.name} has been deleted`,\n      onSuccess: data => {\n        doCategoriesFetch();\n        setDeleteModalItem({});\n      }\n    });\n  };\n\n  const handleCategoryUpdate = () => {\n    if (!updateModalItemName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the category name!',\n        duration: 4\n      });\n      return;\n    }\n    doUpdateFetch({\n      url: URLS.categoryUpdate({ slug: updateModalItem.slug }),\n      params: {\n        name: updateModalItemName\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Category ${updateModalItemName} has been updated`,\n      onSuccess: data => {\n        doCategoriesFetch();\n        setUpdateModalItem({});\n        setUpdateModalItemName('');\n      }\n    });\n  };\n\n  const onCategoryChanged = value => {\n    const selectedIndex = categoriesList.findIndex(({ id }) => value === id);\n    setCategoryTypes(categoriesList[selectedIndex].children);\n    setFieldsValue({\n      parentType: undefined\n    });\n  };\n\n  const closeCreateCategoryModal = () => {\n    setCreateCategoryModalOpen(false);\n    setCategoryTypes([]);\n    resetFields();\n  };\n\n  const handleCategoryCreate = async e => {\n    e.preventDefault();\n    const { categoryName, parentCategory, parentType } = await validateFields();\n    doCreateFetch({\n      url: URLS.categoryCreate,\n      params: {\n        name: categoryName,\n        slug: extractSlug(categoryName),\n        parent_id: parentType || parentCategory\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Category ${categoryName} has been created`,\n      onSuccess: data => {\n        doCategoriesFetch();\n        closeCreateCategoryModal();\n      }\n    });\n  };\n\n  const getUpdateIcon = item => (\n    <Icon\n      type=\"edit\"\n      onClick={() => {\n        setUpdateModalItem(item);\n        setUpdateModalItemName(item.name);\n      }}\n      className=\"m-l-20 m-r-15\"\n      theme=\"twoTone\"\n      twoToneColor=\"#1890ff\"\n    />\n  );\n\n  const getDeleteIcon = item => (\n    <Icon\n      type=\"delete\"\n      onClick={() => setDeleteModalItem(item)}\n      theme=\"twoTone\"\n      twoToneColor=\"#f5222d\"\n    />\n  );\n\n  const loop = data =>\n    data.map((item, itemIndex) => {\n      const index = item.name.indexOf(searchValue);\n      const beforeStr = item.name.substr(0, index);\n      const afterStr = item.name.substr(index + searchValue.length);\n      const title =\n        index > -1 ? (\n          <h3 className=\"category-item\">\n            {beforeStr}\n            <span style={{ color: '#f50' }}>{searchValue}</span>\n            {afterStr}\n            {getUpdateIcon(item)}\n            {getDeleteIcon(item)}\n          </h3>\n        ) : (\n          <h3 className=\"category-item\">\n            {item.name}\n            {getUpdateIcon(item)}\n            {getDeleteIcon(item)}\n          </h3>\n        );\n      if (item.children) {\n        return (\n          <TreeNode key={item.key} title={title}>\n            {loop(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode key={item.key} title={title} />;\n    });\n  return (\n    <Row>\n      <Button\n        className=\"category-add-btn\"\n        type=\"primary\"\n        icon=\"folder-add\"\n        onClick={() => setCreateCategoryModalOpen(true)}\n      >\n        Add New Category\n      </Button>\n      <Search\n        style={{ marginBottom: 8 }}\n        placeholder=\"Search\"\n        onChange={handleSearchChange}\n      />\n      <Tree\n        onExpand={handleTreeExpand}\n        expandedKeys={expandedKeys}\n        autoExpandParent={autoExpandParent}\n      >\n        {loop(categoriesList)}\n      </Tree>\n\n      <Modal\n        title={`Delete category - ${deleteModalItem.name}`}\n        visible={!!deleteModalItem.id}\n        onOk={handleCategoryDelete}\n        onCancel={() => setDeleteModalItem({})}\n      >\n        would you really like to Delete <b>{deleteModalItem.name}</b> category?\n      </Modal>\n\n      <Modal\n        title={`Update category - ${updateModalItem.name}`}\n        visible={!!updateModalItem.id}\n        onOk={handleCategoryUpdate}\n        onCancel={() => setUpdateModalItem({})}\n      >\n        <Input\n          value={updateModalItemName}\n          onPressEnter={handleCategoryUpdate}\n          onChange={e => setUpdateModalItemName(e.target.value)}\n        />\n      </Modal>\n\n      <Modal\n        title={`Create new category`}\n        visible={createCategoryModalOpen}\n        onOk={handleCategoryCreate}\n        okText=\"Create\"\n        onCancel={closeCreateCategoryModal}\n      >\n        <Form onSubmit={handleCategoryCreate} className=\"login-form\">\n          <Form.Item label=\"Name\">\n            {getFieldDecorator('categoryName', {\n              rules: [\n                { required: true, message: 'Please enter category name!' }\n              ]\n            })(<Input placeholder=\"Name\" size=\"large\" />)}\n          </Form.Item>\n          <Form.Item label=\"Under Category\">\n            {getFieldDecorator('parentCategory')(\n              <Select\n                placeholder=\"Select a category\"\n                onChange={onCategoryChanged}\n              >\n                {categoriesList.map((cat, index) => (\n                  <Option value={cat.id} key={index}>\n                    {cat.name}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          {categoryTypes.length > 0 && (\n            <Form.Item label=\"Under Type\">\n              {getFieldDecorator('parentType')(\n                <Select placeholder=\"Select a type\">\n                  {categoryTypes.map((cat, index) => (\n                    <Option value={cat.id} key={index}>\n                      {cat.name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          )}\n        </Form>\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Form.create({ name: 'categoryForm' })(Category);\n","import React, { useContext, useState } from 'react';\nimport { List, Row, Icon, Modal, Input, Button, notification } from 'antd';\n\nimport { StoreContext } from '../../contexts';\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { extractSlug } from '../../utils/helpers';\n\nfunction Size() {\n  const {\n    data: { sizes = [] },\n    doSizesFetch\n  } = useContext(StoreContext);\n\n  const [deleteModalItem, setDeleteModalItem] = useState({});\n  const [updateModalItem, setUpdateModalItem] = useState({});\n  const [updateModalItemName, setUpdateModalItemName] = useState('');\n  const [createSizeModalOpen, setCreateSizeModalOpen] = useState(false);\n  const [newSizeName, setNewSizeName] = useState('');\n\n  const { doFetch: doCreateFetch } = useFetch();\n  const { doFetch: doUpdateFetch } = useFetch();\n  const { doFetch: doDeleteFetch } = useFetch();\n\n  const closeCreateSizeModal = () => {\n    setCreateSizeModalOpen(false);\n    setNewSizeName('');\n  };\n\n  const handleSizeDelete = () => {\n    doDeleteFetch({\n      url: URLS.sizeDelete({ slug: deleteModalItem.slug }),\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Size ${deleteModalItem.name} has been deleted`,\n      onSuccess: data => {\n        doSizesFetch();\n        setDeleteModalItem({});\n      }\n    });\n  };\n\n  const handleSizeUpdate = () => {\n    if (!updateModalItemName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the size name!',\n        duration: 4\n      });\n      return;\n    }\n    doUpdateFetch({\n      url: URLS.sizeUpdate({ slug: updateModalItem.slug }),\n      params: {\n        name: updateModalItemName\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Size ${updateModalItemName} has been updated`,\n      onSuccess: data => {\n        doSizesFetch();\n        setUpdateModalItem({});\n        setUpdateModalItemName('');\n      }\n    });\n  };\n\n  const handleSizeCreate = () => {\n    if (!newSizeName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the size name!',\n        duration: 4\n      });\n      return;\n    }\n    doCreateFetch({\n      url: URLS.sizeCreate,\n      params: {\n        name: newSizeName,\n        slug: extractSlug(newSizeName)\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Size ${newSizeName} has been created`,\n      onSuccess: data => {\n        doSizesFetch();\n        closeCreateSizeModal();\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Row>\n        <Button\n          className=\"f-r\"\n          type=\"primary\"\n          icon=\"folder-add\"\n          onClick={() => setCreateSizeModalOpen(true)}\n        >\n          Add New Category\n        </Button>\n      </Row>\n      <h3 style={{ marginBottom: 16 }}>Available Sizes:</h3>\n      <List\n        bordered\n        dataSource={sizes}\n        renderItem={item => (\n          <List.Item className=\"f-s-20\">\n            {item.name}\n            <div className=\"f-r\">\n              <Icon\n                type=\"edit\"\n                onClick={() => {\n                  setUpdateModalItem(item);\n                  setUpdateModalItemName(item.name);\n                }}\n                className=\"m-l-20 m-r-30\"\n                theme=\"twoTone\"\n                twoToneColor=\"#1890ff\"\n              />\n              <Icon\n                type=\"delete\"\n                onClick={() => setDeleteModalItem(item)}\n                theme=\"twoTone\"\n                twoToneColor=\"#f5222d\"\n              />\n            </div>\n          </List.Item>\n        )}\n      />\n\n      <Modal\n        title={`Delete size - ${deleteModalItem.name}`}\n        visible={!!deleteModalItem.id}\n        onOk={handleSizeDelete}\n        onCancel={() => setDeleteModalItem({})}\n      >\n        would you really like to Delete <b>{deleteModalItem.name}</b> size?\n      </Modal>\n\n      <Modal\n        title={`Update size - ${updateModalItem.name}`}\n        visible={!!updateModalItem.id}\n        onOk={handleSizeUpdate}\n        onCancel={() => setUpdateModalItem({})}\n      >\n        <Input\n          value={updateModalItemName}\n          onPressEnter={handleSizeUpdate}\n          onChange={e => setUpdateModalItemName(e.target.value)}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Create new size\"\n        visible={createSizeModalOpen}\n        onOk={handleSizeCreate}\n        onCancel={closeCreateSizeModal}\n      >\n        name:\n        <Input\n          value={newSizeName}\n          onPressEnter={handleSizeCreate}\n          onChange={e => setNewSizeName(e.target.value)}\n        />\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Size;\n","import React, { useContext, useState } from 'react';\nimport { List, Row, Icon, Modal, Input, Button, notification } from 'antd';\nimport { SketchPicker } from 'react-color';\n\nimport { StoreContext } from '../../contexts';\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { extractSlug } from '../../utils/helpers';\n\nfunction Color() {\n  const {\n    data: { colors = [] },\n    doColorsFetch\n  } = useContext(StoreContext);\n\n  const [deleteModalItem, setDeleteModalItem] = useState({});\n  const [updateModalItem, setUpdateModalItem] = useState({});\n  const [updateModalItemName, setUpdateModalItemName] = useState('');\n  const [createColorModalOpen, setCreateColorModalOpen] = useState(false);\n  const [newColorName, setNewColorName] = useState('');\n  const [selectedColorHex, setSelectedColorHex] = useState('');\n  const [colorPickerIsVisible, setColorPickerIsVisible] = useState(false);\n\n  const { doFetch: doCreateFetch } = useFetch();\n  const { doFetch: doUpdateFetch } = useFetch();\n  const { doFetch: doDeleteFetch } = useFetch();\n\n  const closeCreateColorModal = () => {\n    setCreateColorModalOpen(false);\n    setColorPickerIsVisible(false);\n    setSelectedColorHex('');\n    setNewColorName('');\n  };\n\n  const handleColorDelete = () => {\n    doDeleteFetch({\n      url: URLS.colorDelete({ slug: deleteModalItem.slug }),\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Color ${deleteModalItem.name} has been deleted`,\n      onSuccess: data => {\n        doColorsFetch();\n        setDeleteModalItem({});\n      }\n    });\n  };\n\n  const handleColorUpdate = () => {\n    if (!updateModalItemName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the color name!',\n        duration: 4\n      });\n      return;\n    }\n    doUpdateFetch({\n      url: URLS.colorUpdate({ slug: updateModalItem.slug }),\n      params: {\n        name: updateModalItemName\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Color ${updateModalItemName} has been updated`,\n      onSuccess: data => {\n        doColorsFetch();\n        setUpdateModalItem({});\n        setUpdateModalItemName('');\n      }\n    });\n  };\n\n  const handleColorCreate = () => {\n    if (!newColorName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the color name!',\n        duration: 4\n      });\n      return;\n    }\n    doCreateFetch({\n      url: URLS.colorCreate,\n      params: {\n        name: newColorName,\n        slug: extractSlug(newColorName)\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Color ${newColorName} has been created`,\n      onSuccess: data => {\n        doColorsFetch();\n        closeCreateColorModal();\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Row>\n        <Button\n          className=\"f-r\"\n          type=\"primary\"\n          icon=\"folder-add\"\n          onClick={() => setCreateColorModalOpen(true)}\n        >\n          Add New Category\n        </Button>\n      </Row>\n      <h3 style={{ marginBottom: 16 }}>Available Colors:</h3>\n      <List\n        bordered\n        dataSource={colors}\n        renderItem={item => (\n          <List.Item className=\"f-s-20\">\n            <div className=\"w-100\">\n              <div className=\"f-l\">\n                <span className=\"m-r-30\">{item.name}</span>\n                {/* <span style={{ color: item.hex_code }}>{item.hex_code}</span> */}\n              </div>\n              <div className=\"f-r\">\n                <Icon\n                  type=\"edit\"\n                  onClick={() => {\n                    setUpdateModalItem(item);\n                    setUpdateModalItemName(item.name);\n                  }}\n                  className=\"m-l-20 m-r-30\"\n                  theme=\"twoTone\"\n                  twoToneColor=\"#1890ff\"\n                />\n                <Icon\n                  type=\"delete\"\n                  onClick={() => setDeleteModalItem(item)}\n                  theme=\"twoTone\"\n                  twoToneColor=\"#f5222d\"\n                />\n              </div>\n            </div>\n          </List.Item>\n        )}\n      />\n\n      <Modal\n        title={`Delete color - ${deleteModalItem.name}`}\n        visible={!!deleteModalItem.id}\n        onOk={handleColorDelete}\n        onCancel={() => setDeleteModalItem({})}\n      >\n        would you really like to Delete <b>{deleteModalItem.name}</b> color?\n      </Modal>\n\n      <Modal\n        title={`Update color - ${updateModalItem.name}`}\n        visible={!!updateModalItem.id}\n        onOk={handleColorUpdate}\n        onCancel={() => setUpdateModalItem({})}\n      >\n        <div className=\"m-b-10\">Name:</div>\n        <Input\n          value={updateModalItemName}\n          className=\"m-b-30\"\n          onPressEnter={handleColorUpdate}\n          onChange={e => setUpdateModalItemName(e.target.value)}\n        />\n        {/* <div className=\"m-b-10\">Color Hex:</div>\n        <Button\n          style={{ backgroundColor: updateModalItem.hex_code }}\n          onClick={() => setColorPickerIsVisible(!colorPickerIsVisible)}\n        ></Button>\n        {colorPickerIsVisible && (\n          <div style={{ position: 'absolute' }}>\n            <SketchPicker\n              color={updateModalItem.hex_code || '#fff'}\n              onChangeComplete={({ hex }) => setUpdateModalItem({\n                ...updateModalItem,\n                hex_code: hex,\n              })}\n            />\n          </div>\n        )} */}\n      </Modal>\n\n      <Modal\n        title=\"Create new color\"\n        visible={createColorModalOpen}\n        onOk={handleColorCreate}\n        onCancel={closeCreateColorModal}\n      >\n        <div className=\"m-b-10\">Name:</div>\n        <Input\n          value={newColorName}\n          className=\"m-b-30\"\n          onPressEnter={handleColorCreate}\n          onChange={e => setNewColorName(e.target.value)}\n        />\n        {/* <div className=\"m-b-10\">Color Hex:</div>\n        <Button\n          style={{ backgroundColor: selectedColorHex }}\n          onClick={() => setColorPickerIsVisible(!colorPickerIsVisible)}\n        ></Button>\n        {colorPickerIsVisible && (\n          <div style={{ position: 'absolute' }}>\n            <SketchPicker\n              color={selectedColorHex}\n              onChangeComplete={({ hex }) => setSelectedColorHex(hex)}\n            />\n          </div>\n        )} */}\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Color;\n","import React, { useState } from 'react';\nimport { Empty } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nimport CreateUpdateProductForm from '../../components/CreateUpdateProductForm';\n\nimport { useFetch } from '../../hooks';\nimport { extractProductPlace } from '../../utils/productCreateUpdate';\nimport { baseURL } from '../../utils/API';\nimport { extractProductObj, validateProduct } from '../../utils/productCreateUpdate';\nimport { URLS } from '../../constants';\n\nfunction ProductDetails({ match: { params: { productSlug } } }) {\n  const { data: productData } = useFetch({\n    url: URLS.productItemGet({slug: productSlug}),\n    defaultValue: { sizes: [], colors: [] },\n    onError: err => {\n      setNoProductFoundAlert(true);\n    }\n  });\n  const { data: productsList } = useFetch({\n    url: URLS.productListGet,\n    defaultValue: [],\n  });\n  const { doFetch: doProductUpdateFetch, } = useFetch();\n\n  const [noProductFoundAlert, setNoProductFoundAlert] = useState(false);\n  const [productUpdated, setProductUpdated] = useState(false);\n\n  const productObj = {\n    name: productData.name,\n    category: productData.category_id,\n    type: productData.category_type_id,\n    tag: productData.category_tag_id,\n    description: productData.description,\n    details: productData.details,\n    mainPrice: productData.price,\n    isBest: !!productData.is_best,\n    isHandmade: !!productData.is_handmade,\n    isOutOfStuck: !!!productData.stock_status,\n    sortPlace: extractProductPlace(productData.sort_index, productsList),\n    sizeFieldsCountArr: productData.sizes.length > 0 ? productData.sizes.map((size, index) => index) : [0],\n    colorFieldsCountArr: productData.colors.length > 0 ? productData.colors.map((color, index) => index) : [0],\n  };\n  productData.sizes.forEach((size, index) => {\n    productObj[`sizeOption${index}`] = size.size_id;\n    productObj[`sizeDetail${index}`] = size.size_details;\n    productObj[`sizePrice${index}`] = size.size_price;\n    productObj[`sizeHeight${index}`] = size.height;\n    productObj[`sizeChest${index}`] = size.chest;\n    productObj[`sizeWaist${index}`] = size.waistline;\n    productObj[`sizeHips${index}`] = size.hips;\n    productObj[`sizeRefId${index}`] = size.id;\n\n  });\n  productData.colors.forEach((color, index) => {\n    productObj[`colorOption${index}`] = color.color_id;\n    productObj[`colorCode${index}`] = color.product_color_code;\n    productObj[`colorDefault${index}`] = productData.default_color_id === color.color_id;\n    productObj[`colorRefId${index}`] = color.id;\n    productObj[`colorImages${index}`] = color.images && color.images.map(image => ({\n      name: image.image_name,\n      thumbUrl: baseURL + image.thumbnail_image_link,\n      uid: image.id,\n    }));\n  });\n  productObj['imageListObj'] = productObj.colorFieldsCountArr.reduce((acc, field) => {\n    acc[field] =\n    productData.colors[field] &&\n    productData.colors[field].images.length > 0\n        ? productData.colors[field].images.map(image => ({\n            name: image.image_name,\n            thumbUrl: baseURL + image.thumbnail_image_link,\n            uid: image.id\n          }))\n        : [];\n    return acc;\n  }, {});\n\n  const handleFormSubmit = (values) => {\n    const paramsObj = extractProductObj(values, productsList);\n    delete paramsObj.slug;\n    paramsObj['id'] = productData.id;\n    const sizeRefIds = productData.sizes.map(({ id }) => id);\n    const formSizeRefIds = paramsObj.sizes.map(({ refId }) => refId);\n    sizeRefIds.forEach(sizeRefId => {\n      if(!formSizeRefIds.includes(sizeRefId)) {\n        paramsObj.sizes.push({\n          id: productData.sizes.find(({ id }) => sizeRefId === id).size_id,\n          is_checked: false,\n        })\n      }\n    });\n    const colorRefIds = productData.colors.map(({ id }) => id);\n    const formColorRefIds = paramsObj.colors.map(({ refId }) => refId);\n    colorRefIds.forEach(colorRefId => {\n      if(!formColorRefIds.includes(colorRefId)) {\n        paramsObj.colors.push({\n          id: productData.colors.find(({ id }) => colorRefId === id).color_id,\n          is_checked: false,\n        })\n      }\n    });\n\n    if(!validateProduct(paramsObj)) return; \n    \n    doProductUpdateFetch({\n      url: URLS.productUpdate({ slug: productData.slug}),\n      params: paramsObj,\n      showSuccessNotification: true,\n      onSuccess: data => !!data.id && setProductUpdated(true)\n    });\n  }\n\n  if(productUpdated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if(noProductFoundAlert) {\n    return <Empty description=\"No product found!\"/> \n  }\n\n  return (\n    <CreateUpdateProductForm handleFormSubmit={handleFormSubmit} productsList={productsList} productObj={productObj} />\n  );\n  \n}\n\nexport default ProductDetails;\n","import MainLayout from '../layout';\n// GeneralViews\nimport Login from '../pages/Login';\nimport Home from '../pages/Home';\nimport CreateProduct from '../pages/CreateProduct';\nimport Category from '../pages/Category';\nimport Size from '../pages/Size';\nimport Color from '../pages/Color';\nimport ProductDetails from '../pages/ProductDetails';\n\nexport const dashboardRoutes = [\n  {\n    path: '/',\n    component: Home,\n    name: \"Products\",\n    icon: \"shop\",\n    showAlways: true,\n  },\n  {\n    path: '/create-product',\n    component: CreateProduct,\n    name: \"Create Product\",\n    icon: \"upload\",\n    showAlways: true,\n  },\n  {\n    path: '/categories',\n    component: Category,\n    name: \"Categories\",\n    icon: \"menu-unfold\",\n    showAlways: true,\n  },\n  {\n    path: '/sizes',\n    component: Size,\n    name: \"Sizes\",\n    icon: \"menu-unfold\",\n    showAlways: true,\n  },\n  {\n    path: '/colors',\n    component: Color,\n    name: \"Colors\",\n    icon: \"menu-unfold\",\n    showAlways: true,\n  },\n  {\n    path: '/product/:productSlug',\n    component: ProductDetails,\n    name: \"Product details\",\n    icon: \"team\",\n    showAlways: false,\n  },\n];\nexport const baseRoutes = [\n  {\n    path: '/login',\n    component: Login,\n    name: \"Dashboard\",\n    noAuth: true,\n  },\n  {\n    path: '/',\n    component: MainLayout,\n    name: \"Main Layout\",\n  },\n];","import React, { useContext, Fragment, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { Spin, notification } from 'antd';\nimport 'antd/dist/antd.css';\nimport store from 'store';\n\nimport { LayoutContext, StoreContext } from '../../contexts';\nimport { handleRequestError } from '../../utils/API';\nimport { baseRoutes } from '../../router';\n\nimport '../../assets/scss/index.scss';\n\nfunction AppContainer({ history }) {\n  const authToken = store.get('authenticationToken');\n\n  const { loading, error, successNotification } = useContext(LayoutContext);\n  const {\n    doCategoriesFetch,\n    doColorsFetch,\n    doSizesFetch,\n    data: { categories, colors, sizes }\n  } = useContext(StoreContext);\n\n  useEffect(() => {\n    const errorMessage = handleRequestError(error);\n    const isAuthError = errorMessage === 'authentication failed';\n\n    if (authToken) {\n      (!categories || categories.length === 0) && doCategoriesFetch();\n      (!colors || colors.length === 0) && doColorsFetch();\n      (!sizes || sizes.length === 0) && doSizesFetch();\n    }\n\n    !!error &&\n      !isAuthError &&\n      notification.error({\n        placement: 'bottomRight',\n        message: 'An error occured!',\n        duration: 3,\n        description: errorMessage\n      });\n    !!successNotification &&\n      notification.success({\n        placement: 'bottomRight',\n        message: successNotification,\n        duration: 3\n      });\n    isAuthError && store.set('authenticationToken', null);\n  }, [error, successNotification, authToken]);\n\n  return (\n    <Fragment>\n      <Spin spinning={loading}>\n        <Router history={history} basename=\"/admin-dashboard\">\n          <Switch>\n            {baseRoutes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n          </Switch>\n          {!authToken && <Redirect to=\"/login\" />}\n        </Router>\n      </Spin>\n    </Fragment>\n  );\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport store from 'store';\n\nimport AppContainer from './containers/AppContainer';\n\nimport { LayoutProvider, StoreProvider } from '../src/contexts';\nimport { setAuthorizationToken } from '../src/utils/API';\n\nfunction App() {\n  const authToken = store.get('authenticationToken');\n\n  if (!!authToken) {\n    setAuthorizationToken(authToken);\n  }\n\n  return (\n    <LayoutProvider>\n      <StoreProvider>\n        <AppContainer />\n      </StoreProvider>\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}