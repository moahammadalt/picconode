{"version":3,"sources":["assets/img/favicon.png","contexts/layout.js","actions/category.js","actions/color.js","actions/size.js","reducers/category.js","reducers/color.js","reducers/size.js","utils/API.js","hooks/useFetch.js","hooks/usePrevious.js","constants/urls.js","contexts/store.js","layout/SideBarLayout.js","layout/HeaderLayout.js","layout/FooterLayout.js","layout/MainLayout.js","pages/Login/Login.js","pages/Home/Home.js","components/RichInput/RichInput.js","utils/helpers.js","pages/CreateProduct/CreateProductForm.js","utils/productCreate.js","pages/ProductDetails/ProductDetails.js","router/index.js","pages/CreateProduct/CreateProduct.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LayoutContext","createContext","LayoutProvider","children","useState","sideBarCollapsed","setCollapsed","theme","setTheme","loading","setLoading","error","setError","initialState","successNotification","setSuccessNotification","Provider","value","SET_CATEGORIES","INIT_CATEGORIES","SET_COLORS","INIT_COLORS","SET_SIZES","INIT_SIZES","categoryInitialState","categoryReducer","state","action","type","categories","payload","Error","colorInitialState","colorReducer","colors","sizeInitialState","sizeReducer","sizes","baseURL","window","location","hostname","origin","API","axios","create","setAuthorizationToken","token","defaults","headers","common","handleRequestError","response","data","errorMessage","message","extractDataObject","useFetch","fetchInitialObj","setData","fetchObj","doFetch","useContext","useEffect","fetchData","a","res","method","get","url","post","params","key","formData","FormData","append","onSuccess","showSuccessNotification","successMessage","console","log","usePrevious","ref","useRef","current","URLS","login","dashboardRetrive","categoryList","sizeList","colorList","imageUpload","productCreate","productListGet","productDelete","slug","StoreContext","StoreProvider","useReducer","categoryState","categoryDispatch","sizeState","sizeDispatch","colorState","colorDispatch","setCategories","setSizes","setColors","doCategoriesFetchRequest","doSizesFetchRequest","doColorsFetchRequest","doCategoriesFetch","doSizesFetch","doColorsFetch","authToken","store","initialStore","initCategories","initSizes","initcolors","Sider","Layout","withRouter","props","pathname","isPathMatchRequestedUrl","path","pathToRegexp","exec","collapsible","collapsed","onCollapse","className","src","require","alt","mode","activeKey","selectedKeys","dashboardRoutes","map","showAlways","icon","name","Item","to","Header","HeaderLayout","isLogoutModalOpen","setLogoutModalOpen","isLogedOut","setLogedOut","onClick","title","visible","onOk","set","onCancel","Footer","FooterLayout","Content","MainLayout","style","marginLeft","route","exact","component","Form","form","getFieldDecorator","validateFields","handleSubmit","e","preventDefault","onSubmit","rules","required","prefix","placeholder","size","htmlType","Meta","Card","Home","doProductsFetch","productListData","doDeleteFetch","deleteResponse","prevDeleteResponse","selectedProductToDelete","setSelectedProductToDelete","JSON","stringify","handleDeletedProductModal","product","gutter","Array","index","span","cover","length","images","image_name","small_image_link","shape","actions","href","target","description","category_slug","category_type_slug","modules","toolbar","clipboard","matchVisual","formats","RichInput","onChangeHandler","editorHtml","setEditorHtml","onChange","html","getParentChildArr","arr","parentIdKey","arrElem","mappedElem","tree","mappedArr","i","len","id","hasOwnProperty","push","Title","Typography","Option","Select","handleFormSubmit","setFieldsValue","getFieldValue","getFieldsValue","parentCategories","categoryTypes","setCategoryTypes","categoryTags","setCategoryTags","sizeFieldsCountArr","setSizeFieldsCountArr","colorFieldsCountArr","setColorFieldsCountArr","0","imagesListObj","setImagesListObj","doImageUpload","values","showWarningNotification","msg","notification","warning","placement","duration","label","selectedIndex","findIndex","undefined","cat","tag","details","level","fieldIndex","tmpArr","splice","removeSizeFields","prevIndex","addNewSizeFields","dashed","color","listType","fileList","customRequest","file","product_image","imageResponse","imagesListObjTmp","uid","thumbUrl","image_link","uploadImage","onRemove","fileData","fileIndex","tmpImagesListObj","findSelectedImageIndex","handleImageUploadRemove","checked","Object","keys","forEach","fieldName","startsWith","handleDefaultColorChange","removeColorFields","lastFiledValue","addNewColorFields","extractSlug","toLowerCase","replace","extractSizesArr","sizesArr","filter","sizeIndex","is_checked","height","hips","chest","waistline","size_price","amount","extractColorsArr","colorsArr","colorIndex","product_color_code","imgObj","reverse","extractDefaultColorId","defaultColorInArr","defaultColorIndex","ProductDetails","doProductCreateFetch","productCreated","setProductCreated","CreateProductForm","productObj","category_id","category","category_type_id","price","mainPrice","currency","is_best","isBest","is_handmade","isHandmade","stock_status","isOutOfStuck","default_color_id","baseRoutes","Login","noAuth","AppContainer","history","isAuthError","success","spinning","basename","App","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10045cf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.39971fa2.png\";","import React, { useState, createContext } from 'react';\n\nconst LayoutContext = createContext();\n\nfunction LayoutProvider({ children }) {\n  const [sideBarCollapsed, setCollapsed] = useState(false);\n  const [theme, setTheme] = useState('dark');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successNotification, setSuccessNotification] = useState(false);\n\n  const initialState = {\n    sideBarCollapsed,\n    setCollapsed,\n    theme,\n    setTheme,\n    loading,\n    setLoading,\n    error,\n    setError,\n    successNotification,\n    setSuccessNotification,\n  };\n\n  return (\n    <LayoutContext.Provider value={initialState}>\n      {children}\n    </LayoutContext.Provider>\n  );\n}\n\nexport { LayoutContext, LayoutProvider};","export const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const INIT_CATEGORIES = 'INIT_CATEGORIES';","export const SET_COLORS = 'SET_COLORS';\nexport const INIT_COLORS = 'INIT_COLORS';","export const SET_SIZES = 'SET_SIZES';\nexport const INIT_SIZES = 'INIT_SIZES';","import { SET_CATEGORIES, INIT_CATEGORIES } from '../actions';\n\nexport const categoryInitialState = [];\n\nexport const categoryReducer = (state, action) => {\n  switch (action.type) {\n    case SET_CATEGORIES:\n      return { categories: action.payload };\n    case INIT_CATEGORIES:\n      return { categories: categoryInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import { SET_COLORS, INIT_COLORS } from '../actions';\n\nexport const colorInitialState = [];\n\nexport const colorReducer = (state, action) => {\n  switch (action.type) {\n    case SET_COLORS:\n      return { colors: action.payload };\n    case INIT_COLORS:\n      return { colors: colorInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import { SET_SIZES, INIT_SIZES } from '../actions';\n\nexport const sizeInitialState = [];\n\nexport const sizeReducer = (state, action) => {\n  switch (action.type) {\n    case SET_SIZES:\n      return { sizes: action.payload };\n    case INIT_SIZES:\n      return { sizes: sizeInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import axios from 'axios';\n\nexport const baseURL = `${\n  window.location.hostname === 'localhost'\n    ? 'http://localhost:1000'\n    : window.location.origin\n}`;\n\nexport const API = axios.create({\n  baseURL: `${baseURL}/adminAPI/`,\n});\n\nexport const setAuthorizationToken = token => {\n\n  if (token) {\n    API.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete API.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const removeAuthorizationToken = () => {\n\n  delete axios.defaults.headers.common['Authorization'];\n};\n\nexport const handleRequestError = error => {\n  const genericError = 'Generic error happened';\n  if(!error) return genericError;\n\n  if(error.response && error.response.data) {\n    return error.response.data.errorMessage || error.message || genericError;\n  }\n\n  if(error.message) return error.message;\n\n  return genericError;\n};\n\nexport const extractDataObject = (data) => data && data.data && data.data.data ? data.data.data : {};\n","import { useState, useContext, useEffect } from 'react';\nimport { LayoutContext } from '../contexts';\n\nimport { API, extractDataObject } from '../utils/API';\n\nfunction useFetch(fetchInitialObj) {\n  const [data, setData] = useState(null);\n  const [fetchObj, doFetch] = useState(fetchInitialObj);\n  const {\n    loading,\n    setLoading,\n    error,\n    setError,\n    setSuccessNotification\n  } = useContext(LayoutContext);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      setSuccessNotification(false);\n      try {\n        setLoading(true);\n        let res = null;\n        switch (fetchObj.method) {\n          case 'GET':\n            res = await API.get(fetchObj.url);\n            break;\n  \n          case 'POST':\n            res = await API.post(fetchObj.url, fetchObj.params);\n            break;\n  \n          case 'FILE_POST':\n            var formData = new FormData();\n            for(const key in fetchObj.params) {\n              formData.append(key, fetchObj.params[key]);\n            }\n            res = await API.post(fetchObj.url, formData, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            break;\n  \n          default:\n            res = fetchObj.params\n              ? await API.post(fetchObj.url, fetchObj.params)\n              : await API.get(fetchObj.url);\n            break;\n        }\n        \n        setData(res);\n        \n        !!fetchObj.onSuccess && fetchObj.onSuccess(extractDataObject(res));\n        !!fetchInitialObj && fetchInitialObj.onSuccess && fetchInitialObj.onSuccess(extractDataObject(res));\n\n        fetchObj.showSuccessNotification &&\n          setSuccessNotification(\n            fetchObj.successMessage || 'request has been done successfully.'\n          );\n      } catch (err) {\n        console.log('err: ', err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    !!fetchObj && fetchData();\n\n    doFetch(null);\n  }, [ fetchObj ]);\n\n  return {\n    data: extractDataObject(data),\n    error,\n    loading,\n    doFetch,\n  };\n}\n\nexport default useFetch;\n","import { useState, useContext, useEffect, useRef} from 'react';\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  \n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  \n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n\nexport default usePrevious;","const URLS = {\n  login: '/login',\n  dashboardRetrive: '/dashboard-retrive',\n  categoryList: '/category',\n  sizeList: '/size',\n  colorList: '/color',\n  imageUpload: '/productImage/create',\n  productCreate: '/product/create',\n  productListGet: '/product',\n  productDelete: ({ slug }) => `/product/${slug}/delete`,\n}\n\nexport default URLS;","import React, { useReducer, createContext, useEffect } from 'react';\nimport store from 'store';\n\nimport { SET_CATEGORIES, INIT_CATEGORIES, INIT_COLORS, INIT_SIZES, SET_COLORS, SET_SIZES } from '../actions';\nimport { categoryReducer, sizeReducer, colorReducer } from '../reducers';\nimport { useFetch } from '../hooks';\nimport { URLS } from '../constants';\n\n\nconst StoreContext = createContext();\n\nfunction StoreProvider({ children }) {\n  \n  const [categoryState, categoryDispatch] = useReducer(categoryReducer);\n  const [sizeState, sizeDispatch ] = useReducer(sizeReducer);\n  const [colorState, colorDispatch] = useReducer(colorReducer);\n\n  const setCategories = (categories) => {\n    categoryDispatch({ type: SET_CATEGORIES, payload: categories})\n  }\n\n  const initCategories = () => {\n    categoryDispatch({ type: INIT_CATEGORIES})\n  }\n\n  const setSizes = (sizes) => {\n    sizeDispatch({ type: SET_SIZES, payload: sizes})\n  }\n\n  const initSizes = () => {\n    sizeDispatch({ type: INIT_SIZES})\n  }\n\n  const setColors = (colors) => {\n    colorDispatch({ type: SET_COLORS, payload: colors})\n  }\n\n  const initcolors = () => {\n    colorDispatch({ type: INIT_COLORS})\n  }\n\n  const { doFetch: doCategoriesFetchRequest } = useFetch();\n  const { doFetch: doSizesFetchRequest } = useFetch();\n  const { doFetch: doColorsFetchRequest } = useFetch();\n  \n  const doCategoriesFetch = () => {\n    doCategoriesFetchRequest({url: URLS.categoryList, onSuccess: setCategories});\n  }\n  const doSizesFetch = () => {\n    doSizesFetchRequest({url: URLS.sizeList, onSuccess: setSizes});\n  }\n  const doColorsFetch = () => {\n    doColorsFetchRequest({url: URLS.colorList, onSuccess: setColors});\n  }\n\n  const authToken = store.get('authenticationToken');\n\n  useEffect(() => {\n    if(authToken) {\n      doCategoriesFetch();\n      doSizesFetch();\n      doColorsFetch();\n    }\n  }, [authToken])\n\n  const initialStore = {\n    data: {\n      ...categoryState,\n      ...sizeState,\n      ...colorState,\n    },\n    setCategories,\n    initCategories,\n    setSizes,\n    initSizes,\n    setColors,\n    initcolors,\n    doCategoriesFetch,\n    doSizesFetch,\n    doColorsFetch,\n  };\n  \n  return (\n    <StoreContext.Provider value={initialStore}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport { StoreContext, StoreProvider};","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Layout, Menu, Icon } from 'antd';\nimport pathToRegexp from 'path-to-regexp';\n\nimport { dashboardRoutes } from '../router';\nimport { LayoutContext } from '../contexts';\n\nconst { Sider } = Layout;\n\nfunction SideBarLayout(props) {\n  const {\n    location: { pathname }\n  } = props;\n\n  const isPathMatchRequestedUrl = path => !!pathToRegexp(path).exec(pathname);\n  const {\n    sideBarCollapsed,\n    setCollapsed,\n    theme,\n  } = useContext(LayoutContext);\n\n  return (\n    <Sider\n      collapsible\n      collapsed={sideBarCollapsed}\n      onCollapse={() => setCollapsed(!sideBarCollapsed)}\n    >\n      <div className=\"logo\">\n        <img src={require('../assets/img/favicon.png')} alt=\"\" />\n        {!sideBarCollapsed && <span>Admin Logo</span>}\n      </div>\n      <Menu\n        theme={theme}\n        mode=\"inline\"\n        activeKey={pathname}\n        selectedKeys={[pathname]}\n      >\n        {dashboardRoutes.map(({ path, showAlways, icon, name }) => (\n          <Menu.Item key={isPathMatchRequestedUrl(path) ? pathname : path}>\n            {(showAlways || isPathMatchRequestedUrl(path)) && (\n              <Link to={path}>\n                <Icon type={icon} />\n                <span className=\"nav-text\">{name}</span>\n              </Link>\n            )}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  );\n}\n\nexport default withRouter(SideBarLayout);\n","import React, { useState } from 'react';\nimport { Layout, Icon, Modal } from 'antd';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\n\nconst { Header } = Layout;\n\nfunction HeaderLayout() {\n\n  const [isLogoutModalOpen, setLogoutModalOpen] = useState(false);\n  const [isLogedOut, setLogedOut] = useState(false);\n\n  const handleLogout = () => {\n    store.set('authenticationToken', null);\n    setLogedOut(true);\n  }\n  \n\n  return (\n    <Header>\n      {isLogedOut && <Redirect to=\"/login\" />}\n      <div className=\"header-wrapper\">\n        <div className=\"page-name\">header</div>\n        <Icon type=\"logout\" onClick={() => setLogoutModalOpen(true)} className=\"logout-icon\" />  \n      </div>\n      <Modal\n        title=\"Log out from dashboard\"\n        visible={isLogoutModalOpen}\n        onOk={handleLogout}\n        onCancel={() => setLogoutModalOpen(false)}\n      >\n        would you really like to log out?\n      </Modal>\n    </Header>\n  );\n}\n\nexport default HeaderLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nfunction FooterLayout() {\n  return (<Footer>bla bla ©2019</Footer>);\n}\n\nexport default FooterLayout;","import React, { useContext } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport SideBarLayout from './SideBarLayout';\nimport HeaderLayout from './HeaderLayout';\nimport FooterLayout from './FooterLayout';\n\nimport { dashboardRoutes } from '../router';\nimport { LayoutContext } from '../contexts';\n\nconst { Content } = Layout;\n\nfunction MainLayout() {\n  const { sideBarCollapsed } = useContext(LayoutContext);\n\n  return (\n    <Layout style={{ marginLeft: sideBarCollapsed ? '80px' : '200px' }}>\n      <SideBarLayout />\n      <Layout>\n        <HeaderLayout />\n        <Content>\n          <Switch>\n            {dashboardRoutes.map(route => (\n              <Route\n                exact={true}\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n            <Redirect to=\"/\" />\n          </Switch>\n        </Content>\n        <FooterLayout />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport store from 'store';\nimport { Form, Icon, Input, Button, Layout } from 'antd';\n\nimport { useFetch } from '../../hooks';\nimport { setAuthorizationToken } from '../../utils/API';\nimport { URLS } from '../../constants';\n\nimport '../../assets/scss/login.scss';\n\nfunction Login({ form }) {\n  const { getFieldDecorator, validateFields } = form;\n  const authToken = !!store.get('authenticationToken');\n  const {\n    data: { token },\n    doFetch\n  } = useFetch();\n\n  if (token) {\n    store.set('authenticationToken', token);\n    setAuthorizationToken(token);\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    doFetch({\n      url: URLS.login,\n      params: await validateFields()\n    });\n  };\n\n  return token || authToken ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Layout className=\"login-layout\">\n      <img src={require('../../assets/img/favicon.png')} alt=\"\" />\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: 'Please enter your username!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" className=\"input-icon\" />}\n              placeholder=\"Username\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please enter your Password!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" className=\"input-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Layout>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(Login);\n","import React, { useState, useEffect } from 'react';\nimport { Card, Icon, Row, Col, Avatar, Modal } from 'antd';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\n\nimport { baseURL } from '../../utils/API';\nimport '../../assets/scss/productList.scss';\n\nconst { Meta } = Card;\n\nfunction Home() {\n  const { doFetch: doProductsFetch, data: productListData } = useFetch({\n    url: URLS.productListGet\n  });\n  const { doFetch: doDeleteFetch, data: deleteResponse } = useFetch();\n  const prevDeleteResponse = usePrevious(deleteResponse) || {};\n\n  const [selectedProductToDelete, setSelectedProductToDelete] = useState(null);\n\n  useEffect(() => {\n    if (JSON.stringify(deleteResponse) !== JSON.stringify(prevDeleteResponse)) {\n      doProductsFetch({\n        url: URLS.productListGet\n      });\n      setSelectedProductToDelete(null);\n    }\n  }, [deleteResponse]);\n\n  const getProductFirstImage = colors => {\n    if (\n      colors.length === 0 ||\n      !colors[0].images ||\n      colors[0].images.length === 0 ||\n      !colors[0].images[0].image_name\n    )\n      return (\n        <Avatar\n          shape=\"square\"\n          size={140}\n          icon={<Icon type=\"smile\" theme=\"outlined\" />}\n          className=\"avatar-image\"\n        />\n      );\n\n    return (\n      <img\n        alt=\"example\"\n        className=\"product-first-image\"\n        src={`${baseURL}${colors[0].images[0].small_image_link}`}\n      />\n    );\n  };\n\n  const handleProductDelete = () => {\n    doDeleteFetch({\n      url: URLS.productDelete({ slug: selectedProductToDelete.slug }),\n      method: 'POST'\n    });\n  };\n\n  const handleDeletedProductModal = product => {\n    setSelectedProductToDelete({ ...product });\n  };\n\n  return (\n    <Row className=\"product-list-wrapper\" gutter={[30, 30]}>\n      {productListData instanceof Array &&\n        productListData.map((product, index) => (\n          <Col span={6} key={product.slug}>\n            <Card\n              cover={getProductFirstImage(product.colors)}\n              actions={[\n                <Icon\n                  type=\"delete\"\n                  key=\"delete\"\n                  onClick={() => handleDeletedProductModal(product)}\n                />,\n                <a href={`${baseURL}/${product.slug}`} target=\"_blank\">\n                  <Icon type=\"link\" key=\"link\" />\n                </a>,\n                <Icon type=\"edit\" key=\"edit\" />\n              ]}\n            >\n              <Meta\n                title={product.name}\n                description={`${product.category_slug} ${\n                  product.category_type_slug\n                    ? `-${product.category_type_slug}`\n                    : ''\n                }`}\n              />\n            </Card>\n          </Col>\n        ))}\n\n      <Modal\n        title={`Delete product: ${selectedProductToDelete &&\n          selectedProductToDelete.name}`}\n        visible={!!selectedProductToDelete}\n        onOk={handleProductDelete}\n        onCancel={() => setSelectedProductToDelete(null)}\n      >\n        Do you confirm deleteing the product?\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'}, \n     {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image',],\n  ],\n  clipboard: {\n    matchVisual: false,\n  }\n}\n\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nfunction RichInput({ placeholder = '', onChangeHandler}) {\n  const [ editorHtml, setEditorHtml ] = useState('');\n\n  const handleChange = (html) => {\n    setEditorHtml(html);\n    onChangeHandler(html);\n  }\n\n  return (\n    <ReactQuill \n      onChange={handleChange}\n      value={editorHtml}\n      modules={modules}\n      formats={formats}\n      placeholder={placeholder}\n    />\n   )\n}\n\nexport default RichInput;","export const checkValue = (value, key) => {\n\n\tvalue = key ? key.split(\".\").reduce( (o, x) => (typeof o == \"undefined\" || o === null) ? o : o[x] , value) : value;\n\treturn ((!value && value !== false) || /^\\s*$/.test(value)) ? false : true;\n};\n\nexport const isEmail = (email) => /^[a-z0-9._%+-]+@.+\\..+/.test(email);\n\nexport const isName = (name) => /^(?=.{2,150}$).*/.test(name);\n\nexport const createHash = (arr, key) => {\n  var Hash = function () {\n    this.data = {};\n    if (arr && Array.isArray(arr)) {\n      arr.map((o) => {\n        this.data[o[key]] = o;\n      });\n      this.size = arr.length;\n    }\n    else {\n      this.size = 0;\n    }\n  };\n  Hash.prototype.keys = function () {\n    return Object.keys(this.data);\n  }\n  Hash.prototype.values = function () {\n    return Object.values(this.data);\n  }\n\n  return new Hash();\n};\n\nexport const getParentChildArr = (arr, parentIdKey) => {\n  var tree = [],\n      mappedArr = {},\n      arrElem,\n      mappedElem;\n\n  // First map the nodes of the array to an object -> create a hash table.\n  for(var i = 0, len = arr.length; i < len; i++) {\n    arrElem = arr[i];\n    mappedArr[arrElem.id] = arrElem;\n    mappedArr[arrElem.id]['children'] = [];\n  }\n\n\n  for (var id in mappedArr) {\n    if (mappedArr.hasOwnProperty(id)) {\n      mappedElem = mappedArr[id];\n      // If the element is not at the root level, add it to its parent array of children.\n      if (mappedElem[parentIdKey|| 'parent_id']) {\n        mappedArr[mappedElem[parentIdKey || 'parent_id']]['children'].push(mappedElem);\n      }\n      // If the element is at the root level, add it to first level elements array.\n      else {\n        tree.push(mappedElem);\n      }\n    }\n  }\n  return tree;\n}","import React, { useContext, useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Select,\n  Typography,\n  notification,\n  Upload,\n  Icon,\n  Divider,\n  Switch,\n} from 'antd';\n\nimport RichInput from '../../components/RichInput';\n\nimport { getParentChildArr } from '../../utils/helpers';\nimport { StoreContext } from '../../contexts';\nimport { URLS } from '../../constants';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { baseURL } from '../../utils/API';\nimport '../../assets/scss/createProductForm.scss';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction CreateProduct({ form, handleFormSubmit }) {\n  const {\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    getFieldValue,\n    getFieldsValue\n  } = form;\n  const {\n    data: { categories = [], sizes = [], colors = [] }\n  } = useContext(StoreContext);\n  const parentCategories = getParentChildArr(categories);\n  const [categoryTypes, setCategoryTypes] = useState([]);\n  const [categoryTags, setCategoryTags] = useState([]);\n  const [sizeFieldsCountArr, setSizeFieldsCountArr] = useState([0]);\n  const [colorFieldsCountArr, setColorFieldsCountArr] = useState([0]);\n  const [imagesListObj, setImagesListObj] = useState({ 0: [] });\n\n  const { doFetch: doImageUpload } = useFetch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const values = await validateFields();\n    handleFormSubmit(values);\n  };\n\n  const onCategoryChanged = value => {\n    const selectedIndex = parentCategories.findIndex(({ id }) => value === id);\n    setCategoryTypes(parentCategories[selectedIndex].children);\n    setFieldsValue({\n      type: undefined\n    });\n  };\n\n  const onCategoryTypeChanged = value => {\n    const selectedIndex = categoryTypes.findIndex(({ id }) => value === id);\n    setCategoryTags(categoryTypes[selectedIndex].children);\n    setFieldsValue({\n      tag: undefined\n    });\n  };\n\n  const setDescription = value => {\n    setFieldsValue({\n      description: value\n    });\n  };\n\n  const setDetails = value => {\n    setFieldsValue({\n      details: value\n    });\n  };\n\n  const showWarningNotification = msg => {\n    notification.warning({\n      placement: 'bottomRight',\n      message: 'An error occured!',\n      duration: 4,\n      description: msg\n    });\n  };\n\n  const addNewSizeFields = prevIndex => {\n    const hasPrevSize = !!getFieldValue('sizeOption' + prevIndex);\n    if (!hasPrevSize) {\n      showWarningNotification('please enter the size before adding a new one.');\n    } else {\n      const tmpArr = [...sizeFieldsCountArr];\n      tmpArr.push(tmpArr[tmpArr.length - 1] + 1);\n      setSizeFieldsCountArr(tmpArr);\n    }\n  };\n\n  const removeSizeFields = index => {\n    const tmpArr = [...sizeFieldsCountArr];\n    tmpArr.splice(index, 1);\n    setSizeFieldsCountArr(tmpArr);\n  };\n\n  const addNewColorFields = prevIndex => {\n    const hasPrevColor = !!getFieldValue('colorOption' + prevIndex);\n    if (!hasPrevColor) {\n      showWarningNotification(\n        'please enter the color before adding a new one.'\n      );\n    } else {\n      const tmpArr = [...colorFieldsCountArr];\n      const lastFiledValue = tmpArr[tmpArr.length - 1];\n      tmpArr.push(lastFiledValue + 1);\n      setColorFieldsCountArr(tmpArr);\n      setImagesListObj({\n        ...imagesListObj,\n        [lastFiledValue + 1]: []\n      });\n    }\n  };\n\n  const removeColorFields = (index, fieldIndex) => {\n    const tmpArr = [...colorFieldsCountArr];\n    tmpArr.splice(index, 1);\n    setColorFieldsCountArr(tmpArr);\n\n    const tmpImagesListObj = imagesListObj;\n    delete tmpImagesListObj[fieldIndex];\n    setImagesListObj(tmpImagesListObj);\n  };\n\n  const uploadImage = (file, fieldIndex) => {\n    doImageUpload({\n      method: 'FILE_POST',\n      params: { product_image: file },\n      url: URLS.imageUpload,\n      showSuccessNotification: true,\n      successMessage: 'Image uploaded successfully.',\n      onSuccess: (imageResponse) => {\n        let imagesListObjTmp = { ...imagesListObj };\n\n        imagesListObjTmp[fieldIndex].push({\n          uid: imageResponse.image_name,\n          thumbUrl: baseURL + imageResponse.image_link,\n          name: imageResponse.image_name\n        });\n        setImagesListObj(imagesListObjTmp);\n        setFieldsValue({\n          [`colorImages${fieldIndex}`]: imagesListObjTmp[fieldIndex]\n        });\n      }\n    });\n  };\n\n  const handleImageUploadRemove = (fileData, fileIndex) => {\n    const tmpImagesListObj = { ...imagesListObj };\n    const findSelectedImageIndex = imagesListObj[fileIndex].findIndex(\n      ({ uid }) => fileData.uid === uid\n    );\n    tmpImagesListObj[fileIndex].splice(findSelectedImageIndex, 1);\n    setImagesListObj(tmpImagesListObj);\n  };\n\n  const handleDefaultColorChange = (value, fieldIndex) => {\n    Object.keys(getFieldsValue()).forEach(fieldName => {\n      if (\n        fieldName.startsWith('colorDefault') &&\n        fieldIndex != fieldName[fieldName.length - 1]\n      ) {\n        setFieldsValue({\n          [fieldName]: false\n        });\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Form onSubmit={handleSubmit} className=\"form-wrapper\">\n        <Row>\n          <Col span={12}>\n            <Form.Item label=\"Name:\">\n              {getFieldDecorator('name', {\n                rules: [\n                  { required: true, message: 'Please enter product name!' }\n                ]\n              })(<Input placeholder=\"product name\" size=\"large\" />)}\n            </Form.Item>\n          </Col>\n          <Col span={12} />\n        </Row>\n        <Divider />\n        <Row gutter={[20, 0]}>\n          <Col span={8}>\n            <Form.Item label=\"Category\">\n              {getFieldDecorator('category', {\n                rules: [\n                  { required: true, message: 'Please select the category!' }\n                ]\n              })(\n                <Select\n                  placeholder=\"Select a categorty\"\n                  onChange={onCategoryChanged}\n                >\n                  {parentCategories.map((cat, index) => (\n                    <Option value={cat.id} key={index}>\n                      {cat.name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            {categoryTypes.length > 0 && (\n              <Form.Item label=\"Type\">\n                {getFieldDecorator('type', {\n                  rules: [\n                    { required: true, message: 'Please select the type!' }\n                  ]\n                })(\n                  <Select\n                    placeholder=\"Select a type\"\n                    onChange={onCategoryTypeChanged}\n                  >\n                    {categoryTypes.map((cat, index) => (\n                      <Option value={cat.id} key={index}>\n                        {cat.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            )}\n          </Col>\n          <Col span={8}>\n            {categoryTags.length > 0 && (\n              <Form.Item label=\"Tag\">\n                {getFieldDecorator('tag', {\n                  rules: [{ required: true, message: 'Please select the tag!' }]\n                })(\n                  <Select placeholder=\"Select a tag\">\n                    {categoryTags.map((cat, index) => (\n                      <Option value={cat.id} key={index}>\n                        {cat.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            )}\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Description\">\n            {getFieldDecorator('description')(\n              <RichInput\n                placeholder=\"Description\"\n                onChangeHandler={setDescription}\n              />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Details\">\n            {getFieldDecorator('details')(\n              <RichInput placeholder=\"Details\" onChangeHandler={setDetails} />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Main Price\" className=\"price-input\">\n            {getFieldDecorator('mainPrice')(\n              <Input size=\"large\" />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Best Product:\">\n            {getFieldDecorator('isBest')(\n              <Switch />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Handmade Product:\">\n            {getFieldDecorator('isHandmade')(\n              <Switch />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Product Out Of Stock:\">\n            {getFieldDecorator('isOutOfStuck')(\n              <Switch />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Row>\n            <Title level={4}>Sizes</Title>\n          </Row>\n          {sizeFieldsCountArr.map((fieldIndex, i) => (\n            <>\n              <Row gutter={[5, 0]} key={fieldIndex}>\n                <Col span={3}>\n                  <Form.Item label=\"Size:\">\n                    {getFieldDecorator(`sizeOption${fieldIndex}`)(\n                      <Select placeholder=\"Select a size\">\n                        {sizes.map((size, index) => (\n                          <Option value={size.id} key={index}>\n                            {size.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Size detail:\">\n                    {getFieldDecorator(`sizeDetail${fieldIndex}`)(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Size Price:\">\n                    {getFieldDecorator(`sizePrice${fieldIndex}`)(\n                      <Input />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Height:\">\n                    {getFieldDecorator(`sizeHeight${fieldIndex}`)(\n                      <Input />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Chest:\">\n                    {getFieldDecorator(`sizeChest${fieldIndex}`)(\n                      <Input />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Waist:\">\n                    {getFieldDecorator(`sizeWaist${fieldIndex}`)(\n                      <Input />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Hips:\">\n                    {getFieldDecorator(`sizeHips${fieldIndex}`)(\n                      <Input />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  {sizeFieldsCountArr.length !== 1 && (\n                    <Button\n                      className=\"m-t-43 m-r-5\"\n                      type=\"dashed\"\n                      icon=\"minus\"\n                      onClick={() => removeSizeFields(i)}\n                    />\n                  )}\n                  {i === sizeFieldsCountArr.length - 1 && (\n                    <Button\n                      className=\"m-t-43\"\n                      type=\"dashed\"\n                      icon=\"plus\"\n                      onClick={() => addNewSizeFields(fieldIndex)}\n                    />\n                  )}\n                </Col>\n                <Col span={3}></Col>\n              </Row>\n              {sizeFieldsCountArr.length !== 1 &&\n                i !== sizeFieldsCountArr.length - 1 && <Divider dashed />}\n            </>\n          ))}\n        </Row>\n        <Divider />\n        <Row>\n          <Row>\n            <Title level={4}>Colors & Images</Title>\n          </Row>\n          {colorFieldsCountArr.map((fieldIndex, i) => (\n            <>\n              <Row gutter={[10, 0]} key={fieldIndex}>\n                <Col span={4}>\n                  <Form.Item label={`Color: ${fieldIndex} index: ${i}`}>\n                    {getFieldDecorator(`colorOption${fieldIndex}`)(\n                      <Select placeholder=\"Select a color\">\n                        {colors.map((color, index) => (\n                          <Option value={color.id} key={index}>\n                            {color.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item label=\"Color code:\">\n                    {getFieldDecorator(`colorCode${fieldIndex}`)(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    label=\"Color Images:\"\n                    className=\"product-image-upload\"\n                  >\n                    {getFieldDecorator(`colorImages${fieldIndex}`)(\n                      <Upload\n                        listType=\"picture-card\"\n                        fileList={imagesListObj[fieldIndex]}\n                        customRequest={({ file }) =>\n                          uploadImage(file, fieldIndex)\n                        }\n                        onRemove={file =>\n                          handleImageUploadRemove(file, fieldIndex)\n                        }\n                      >\n                        {imagesListObj[fieldIndex] &&\n                        imagesListObj[fieldIndex].length >= 8 ? null : (\n                          <>\n                            <Icon type=\"plus\" />\n                            <div className=\"ant-upload-text\">Upload</div>\n                          </>\n                        )}\n                      </Upload>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item label=\"Set Default Color:\">\n                    {getFieldDecorator(`colorDefault${fieldIndex}`)(\n                      <Switch\n                        checked={getFieldValue(`colorDefault${fieldIndex}`)}\n                        onChange={value =>\n                          handleDefaultColorChange(value, fieldIndex)\n                        }\n                      />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  {colorFieldsCountArr.length !== 1 && (\n                    <Button\n                      className=\"m-t-43 m-r-5\"\n                      type=\"dashed\"\n                      icon=\"minus\"\n                      onClick={() => removeColorFields(i, fieldIndex)}\n                    />\n                  )}\n                  {i === colorFieldsCountArr.length - 1 && (\n                    <Button\n                      className=\"m-t-43\"\n                      type=\"dashed\"\n                      icon=\"plus\"\n                      onClick={() => addNewColorFields(fieldIndex)}\n                    />\n                  )}\n                </Col>\n              </Row>\n              {colorFieldsCountArr.length !== 1 &&\n                i !== colorFieldsCountArr.length - 1 && <Divider dashed />}\n            </>\n          ))}\n        </Row>\n        {/* <Row>\n        <Form.Item>\n          {getFieldDecorator('description', {\n            rules: [{ required: true, message: 'Please enter product description!' }]\n          })(\n            <Input\n              placeholder=\"product description\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n      </Row> */}\n        <Row className=\"m-t-30\">\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n              Save\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n      {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n      </Modal> */}\n    </Row>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(CreateProduct);\n","export const extractSlug = (name = '') => {\n  return name\n    .toLowerCase()\n    .replace(/ /g, '-')\n    .replace(/[^\\w-]+/g, '');\n};\n\nexport const extractSizesArr = (values = {}) => {\n  const sizesArr = Object.keys(values)\n    .filter(key => key.startsWith('sizeOption'))\n    .map(key => {\n      const sizeIndex = key[key.length - 1];\n      return {\n        is_checked: true,\n        id: values[`sizeOption${sizeIndex}`],\n        details: values[`sizeDetail${sizeIndex}`],\n        height: values[`sizeHeight${sizeIndex}`],\n        hips: values[`sizeHips${sizeIndex}`],\n        chest: values[`sizeChest${sizeIndex}`],\n        waistline: values[`sizeWaist${sizeIndex}`],\n        size_price: values[`sizePrice${sizeIndex}`],\n        amount: values[`sizeAmount${sizeIndex}`]\n      };\n    });\n  return (!sizesArr[0].id ? [] : sizesArr);\n};\n\nexport const extractColorsArr = values => {\n  const colorsArr = Object.keys(values)\n  .filter(key => key.startsWith('colorOption'))\n  .map(key => {\n    const colorIndex = key[key.length - 1];\n    return {\n      is_checked: true,\n      id: values[`colorOption${colorIndex}`],\n      product_color_code: values[`colorCode${colorIndex}`],\n      images: values[`colorImages${colorIndex}`] ? values[`colorImages${colorIndex}`].map(imgObj => ({\n        image_name: imgObj.name\n      })) : [],\n      amount: values[`colorAmount${colorIndex}`]\n    };\n  });\n  return (!colorsArr[0].id ? [] : colorsArr.reverse());\n};\n\nexport const extractDefaultColorId = (values) => {\n  const defaultColorInArr = Object.keys(values).filter(key => key.startsWith('colorDefault') && !!values[key]);\n\n  if(defaultColorInArr.length === 0) return;\n\n  const defaultColorIndex = defaultColorInArr[0][defaultColorInArr[0].length - 1];\n  return values[`colorOption${defaultColorIndex}`];\n}\n","import React from 'react';\n\nfunction ProductDetails() {\n  return (\n    <div>ProductDetails page</div>\n  );\n}\n\nexport default ProductDetails;\n","import MainLayout from '../layout';\n// GeneralViews\nimport Login from '../pages/Login';\nimport Home from '../pages/Home';\nimport CreateProduct from '../pages/CreateProduct';\nimport ProductDetails from '../pages/ProductDetails';\n\nexport const dashboardRoutes = [\n  {\n    path: '/',\n    component: Home,\n    name: \"Products\",\n    icon: \"shop\",\n    showAlways: true,\n  },\n  {\n    path: '/create-product',\n    component: CreateProduct,\n    name: \"Create Product\",\n    icon: \"upload\",\n    showAlways: true,\n  },\n  {\n    path: '/product/:productSlug',\n    component: ProductDetails,\n    name: \"Product details\",\n    icon: \"team\",\n    showAlways: false,\n  },\n];\nexport const baseRoutes = [\n  {\n    path: '/login',\n    component: Login,\n    name: \"Dashboard\",\n    noAuth: true,\n  },\n  {\n    path: '/',\n    component: MainLayout,\n    name: \"Main Layout\",\n  },\n];","import React, { useState, useEffect } from 'react';\nimport { Form } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nimport CreateProductForm from './CreateProductForm';\n\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\nimport {\n  extractSlug,\n  extractSizesArr,\n  extractColorsArr,\n  extractDefaultColorId\n} from '../../utils/productCreate';\nimport '../../assets/scss/createProduct.scss';\n\nfunction CreateProduct() {\n  const { doFetch: doProductCreateFetch, data: productCreateData } = useFetch();\n  const [productCreated, setProductCreated] = useState(false);\n\n  const handleFormSubmit = values => {\n    const productObj = {\n      name: values.name,\n      slug: extractSlug(values.name),\n      category_id: values.category,\n      category_type_id: values.type,\n      description: values.description,\n      details: values.details,\n      price: values.mainPrice,\n      currency: 'EUR',\n      is_best: values.isBest ? '1' : '0',\n      is_handmade: values.isHandmade ? '1' : '0',\n      stock_status: values.isOutOfStuck ? '0' : '1',\n      default_color_id: extractDefaultColorId(values),\n      sizes: extractSizesArr(values),\n      colors: extractColorsArr(values)\n    };\n\n    doProductCreateFetch({\n      url: URLS.productCreate,\n      params: productObj,\n      onSuccess: data => !!data.id && setProductCreated(true)\n    });\n  };\n\n  return (\n    <div className=\"main\">\n      {productCreated && <Redirect to=\"/\" />}\n      <div className=\"form-wrapper\">\n        <CreateProductForm handleFormSubmit={handleFormSubmit} />\n      </div>\n      <div className=\"brief-wrapper hidden\">sdcsa</div>\n    </div>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(CreateProduct);\n","import React, { useContext, Fragment, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { Spin, notification } from 'antd';\nimport 'antd/dist/antd.css';\nimport store from 'store';\n\nimport { LayoutContext, StoreContext } from '../../contexts';\nimport { handleRequestError } from '../../utils/API';\nimport { baseRoutes } from '../../router';\n\nimport '../../assets/scss/index.scss';\n\nfunction AppContainer({ history }) {\n  const authToken = store.get('authenticationToken');\n\n  const { loading, error, successNotification } = useContext(LayoutContext);\n  const {\n    doCategoriesFetch,\n    doColorsFetch,\n    doSizesFetch,\n    data: { categories, colors, sizes }\n  } = useContext(StoreContext);\n\n  useEffect(() => {\n    const errorMessage = handleRequestError(error);\n    const isAuthError = errorMessage === 'authentication failed';\n\n    if (authToken) {\n      (!categories || categories.length === 0) && doCategoriesFetch();\n      (!colors || colors.length === 0) && doColorsFetch();\n      (!sizes || sizes.length === 0) && doSizesFetch();\n    }\n\n    !!error &&\n      !isAuthError &&\n      notification.error({\n        placement: 'bottomRight',\n        message: 'An error occured!',\n        duration: 3,\n        description: errorMessage\n      });\n    !!successNotification &&\n      notification.success({\n        placement: 'bottomRight',\n        message: successNotification,\n        duration: 3\n      });\n    isAuthError && store.set('authenticationToken', null);\n  }, [error, successNotification, authToken]);\n\n  return (\n    <Fragment>\n      <Spin spinning={loading}>\n        <Router history={history} basename=\"/admin-dashboard\">\n          <Switch>\n            {baseRoutes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n          </Switch>\n          {!authToken && <Redirect to=\"/login\" />}\n        </Router>\n      </Spin>\n    </Fragment>\n  );\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport store from 'store';\n\nimport AppContainer from './containers/AppContainer';\n\nimport { LayoutProvider, StoreProvider } from '../src/contexts';\nimport { setAuthorizationToken } from '../src/utils/API';\n\nfunction App() {\n  const authToken = store.get('authenticationToken');\n\n  if (!!authToken) {\n    setAuthorizationToken(authToken);\n  }\n\n  return (\n    <LayoutProvider>\n      <StoreProvider>\n        <AppContainer />\n      </StoreProvider>\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}