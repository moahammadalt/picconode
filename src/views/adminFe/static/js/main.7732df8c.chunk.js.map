{"version":3,"sources":["assets/img/favicon.png","contexts/layout.js","actions/category.js","actions/color.js","actions/size.js","reducers/category.js","reducers/color.js","reducers/size.js","utils/API.js","hooks/useFetch.js","hooks/usePrevious.js","constants/urls.js","constants/index.js","contexts/store.js","layout/SideBarLayout.js","layout/HeaderLayout.js","layout/FooterLayout.js","layout/MainLayout.js","pages/Login/Login.js","utils/helpers.js","pages/Home/Home.js","components/RichInput/RichInput.js","components/CreateUpdateProductForm/CreateUpdateProductForm.js","utils/productCreateUpdate.js","pages/CreateProduct/CreateProduct.js","pages/Category/Category.js","pages/Size/Size.js","pages/Color/Color.js","pages/Demands/Demands.js","pages/ProductDetails/ProductDetails.js","router/index.js","pages/Subscribers/Subscribers.js","pages/Users/Users.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LayoutContext","createContext","LayoutProvider","children","useState","sideBarCollapsed","setCollapsed","theme","setTheme","loading","setLoading","error","setError","successNotification","setSuccessNotification","headerComponent","initialState","setHeaderComponent","Provider","value","SET_CATEGORIES","INIT_CATEGORIES","SET_COLORS","INIT_COLORS","SET_SIZES","INIT_SIZES","categoryInitialState","categoryReducer","state","action","type","categories","payload","Error","colorInitialState","colorReducer","colors","sizeInitialState","sizeReducer","sizes","baseURL","window","location","hostname","origin","API","axios","create","setAuthorizationToken","token","defaults","headers","common","handleRequestError","response","data","errorMessage","message","extractDataObject","defaultValue","useFetch","fetchInitialObj","setData","fetchObj","doFetch","useContext","useEffect","fetchData","a","res","method","get","url","post","params","key","formData","FormData","append","onSuccess","showSuccessNotification","successMessage","onError","defaultResponseValue","usePrevious","ref","useRef","current","URLS","login","dashboardRetrive","categoryList","sizeList","colorList","imageUpload","productCreate","productUpdate","slug","productListGet","productItemGet","productDelete","categoryDelete","categoryUpdate","categoryCreate","sizeCreate","sizeDelete","sizeUpdate","colorCreate","colorDelete","colorUpdate","demandsList","subscribersList","usersList","FIRST_INDEX","LAST_INDEX","URL_BASE_NAME","StoreContext","StoreProvider","useReducer","categoryState","categoryDispatch","sizeState","sizeDispatch","colorState","colorDispatch","setCategories","setSizes","setColors","doCategoriesFetchRequest","doSizesFetchRequest","doColorsFetchRequest","doCategoriesFetch","doSizesFetch","doColorsFetch","authToken","store","initialStore","initCategories","initSizes","initcolors","Sider","Layout","withRouter","props","pathname","isPathMatchRequestedUrl","path","pathToRegexp","exec","collapsible","collapsed","onCollapse","href","className","src","require","alt","mode","activeKey","selectedKeys","dashboardRoutes","map","showAlways","icon","name","Item","to","Header","HeaderLayout","isLogoutModalOpen","setLogoutModalOpen","isLogedOut","setLogedOut","onClick","title","visible","onOk","set","onCancel","Footer","FooterLayout","Content","MainLayout","style","marginLeft","route","exact","component","Form","form","getFieldDecorator","validateFields","handleSubmit","e","preventDefault","onSubmit","rules","required","prefix","placeholder","size","htmlType","createHash","arr","Hash","this","Array","isArray","forEach","o","length","prototype","keys","Object","values","getParentChildArr","parentIdKey","arrElem","mappedElem","tree","mappedArr","i","len","id","hasOwnProperty","push","extractSlug","toLowerCase","replace","arrayHasDuplicates","array","valuesSoFar","indexOf","getUIDate","date","showHour","substring","Meta","Card","Option","Select","Home","setProductList","doProductsFetch","productListData","doDeleteFetch","selectedProductToDelete","setSelectedProductToDelete","productList","selectedCategoryId","setSelectedCategoryId","searchedValue","setSearchedValue","parentCategories","prevProductList","prevCategories","productListChanged","JSON","stringify","categoriesAreReady","onChange","handleCategoryChange","cat","index","handleNameSearchChange","handleDeletedProductModal","product","categoryId","tmpProductList","filter","category_id","includes","filterSearchedValue","target","description","gutter","span","cover","images","image_name","small_image_link","shape","actions","placement","category_slug","category_type_slug","modules","toolbar","clipboard","matchVisual","formats","RichInput","onChangeHandler","initialValue","editorHtml","setEditorHtml","html","Title","Typography","handleFormSubmit","productsList","productObj","setFieldsValue","getFieldValue","getFieldsValue","categoryTypes","setCategoryTypes","categoryTags","setCategoryTags","sizeFieldsCountArr","setSizeFieldsCountArr","colorFieldsCountArr","setColorFieldsCountArr","0","imagesListObj","setImagesListObj","doImageUpload","prevProductObj","prevParentCategories","productObjIsReady","category","onCategoryChanged","onCategoryTypeChanged","imageListObj","selectedIndex","findIndex","undefined","tag","showWarningNotification","msg","notification","warning","duration","label","details","mainPrice","isBest","checked","isHandmade","isOutOfStuck","sortPlace","showSearch","optionFilterProp","filterOption","input","option","join","color","level","fieldIndex","tmpArr","splice","removeSizeFields","prevIndex","addNewSizeFields","dashed","listType","fileList","customRequest","file","product_image","imageResponse","imagesListObjTmp","uid","thumbUrl","image_link","uploadImage","onRemove","fileData","tmpImagesListObj","findSelectedImageIndex","handleImageUploadRemove","fieldName","startsWith","handleDefaultColorChange","removeColorFields","lastFiledValue","addNewColorFields","extractSizesArr","sizesArr","sizeIndex","is_checked","refId","height","hips","chest","waistline","size_price","amount","extractColorsArr","colorsArr","colorIndex","product_color_code","imgObj","reverse","extractDefaultColorId","defaultColorInArr","defaultColorIndex","extractProductPlace","sortIndex","productsIndexesArr","sort_index","isFirstProduct","Math","min","isLastProduct","max","number","extractProductIndex","productsListHashObj","firstProductId","Number","minIndex","toFixed","beforeIndex","nearestSmallestIndex","extractProductObj","category_type_id","price","currency","is_best","is_handmade","stock_status","default_color_id","validateProduct","paramsObj","colorsIds","sizesIds","doProductCreateFetch","productCreated","setProductCreated","TreeNode","Tree","Search","Input","resetFields","categoriesList","expandedKeys","setExpandedKeys","autoExpandParent","setAutoExpandParent","createCategoryModalOpen","setCreateCategoryModalOpen","deleteModalItem","setDeleteModalItem","updateModalItem","setUpdateModalItem","updateModalItemName","setUpdateModalItemName","searchValue","setSearchValue","doUpdateFetch","doCreateFetch","dataList","generateList","node","handleCategoryUpdate","closeCreateCategoryModal","handleCategoryCreate","categoryName","parentCategory","parentType","parent_id","getUpdateIcon","item","twoToneColor","getDeleteIcon","marginBottom","getParentKey","parentKey","some","self","onExpand","loop","itemIndex","beforeStr","substr","afterStr","onPressEnter","okText","Size","prevSizes","createSizeModalOpen","setCreateSizeModalOpen","newSizeName","setNewSizeName","closeCreateSizeModal","handleSizeUpdate","handleSizeCreate","bordered","dataSource","renderItem","Color","prevColors","createColorModalOpen","setCreateColorModalOpen","newColorName","setNewColorName","closeCreateColorModal","handleColorUpdate","handleColorCreate","ProductDetails","CreateProduct","Category","searchInput","demandsListData","tmpDemandsList","demand","setDemandsList","searchText","setSearchText","searchedColumn","setSearchedColumn","selectedFilter","setSelectedFilter","prevDemandsList","getFilterComponent","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","confirm","clearFilters","padding","handleSearch","width","display","marginRight","handleReset","filterIcon","filtered","onFilter","record","toString","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","handleFilterChange","product_id","columns","subject","content","date_created","tmpSubscribersList","setSubscribersList","prevSubscribersList","tmpUsersList","setUsersList","prevUsersList","productSlug","match","productData","err","setNoProductFoundAlert","doProductUpdateFetch","noProductFoundAlert","productUpdated","setProductUpdated","category_tag_id","size_id","size_details","color_id","image","thumbnail_image_link","reduce","acc","field","sizeRefIds","formSizeRefIds","sizeRefId","find","colorRefIds","formColorRefIds","colorRefId","baseRoutes","Login","noAuth","AppContainer","history","isAuthError","success","spinning","basename","App","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7732df8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.39971fa2.png\";","import React, { useState, createContext } from 'react';\n\nconst LayoutContext = createContext();\n\nfunction LayoutProvider({ children }) {\n  const [sideBarCollapsed, setCollapsed] = useState(false);\n  const [theme, setTheme] = useState('dark');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successNotification, setSuccessNotification] = useState(false);\n  const [headerComponent, setHeaderComponent] = useState(null);\n\n  const initialState = {\n    sideBarCollapsed,\n    setCollapsed,\n    theme,\n    setTheme,\n    loading,\n    setLoading,\n    error,\n    setError,\n    successNotification,\n    setSuccessNotification,\n    setHeaderComponent,\n    headerComponent,\n  };\n\n  return (\n    <LayoutContext.Provider value={initialState}>\n      {children}\n    </LayoutContext.Provider>\n  );\n}\n\nexport { LayoutContext, LayoutProvider};","export const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const INIT_CATEGORIES = 'INIT_CATEGORIES';","export const SET_COLORS = 'SET_COLORS';\nexport const INIT_COLORS = 'INIT_COLORS';","export const SET_SIZES = 'SET_SIZES';\nexport const INIT_SIZES = 'INIT_SIZES';","import { SET_CATEGORIES, INIT_CATEGORIES } from '../actions';\n\nexport const categoryInitialState = [];\n\nexport const categoryReducer = (state, action) => {\n  switch (action.type) {\n    case SET_CATEGORIES:\n      return { categories: action.payload };\n    case INIT_CATEGORIES:\n      return { categories: categoryInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import { SET_COLORS, INIT_COLORS } from '../actions';\n\nexport const colorInitialState = [];\n\nexport const colorReducer = (state, action) => {\n  switch (action.type) {\n    case SET_COLORS:\n      return { colors: action.payload };\n    case INIT_COLORS:\n      return { colors: colorInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import { SET_SIZES, INIT_SIZES } from '../actions';\n\nexport const sizeInitialState = [];\n\nexport const sizeReducer = (state, action) => {\n  switch (action.type) {\n    case SET_SIZES:\n      return { sizes: action.payload };\n    case INIT_SIZES:\n      return { sizes: sizeInitialState };\n    default:\n      throw new Error('Unexpected action');\n  }\n};","import axios from 'axios';\n\nexport const baseURL = `${\n  window.location.hostname === 'localhost'\n    ? 'http://localhost:1000'\n    : window.location.origin\n}`;\n\nexport const API = axios.create({\n  baseURL: `${baseURL}/adminAPI/`,\n});\n\nexport const setAuthorizationToken = token => {\n\n  if (token) {\n    API.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete API.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const removeAuthorizationToken = () => {\n\n  delete axios.defaults.headers.common['Authorization'];\n};\n\nexport const handleRequestError = error => {\n  const genericError = 'Generic error happened';\n  if(!error) return genericError;\n\n  if(error.response && error.response.data) {\n    return error.response.data.errorMessage || error.message || genericError;\n  }\n\n  if(error.message) return error.message;\n\n  return genericError;\n};\n\nexport const extractDataObject = (data, defaultValue) => data && data.data && data.data.data ? data.data.data : defaultValue || {};\n","import { useState, useContext, useEffect } from 'react';\nimport { LayoutContext } from '../contexts';\n\nimport { API, extractDataObject } from '../utils/API';\n\nfunction useFetch(fetchInitialObj) {\n  const [data, setData] = useState(null);\n  const [fetchObj, doFetch] = useState(fetchInitialObj);\n  const {\n    loading,\n    setLoading,\n    error,\n    setError,\n    setSuccessNotification\n  } = useContext(LayoutContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      setSuccessNotification(false);\n      try {\n        setLoading(true);\n        let res = null;\n        switch (fetchObj.method) {\n          case 'GET':\n            res = await API.get(fetchObj.url);\n            break;\n\n          case 'POST':\n            res = await API.post(fetchObj.url, fetchObj.params);\n            break;\n\n          case 'FILE_POST':\n            var formData = new FormData();\n            for (const key in fetchObj.params) {\n              formData.append(key, fetchObj.params[key]);\n            }\n            res = await API.post(fetchObj.url, formData, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            });\n            break;\n\n          default:\n            res = fetchObj.params\n              ? await API.post(fetchObj.url, fetchObj.params)\n              : await API.get(fetchObj.url);\n            break;\n        }\n\n        setData(res);\n\n        !!fetchObj.onSuccess && fetchObj.onSuccess(extractDataObject(res));\n        !!fetchInitialObj &&\n          fetchInitialObj.onSuccess &&\n          fetchInitialObj.onSuccess(extractDataObject(res));\n\n        fetchObj.showSuccessNotification &&\n          setSuccessNotification(\n            fetchObj.successMessage || 'request has been done successfully.'\n          );\n      } catch (err) {\n        !!fetchObj.onError && fetchObj.onError(err);\n        !!fetchInitialObj &&\n          fetchInitialObj.onError &&\n          fetchInitialObj.onError(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    !!fetchObj && fetchData();\n\n    doFetch(null);\n  }, [fetchObj]);\n\n  const defaultResponseValue =\n    (fetchObj && fetchObj.defaultValue) ||\n    (fetchInitialObj && fetchInitialObj.defaultValue);\n\n  return {\n    data: extractDataObject(data, defaultResponseValue),\n    error,\n    loading,\n    doFetch\n  };\n}\n\nexport default useFetch;","import { useEffect, useRef} from 'react';\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  \n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  \n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n\nexport default usePrevious;","const URLS = {\n  login: '/login',\n  dashboardRetrive: '/dashboard-retrive',\n  categoryList: '/category',\n  sizeList: '/size',\n  colorList: '/color',\n  imageUpload: '/productImage/create',\n  productCreate: '/product/create',\n  productUpdate: ({ slug }) => `/product/${slug}/update`,\n  productListGet: '/product',\n  productItemGet: ({ slug }) => `/product/${slug}`,\n  productDelete: ({ slug }) => `/product/${slug}/delete`,\n  categoryDelete: ({ slug }) => `/category/${slug}/delete`,\n  categoryUpdate: ({ slug }) => `/category/${slug}/update`,\n  categoryCreate: '/category/create',\n  sizeCreate: '/size/create',\n  sizeDelete: ({ slug }) => `/size/${slug}/delete`,\n  sizeUpdate: ({ slug }) => `/size/${slug}/update`,\n  colorCreate: '/color/create',\n  colorDelete: ({ slug }) => `/color/${slug}/delete`,\n  colorUpdate: ({ slug }) => `/color/${slug}/update`,\n  demandsList: '/productUserDemands',\n  subscribersList: '/subscribers',\n  usersList: '/users',\n}\n\nexport default URLS;","export const FIRST_INDEX = 'FIRST';\nexport const LAST_INDEX = 'LAST';\nexport const SORT_INDEX_STEP = 0.000001;\nexport const SORT_INDEX_DIGITS_NUMBER = 6;\nexport const URL_BASE_NAME = '/admin-dashboard';\n\nexport { default as URLS } from './urls';","import React, { useReducer, createContext, useEffect } from 'react';\nimport store from 'store';\n\nimport { SET_CATEGORIES, INIT_CATEGORIES, INIT_COLORS, INIT_SIZES, SET_COLORS, SET_SIZES } from '../actions';\nimport { categoryReducer, sizeReducer, colorReducer } from '../reducers';\nimport { useFetch } from '../hooks';\nimport { URLS } from '../constants';\n\n\nconst StoreContext = createContext();\n\nfunction StoreProvider({ children }) {\n  \n  const [categoryState, categoryDispatch] = useReducer(categoryReducer);\n  const [sizeState, sizeDispatch ] = useReducer(sizeReducer);\n  const [colorState, colorDispatch] = useReducer(colorReducer);\n\n  const setCategories = (categories) => {\n    categoryDispatch({ type: SET_CATEGORIES, payload: categories})\n  }\n\n  const initCategories = () => {\n    categoryDispatch({ type: INIT_CATEGORIES})\n  }\n\n  const setSizes = (sizes) => {\n    sizeDispatch({ type: SET_SIZES, payload: sizes})\n  }\n\n  const initSizes = () => {\n    sizeDispatch({ type: INIT_SIZES})\n  }\n\n  const setColors = (colors) => {\n    colorDispatch({ type: SET_COLORS, payload: colors})\n  }\n\n  const initcolors = () => {\n    colorDispatch({ type: INIT_COLORS})\n  }\n\n  const { doFetch: doCategoriesFetchRequest } = useFetch();\n  const { doFetch: doSizesFetchRequest } = useFetch();\n  const { doFetch: doColorsFetchRequest } = useFetch();\n  \n  const doCategoriesFetch = () => {\n    doCategoriesFetchRequest({url: URLS.categoryList, onSuccess: setCategories});\n  }\n  const doSizesFetch = () => {\n    doSizesFetchRequest({url: URLS.sizeList, onSuccess: setSizes});\n  }\n  const doColorsFetch = () => {\n    doColorsFetchRequest({url: URLS.colorList, onSuccess: setColors});\n  }\n\n  const authToken = store.get('authenticationToken');\n\n  useEffect(() => {\n    if(authToken) {\n      doCategoriesFetch();\n      doSizesFetch();\n      doColorsFetch();\n    }\n  }, [authToken])\n\n  const initialStore = {\n    data: {\n      ...categoryState,\n      ...sizeState,\n      ...colorState,\n    },\n    setCategories,\n    initCategories,\n    setSizes,\n    initSizes,\n    setColors,\n    initcolors,\n    doCategoriesFetch,\n    doSizesFetch,\n    doColorsFetch,\n  };\n  \n  return (\n    <StoreContext.Provider value={initialStore}>\n      {children}\n    </StoreContext.Provider>\n  );\n}\n\nexport { StoreContext, StoreProvider};","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Layout, Menu, Icon } from 'antd';\nimport pathToRegexp from 'path-to-regexp';\n\nimport { dashboardRoutes } from '../router';\nimport { LayoutContext } from '../contexts';\nimport { URL_BASE_NAME } from '../constants';\n\nconst { Sider } = Layout;\n\nfunction SideBarLayout(props) {\n  const {\n    location: { pathname }\n  } = props;\n\n  const isPathMatchRequestedUrl = path => !!pathToRegexp(path).exec(pathname);\n  const {\n    sideBarCollapsed,\n    setCollapsed,\n    theme,\n  } = useContext(LayoutContext);\n\n  return (\n    <Sider\n      collapsible\n      collapsed={sideBarCollapsed}\n      onCollapse={() => setCollapsed(!sideBarCollapsed)}\n    >\n      <a href={URL_BASE_NAME} className=\"logo\">\n        <img src={require('../assets/img/favicon.png')} alt=\"\" />\n      </a>\n      <Menu\n        theme={theme}\n        mode=\"inline\"\n        activeKey={pathname}\n        selectedKeys={[pathname]}\n      >\n        {dashboardRoutes.map(({ path, showAlways, icon, name }) => (\n          <Menu.Item key={isPathMatchRequestedUrl(path) ? pathname : path}>\n            {(showAlways || isPathMatchRequestedUrl(path)) && (\n              <Link to={path}>\n                <Icon type={icon} />\n                <span className=\"nav-text\">{name}</span>\n              </Link>\n            )}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Sider>\n  );\n}\n\nexport default withRouter(SideBarLayout);\n","import React, { useState, useContext } from 'react';\nimport { Layout, Icon, Modal } from 'antd';\nimport store from 'store';\nimport { Redirect } from 'react-router-dom';\n\nimport { LayoutContext } from '../contexts';\n\nconst { Header } = Layout;\n\nfunction HeaderLayout() {\n  const { headerComponent } = useContext(LayoutContext);\n\n  const [isLogoutModalOpen, setLogoutModalOpen] = useState(false);\n  const [isLogedOut, setLogedOut] = useState(false);\n\n  const handleLogout = () => {\n    store.set('authenticationToken', null);\n    setLogedOut(true);\n  }\n\n  return (\n    <Header>\n      {isLogedOut && <Redirect to=\"/login\" />}\n      <div className=\"header-wrapper\">\n        <div className=\"page-header\">{headerComponent}</div>\n        <Icon type=\"logout\" onClick={() => setLogoutModalOpen(true)} className=\"logout-icon\" />  \n      </div>\n      <Modal\n        title=\"Log out from dashboard\"\n        visible={isLogoutModalOpen}\n        onOk={handleLogout}\n        onCancel={() => setLogoutModalOpen(false)}\n      >\n        would you really like to log out?\n      </Modal>\n    </Header>\n  );\n}\n\nexport default HeaderLayout;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nfunction FooterLayout() {\n  return (<Footer>piccoloveliero ©2019</Footer>);\n}\n\nexport default FooterLayout;","import React, { useContext } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport SideBarLayout from './SideBarLayout';\nimport HeaderLayout from './HeaderLayout';\nimport FooterLayout from './FooterLayout';\n\nimport { dashboardRoutes } from '../router';\nimport { LayoutContext } from '../contexts';\n\nconst { Content } = Layout;\n\nfunction MainLayout() {\n  const { sideBarCollapsed } = useContext(LayoutContext);\n\n  return (\n    <Layout style={{ marginLeft: sideBarCollapsed ? '80px' : '200px' }}>\n      <SideBarLayout />\n      <Layout>\n        <HeaderLayout />\n        <Content>\n          <Switch>\n            {dashboardRoutes.map(route => (\n              <Route\n                exact={true}\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n            <Redirect to=\"/\" />\n          </Switch>\n        </Content>\n        <FooterLayout />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport store from 'store';\nimport { Form, Icon, Input, Button, Layout } from 'antd';\n\nimport { useFetch } from '../../hooks';\nimport { setAuthorizationToken } from '../../utils/API';\nimport { URLS } from '../../constants';\n\nimport '../../assets/scss/login.scss';\n\nfunction Login({ form }) {\n  const { getFieldDecorator, validateFields } = form;\n  const authToken = !!store.get('authenticationToken');\n  const {\n    data: { token },\n    doFetch\n  } = useFetch();\n\n  if (token) {\n    store.set('authenticationToken', token);\n    setAuthorizationToken(token);\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    doFetch({\n      url: URLS.login,\n      params: await validateFields()\n    });\n  };\n\n  return token || authToken ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Layout className=\"login-layout\">\n      <img src={require('../../assets/img/favicon.png')} alt=\"\" />\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: 'Please enter your username!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" className=\"input-icon\" />}\n              placeholder=\"Username\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please enter your Password!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" className=\"input-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </Layout>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(Login);\n","export const checkValue = (value, key) => {\n  value = key\n    ? key\n        .split('.')\n        .reduce(\n          (o, x) => (typeof o == 'undefined' || o === null ? o : o[x]),\n          value\n        )\n    : value;\n  return (!value && value !== false) || /^\\s*$/.test(value) ? false : true;\n};\n\nexport const isEmail = email => /^[a-z0-9._%+-]+@.+\\..+/.test(email);\n\nexport const isName = name => /^(?=.{2,150}$).*/.test(name);\n\nexport const createHash = (arr, key) => {\n  var Hash = function() {\n    this.data = {};\n    if (arr && Array.isArray(arr)) {\n      arr.forEach(o => {\n        this.data[o[key]] = o;\n      });\n      this.size = arr.length;\n    } else {\n      this.size = 0;\n    }\n  };\n  Hash.prototype.keys = function() {\n    return Object.keys(this.data);\n  };\n  Hash.prototype.values = function() {\n    return Object.values(this.data);\n  };\n\n  return new Hash();\n};\n\nexport const getParentChildArr = (arr, parentIdKey) => {\n  var tree = [],\n    mappedArr = {},\n    arrElem,\n    mappedElem;\n\n  // First map the nodes of the array to an object -> create a hash table.\n  for (var i = 0, len = arr.length; i < len; i++) {\n    arrElem = arr[i];\n    mappedArr[arrElem.id] = arrElem;\n    mappedArr[arrElem.id]['children'] = [];\n    mappedArr[arrElem.id]['key'] = arrElem.id;\n  }\n\n  for (var id in mappedArr) {\n    if (mappedArr.hasOwnProperty(id)) {\n      mappedElem = mappedArr[id];\n      // If the element is not at the root level, add it to its parent array of children.\n      if (mappedElem[parentIdKey || 'parent_id']) {\n        mappedArr[mappedElem[parentIdKey || 'parent_id']]['children'].push(\n          mappedElem\n        );\n      }\n      // If the element is at the root level, add it to first level elements array.\n      else {\n        tree.push(mappedElem);\n      }\n    }\n  }\n  return tree;\n};\n\nexport const extractSlug = (name = '') => {\n  return name\n    .toLowerCase()\n    .replace(/ /g, '-')\n    .replace(/[^\\w-]+/g, '');\n};\n\nexport const arrayHasDuplicates = array => {\n  var valuesSoFar = [];\n  for (var i = 0; i < array.length; ++i) {\n    var value = array[i];\n    if (valuesSoFar.indexOf(value) !== -1) {\n      return true;\n    }\n    valuesSoFar.push(value);\n  }\n  return false;\n};\n\nexport const getUIDate = (date = '', showHour) =>\n  showHour\n    ? `${date.substring(0, 10)} ${date.substring(11, 16)}`\n    : date.substring(0, 10);\n","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  Card,\n  Icon,\n  Row,\n  Col,\n  Avatar,\n  Modal,\n  Select,\n  Input,\n  Empty,\n  Tooltip\n} from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useFetch, usePrevious } from '../../hooks';\nimport { LayoutContext, StoreContext } from '../../contexts';\nimport { URLS } from '../../constants';\n\nimport { getParentChildArr } from '../../utils/helpers';\nimport { baseURL } from '../../utils/API';\nimport '../../assets/scss/productList.scss';\n\nconst { Meta } = Card;\nconst { Option } = Select;\n\nfunction Home() {\n  const { setHeaderComponent } = useContext(LayoutContext);\n  const {\n    data: { categories = [] }\n  } = useContext(StoreContext);\n\n  const { doFetch: doProductsFetch, data: productListData } = useFetch({\n    url: URLS.productListGet,\n    defaultValue: [],\n    onSuccess: data => {\n      setProductList(data);\n    }\n  });\n  const { doFetch: doDeleteFetch } = useFetch();\n\n  const [selectedProductToDelete, setSelectedProductToDelete] = useState(null);\n  const [productList, setProductList] = useState([]);\n  const [selectedCategoryId, setSelectedCategoryId] = useState('');\n  const [searchedValue, setSearchedValue] = useState('');\n\n  const parentCategories = getParentChildArr(categories);\n\n  const prevProductList = usePrevious(productList);\n  const prevCategories = usePrevious(categories);\n\n  useEffect(() => {\n    const productListChanged =\n      JSON.stringify(prevProductList) !== JSON.stringify(productList);\n    const categoriesAreReady =\n      JSON.stringify(prevCategories) !== JSON.stringify(categories);\n    if (productListChanged || categoriesAreReady) {\n      setHeaderComponent(getProductsFilter());\n    }\n  }, [productListData, productList, categories]);\n\n  useEffect(() => {\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, []);\n\n  const getProductFirstImage = colors => {\n    if (\n      colors.length === 0 ||\n      !colors[0].images ||\n      colors[0].images.length === 0 ||\n      !colors[0].images[0].image_name\n    )\n      return (\n        <Avatar\n          shape=\"square\"\n          size={140}\n          icon={<Icon type=\"smile\" theme=\"outlined\" />}\n          className=\"avatar-image\"\n        />\n      );\n\n    return (\n      <img\n        alt=\"example\"\n        className=\"product-first-image\"\n        src={`${baseURL}${colors[0].images[0].small_image_link}`}\n      />\n    );\n  };\n\n  const handleProductDelete = () => {\n    doDeleteFetch({\n      url: URLS.productDelete({ slug: selectedProductToDelete.slug }),\n      method: 'POST',\n      onSuccess: data => {\n        doProductsFetch({\n          url: URLS.productListGet\n        });\n        setSelectedProductToDelete(null);\n      }\n    });\n  };\n\n  const handleDeletedProductModal = product => {\n    setSelectedProductToDelete({ ...product });\n  };\n\n  const handleCategoryChange = categoryId => {\n    setSelectedCategoryId(categoryId);\n    let tmpProductList = categoryId\n      ? productListData.filter(product => product.category_id === categoryId)\n      : productListData;\n    if (searchedValue) {\n      tmpProductList = tmpProductList.filter(\n        product =>\n          product.name.toLowerCase().includes(searchedValue) ||\n          product.slug.toLowerCase().includes(searchedValue)\n      );\n    }\n    setProductList(tmpProductList);\n  };\n\n  const handleNameSearchChange = e => {\n    const filterSearchedValue = e.target.value;\n    setSearchedValue(filterSearchedValue);\n    let tmpProductList = filterSearchedValue\n      ? productListData.filter(\n          product =>\n            product.name.toLowerCase().includes(filterSearchedValue) ||\n            product.slug.toLowerCase().includes(filterSearchedValue)\n        )\n      : productListData;\n    if (selectedCategoryId) {\n      tmpProductList = tmpProductList.filter(\n        product => product.category_id === selectedCategoryId\n      );\n    }\n    setProductList(tmpProductList);\n  };\n\n  function getProductsFilter() {\n    return (\n      <>\n        <div className=\"filter-item\">\n          <b>Products count: {productList.length}</b>\n        </div>\n        <div className=\"filter-item\">\n          <b>Category:</b>\n          <Select\n            value={selectedCategoryId}\n            className=\"filter-select\"\n            onChange={handleCategoryChange}\n          >\n            <Option value=\"\">All</Option>\n            {parentCategories.map((cat, index) => (\n              <Option value={cat.id} key={index}>\n                {cat.name}\n              </Option>\n            ))}\n          </Select>\n        </div>\n        <div className=\"filter-item\">\n          <b>Search by name:</b>\n          <Input\n            className=\"filter-by-name\"\n            onChange={handleNameSearchChange}\n            placeholder=\"product name\"\n          />\n        </div>\n      </>\n    );\n  }\n\n  if (productList.length === 0) {\n    return <Empty description=\"No products found!\" />;\n  }\n\n  return (\n    <Row className=\"product-list-wrapper\" gutter={[30, 30]}>\n      {productList.map((product, index) => (\n        <Col span={6} key={product.slug}>\n          <Card\n            cover={getProductFirstImage(product.colors)}\n            actions={[\n              <Tooltip placement=\"top\" title=\"Delete\">\n                <Icon\n                  type=\"delete\"\n                  key=\"delete\"\n                  onClick={() => handleDeletedProductModal(product)}\n                />\n              </Tooltip>,\n              <Tooltip placement=\"top\" title=\"Update\">\n                <Link to={`product/${product.slug}`}>\n                  <Icon type=\"edit\" key=\"edit\" />\n                </Link>\n              </Tooltip>,\n              <Tooltip placement=\"top\" title=\"Look\">\n                <a href={`${baseURL}/${product.slug}`} target=\"_blank\">\n                  <Icon type=\"link\" key=\"link\" />\n                </a>\n              </Tooltip>,\n            ]}\n          >\n            <Meta\n              title={product.name}\n              description={`${product.category_slug} ${\n                product.category_type_slug\n                  ? `-${product.category_type_slug}`\n                  : ''\n              }`}\n            />\n          </Card>\n        </Col>\n      ))}\n\n      <Modal\n        title={`Delete product: ${selectedProductToDelete &&\n          selectedProductToDelete.name}`}\n        visible={!!selectedProductToDelete}\n        onOk={handleProductDelete}\n        onCancel={() => setSelectedProductToDelete(null)}\n      >\n        Do you confirm deleteing the product?\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'}, \n     {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image',],\n  ],\n  clipboard: {\n    matchVisual: false,\n  }\n}\n\nconst formats = [\n  'header', 'font', 'size',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image', 'video'\n]\n\nfunction RichInput({ placeholder = '', onChangeHandler, initialValue = ''}) {\n  const [ editorHtml, setEditorHtml ] = useState('');\n\n  useEffect(() => {\n    if(!editorHtml && !!initialValue) {\n      setEditorHtml(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChange = (html) => {\n    setEditorHtml(html);\n    onChangeHandler(html);\n  }\n\n  return (\n    <ReactQuill \n      onChange={handleChange}\n      value={editorHtml}\n      modules={modules}\n      formats={formats}\n      placeholder={placeholder}\n    />\n   )\n}\n\nexport default RichInput;","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Select,\n  Typography,\n  notification,\n  Upload,\n  Icon,\n  Divider,\n  Switch\n} from 'antd';\n\nimport RichInput from '../RichInput';\n\nimport { getParentChildArr } from '../../utils/helpers';\nimport { StoreContext } from '../../contexts';\nimport { URLS, FIRST_INDEX, LAST_INDEX } from '../../constants';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { baseURL } from '../../utils/API';\nimport '../../assets/scss/CreateUpdateProductForm.scss';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction CreateUpdateProductForm({\n  form,\n  handleFormSubmit,\n  productsList = [],\n  productObj = {}\n}) {\n  const {\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    getFieldValue,\n    getFieldsValue\n  } = form;\n  const {\n    data: { categories = [], sizes = [], colors = [] }\n  } = useContext(StoreContext);\n  const parentCategories = getParentChildArr(categories);\n  const [categoryTypes, setCategoryTypes] = useState([]);\n  const [categoryTags, setCategoryTags] = useState([]);\n  const [sizeFieldsCountArr, setSizeFieldsCountArr] = useState([0]);\n  const [colorFieldsCountArr, setColorFieldsCountArr] = useState([0]);\n  const [imagesListObj, setImagesListObj] = useState({ 0: [] });\n\n  const { doFetch: doImageUpload } = useFetch();\n  const prevProductObj = usePrevious(productObj);\n  const prevParentCategories = usePrevious(parentCategories);\n\n  useEffect(() => {\n    const productObjIsReady =\n      JSON.stringify(prevProductObj) !== JSON.stringify(productObj);\n    const categoriesAreReady =\n      JSON.stringify(prevParentCategories) !== JSON.stringify(parentCategories);\n    if (productObjIsReady || categoriesAreReady) {\n      !!productObj.category && onCategoryChanged(productObj.category);\n      !!productObj.type && onCategoryTypeChanged(productObj.type);\n      !!productObj.type && setFieldsValue({ type: productObj.type });\n      !!productObj.sizeFieldsCountArr &&\n        setSizeFieldsCountArr(productObj.sizeFieldsCountArr);\n      !!productObj.colorFieldsCountArr &&\n        setColorFieldsCountArr(productObj.colorFieldsCountArr);\n      !!productObj.imageListObj && setImagesListObj(productObj.imageListObj);\n    }\n  }, [productObj, parentCategories]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const values = await validateFields();\n    handleFormSubmit(values);\n  };\n\n  const onCategoryChanged = value => {\n    const selectedIndex = parentCategories.findIndex(({ id }) => value == id);\n    setCategoryTypes(\n      parentCategories[selectedIndex]\n        ? parentCategories[selectedIndex].children\n        : []\n    );\n    setFieldsValue({\n      type: undefined\n    });\n  };\n\n  const onCategoryTypeChanged = value => {\n    const selectedIndex = categoryTypes.findIndex(({ id }) => value == id);\n    setCategoryTags(\n      categoryTypes[selectedIndex] ? categoryTypes[selectedIndex].children : []\n    );\n    setFieldsValue({\n      tag: undefined\n    });\n  };\n\n  const setDescription = value => {\n    setFieldsValue({\n      description: value\n    });\n  };\n\n  const setDetails = value => {\n    setFieldsValue({\n      details: value\n    });\n  };\n\n  const showWarningNotification = msg => {\n    notification.warning({\n      placement: 'bottomRight',\n      message: 'An error occured!',\n      duration: 4,\n      description: msg\n    });\n  };\n\n  const addNewSizeFields = prevIndex => {\n    const hasPrevSize = !!getFieldValue('sizeOption' + prevIndex);\n    if (!hasPrevSize) {\n      showWarningNotification('please enter the size before adding a new one.');\n    } else {\n      const tmpArr = [...sizeFieldsCountArr];\n      tmpArr.push(tmpArr[tmpArr.length - 1] + 1);\n      setSizeFieldsCountArr(tmpArr);\n    }\n  };\n\n  const removeSizeFields = (index, fieldIndex) => {\n    const tmpArr = [...sizeFieldsCountArr];\n    tmpArr.splice(index, 1);\n    setSizeFieldsCountArr(tmpArr);\n  };\n\n  const addNewColorFields = prevIndex => {\n    const hasPrevColor = !!getFieldValue('colorOption' + prevIndex);\n    if (!hasPrevColor) {\n      showWarningNotification(\n        'please enter the color before adding a new one.'\n      );\n    } else {\n      const tmpArr = [...colorFieldsCountArr];\n      const lastFiledValue = tmpArr[tmpArr.length - 1];\n      tmpArr.push(lastFiledValue + 1);\n      setColorFieldsCountArr(tmpArr);\n      setImagesListObj({\n        ...imagesListObj,\n        [lastFiledValue + 1]: []\n      });\n    }\n  };\n\n  const removeColorFields = (index, fieldIndex) => {\n    const tmpArr = [...colorFieldsCountArr];\n    tmpArr.splice(index, 1);\n    setColorFieldsCountArr(tmpArr);\n\n    const tmpImagesListObj = imagesListObj;\n    delete tmpImagesListObj[fieldIndex];\n    setImagesListObj(tmpImagesListObj);\n  };\n\n  const uploadImage = (file, fieldIndex) => {\n    doImageUpload({\n      method: 'FILE_POST',\n      params: { product_image: file },\n      url: URLS.imageUpload,\n      showSuccessNotification: true,\n      successMessage: 'Image uploaded successfully.',\n      onSuccess: imageResponse => {\n        let imagesListObjTmp = { ...imagesListObj };\n\n        imagesListObjTmp[fieldIndex].push({\n          uid: imageResponse.image_name,\n          thumbUrl: baseURL + imageResponse.image_link,\n          name: imageResponse.image_name\n        });\n        setImagesListObj(imagesListObjTmp);\n        setFieldsValue({\n          [`colorImages${fieldIndex}`]: imagesListObjTmp[fieldIndex]\n        });\n      }\n    });\n  };\n\n  const handleImageUploadRemove = (fileData, fieldIndex) => {\n    const tmpImagesListObj = { ...imagesListObj };\n    const findSelectedImageIndex = imagesListObj[fieldIndex].findIndex(\n      ({ uid }) => fileData.uid === uid\n    );\n    tmpImagesListObj[fieldIndex].splice(findSelectedImageIndex, 1);\n    setImagesListObj(tmpImagesListObj);\n    setFieldsValue({\n      [`colorImages${fieldIndex}`]: tmpImagesListObj[fieldIndex]\n    });\n  };\n\n  const handleDefaultColorChange = (value, fieldIndex) => {\n    Object.keys(getFieldsValue()).forEach(fieldName => {\n      if (\n        fieldName.startsWith('colorDefault') &&\n        fieldIndex != fieldName[fieldName.length - 1]\n      ) {\n        setFieldsValue({\n          [fieldName]: false\n        });\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Form onSubmit={handleSubmit} className=\"form-wrapper\">\n        <Row>\n          <Col span={12}>\n            <Form.Item label=\"Name:\">\n              {getFieldDecorator('name', {\n                initialValue: productObj.name,\n                rules: [\n                  { required: true, message: 'Please enter product name!' }\n                ]\n              })(<Input placeholder=\"product name\" size=\"large\" />)}\n            </Form.Item>\n          </Col>\n          <Col span={12} />\n        </Row>\n        <Divider />\n        <Row gutter={[20, 0]}>\n          <Col span={8}>\n            <Form.Item label=\"Category\">\n              {getFieldDecorator('category', {\n                initialValue: productObj.category,\n                rules: [\n                  { required: true, message: 'Please select the category!' }\n                ]\n              })(\n                <Select\n                  placeholder=\"Select a category\"\n                  onChange={onCategoryChanged}\n                >\n                  {parentCategories.map((cat, index) => (\n                    <Option value={cat.id} key={index}>\n                      {cat.name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            {categoryTypes.length > 0 && (\n              <Form.Item label=\"Type\">\n                {getFieldDecorator('type', {\n                  initialValue: productObj.type,\n                  rules: [\n                    { required: true, message: 'Please select the type!' }\n                  ]\n                })(\n                  <Select\n                    placeholder=\"Select a type\"\n                    onChange={onCategoryTypeChanged}\n                  >\n                    {categoryTypes.map((cat, index) => (\n                      <Option value={cat.id} key={index}>\n                        {cat.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            )}\n          </Col>\n          <Col span={8}>\n            {categoryTags.length > 0 && (\n              <Form.Item label=\"Tag\">\n                {getFieldDecorator('tag', { initialValue: productObj.tag })(\n                  <Select placeholder=\"Select a tag\">\n                    {categoryTags.map((cat, index) => (\n                      <Option value={cat.id} key={index}>\n                        {cat.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            )}\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Description\">\n            {getFieldDecorator('description', {\n              initialValue: productObj.description\n            })(\n              <RichInput\n                placeholder=\"Description\"\n                initialValue={productObj.description}\n                onChangeHandler={setDescription}\n              />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Details\">\n            {getFieldDecorator('details', { initialValue: productObj.details })(\n              <RichInput\n                placeholder=\"Details\"\n                onChangeHandler={setDetails}\n                initialValue={productObj.description}\n              />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Main Price\" className=\"price-input\">\n            {getFieldDecorator('mainPrice', {\n              initialValue: productObj.mainPrice\n            })(<Input size=\"large\" />)}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Best Product:\">\n            {getFieldDecorator('isBest', { initialValue: productObj.isBest })(\n              <Switch checked={getFieldValue('isBest')} />\n            )}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Handmade Product:\">\n            {getFieldDecorator('isHandmade', {\n              initialValue: productObj.isHandmade\n            })(<Switch checked={getFieldValue('isHandmade')} />)}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Form.Item label=\"Is Product Out Of Stock:\">\n            {getFieldDecorator('isOutOfStuck', {\n              initialValue: productObj.isOutOfStuck\n            })(<Switch checked={getFieldValue('isOutOfStuck')} />)}\n          </Form.Item>\n        </Row>\n        <Divider />\n        <Row>\n          <Col span={8}>\n            <Form.Item label=\"Product Place:\">\n              {getFieldDecorator('sortPlace', {\n                initialValue: productObj.sortPlace || LAST_INDEX\n              })(\n                <Select\n                  showSearch\n                  placeholder=\"Select a product\"\n                  optionFilterProp=\"children\"\n                  filterOption={(input, option) => {\n                    const str = Array.isArray(option.props.children)\n                      ? option.props.children.join('')\n                      : option.props.children;\n                    return str.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                  }}\n                >\n                  <Option value={FIRST_INDEX} style={{ color: '#7bb3b3' }}>\n                    At First\n                  </Option>\n                  <Option value={LAST_INDEX} style={{ color: '#7bb3b3' }}>\n                    At Last\n                  </Option>\n                  {productsList.map(\n                    ({ id, name }) =>\n                      productObj.name !== name && (\n                        <Option key={id} value={id}>\n                          Before: {name}\n                        </Option>\n                      )\n                  )}\n                </Select>\n              )}\n            </Form.Item>\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Row>\n            <Title level={4}>Sizes</Title>\n          </Row>\n          {sizeFieldsCountArr.map((fieldIndex, i) => (\n            <div key={i}>\n              <Form.Item className=\"hidden\">\n                {getFieldDecorator(`sizeRefId${fieldIndex}`, {\n                  initialValue: productObj[`sizeRefId${fieldIndex}`],\n                })(\n                  <Input />\n                )}\n              </Form.Item>\n              <Row gutter={[5, 0]} key={fieldIndex}>\n                <Col span={3}>\n                  <Form.Item label=\"Size:\">\n                    {getFieldDecorator(`sizeOption${fieldIndex}`, {\n                      initialValue: productObj[`sizeOption${fieldIndex}`]\n                    })(\n                      <Select placeholder=\"Select a size\">\n                        {sizes.map((size, index) => (\n                          <Option value={size.id} key={index}>\n                            {size.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Size detail:\">\n                    {getFieldDecorator(`sizeDetail${fieldIndex}`, {\n                      initialValue: productObj[`sizeDetail${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Size Price:\">\n                    {getFieldDecorator(`sizePrice${fieldIndex}`, {\n                      initialValue: productObj[`sizePrice${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Height:\">\n                    {getFieldDecorator(`sizeHeight${fieldIndex}`, {\n                      initialValue: productObj[`sizeHeight${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Chest:\">\n                    {getFieldDecorator(`sizeChest${fieldIndex}`, {\n                      initialValue: productObj[`sizeChest${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Waist:\">\n                    {getFieldDecorator(`sizeWaist${fieldIndex}`, {\n                      initialValue: productObj[`sizeWaist${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  <Form.Item label=\"Hips:\">\n                    {getFieldDecorator(`sizeHips${fieldIndex}`, {\n                      initialValue: productObj[`sizeHips${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={3}>\n                  {sizeFieldsCountArr.length !== 1 && (\n                    <Button\n                      className=\"m-t-43 m-r-5\"\n                      type=\"dashed\"\n                      icon=\"minus\"\n                      onClick={() => removeSizeFields(i, fieldIndex)}\n                    />\n                  )}\n                  {i === sizeFieldsCountArr.length - 1 && (\n                    <Button\n                      className=\"m-t-43\"\n                      type=\"dashed\"\n                      icon=\"plus\"\n                      onClick={() => addNewSizeFields(fieldIndex)}\n                    />\n                  )}\n                </Col>\n                <Col span={3}></Col>\n              </Row>\n              {sizeFieldsCountArr.length !== 1 &&\n                i !== sizeFieldsCountArr.length - 1 && <Divider dashed />}\n            </div>\n          ))}\n        </Row>\n        <Divider />\n        <Row>\n          <Row>\n            <Title level={4}>Colors & Images</Title>\n          </Row>\n          {colorFieldsCountArr.map((fieldIndex, i) => (\n            <div key={i}>\n              <Form.Item className=\"hidden\">\n                {getFieldDecorator(`colorRefId${fieldIndex}`, {\n                  initialValue: productObj[`colorRefId${fieldIndex}`],\n                })(\n                  <Input />\n                )}\n              </Form.Item>\n              <Row gutter={[10, 0]} key={fieldIndex}>\n                <Col span={4}>\n                  <Form.Item label={`Color: ${fieldIndex} index: ${i}`}>\n                    {getFieldDecorator(`colorOption${fieldIndex}`, {\n                      initialValue: productObj[`colorOption${fieldIndex}`]\n                    })(\n                      <Select placeholder=\"Select a color\">\n                        {colors.map((color, index) => (\n                          <Option value={color.id} key={index}>\n                            {color.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item label=\"Color code:\">\n                    {getFieldDecorator(`colorCode${fieldIndex}`, {\n                      initialValue: productObj[`colorCode${fieldIndex}`]\n                    })(<Input />)}\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item\n                    label=\"Color Images:\"\n                    className=\"product-image-upload\"\n                  >\n                    {getFieldDecorator(`colorImages${fieldIndex}`, {\n                      initialValue: productObj[`colorImages${fieldIndex}`]\n                    })(\n                      <Upload\n                        listType=\"picture-card\"\n                        fileList={imagesListObj[fieldIndex]}\n                        customRequest={({ file }) =>\n                          uploadImage(file, fieldIndex)\n                        }\n                        onRemove={file =>\n                          handleImageUploadRemove(file, fieldIndex)\n                        }\n                      >\n                        {imagesListObj[fieldIndex] &&\n                        imagesListObj[fieldIndex].length >= 8 ? null : (\n                          <>\n                            <Icon type=\"plus\" />\n                            <div className=\"ant-upload-text\">Upload</div>\n                          </>\n                        )}\n                      </Upload>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item label=\"Set Default Color:\">\n                    {getFieldDecorator(`colorDefault${fieldIndex}`, {\n                      initialValue: productObj[`colorDefault${fieldIndex}`]\n                    })(\n                      <Switch\n                        checked={getFieldValue(`colorDefault${fieldIndex}`)}\n                        onChange={value =>\n                          handleDefaultColorChange(value, fieldIndex)\n                        }\n                      />\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  {colorFieldsCountArr.length !== 1 && (\n                    <Button\n                      className=\"m-t-43 m-r-5\"\n                      type=\"dashed\"\n                      icon=\"minus\"\n                      onClick={() => removeColorFields(i, fieldIndex)}\n                    />\n                  )}\n                  {i === colorFieldsCountArr.length - 1 && (\n                    <Button\n                      className=\"m-t-43\"\n                      type=\"dashed\"\n                      icon=\"plus\"\n                      onClick={() => addNewColorFields(fieldIndex)}\n                    />\n                  )}\n                </Col>\n              </Row>\n              {colorFieldsCountArr.length !== 1 &&\n                i !== colorFieldsCountArr.length - 1 && <Divider dashed />}\n            </div>\n          ))}\n        </Row>\n        {/* <Row>\n        <Form.Item>\n          {getFieldDecorator('description', {\n            rules: [{ required: true, message: 'Please enter product description!' }]\n          })(\n            <Input\n              placeholder=\"product description\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n      </Row> */}\n        <Row className=\"m-t-30\">\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n              Save\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n      {/* <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n      </Modal> */}\n    </Row>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(CreateUpdateProductForm);\n","import { notification } from 'antd';\n\nimport {\n  FIRST_INDEX,\n  LAST_INDEX,\n  SORT_INDEX_STEP,\n  SORT_INDEX_DIGITS_NUMBER\n} from '../constants';\nimport { createHash, extractSlug, arrayHasDuplicates } from './helpers';\n\nexport const extractSizesArr = (values = {}) => {\n  const sizesArr = Object.keys(values)\n    .filter(key => key.startsWith('sizeOption'))\n    .map(key => {\n      const sizeIndex = key[key.length - 1];\n      return {\n        is_checked: true,\n        refId: values[`sizeRefId${sizeIndex}`],\n        id: values[`sizeOption${sizeIndex}`],\n        details: values[`sizeDetail${sizeIndex}`],\n        height: values[`sizeHeight${sizeIndex}`],\n        hips: values[`sizeHips${sizeIndex}`],\n        chest: values[`sizeChest${sizeIndex}`],\n        waistline: values[`sizeWaist${sizeIndex}`],\n        size_price: values[`sizePrice${sizeIndex}`],\n        amount: values[`sizeAmount${sizeIndex}`]\n      };\n    });\n  return !sizesArr[0].id ? [] : sizesArr;\n};\n\nexport const extractColorsArr = values => {\n  const colorsArr = Object.keys(values)\n    .filter(key => key.startsWith('colorOption'))\n    .map(key => {\n      const colorIndex = key[key.length - 1];\n      return {\n        is_checked: true,\n        refId: values[`colorRefId${colorIndex}`],\n        id: values[`colorOption${colorIndex}`],\n        product_color_code: values[`colorCode${colorIndex}`],\n        images: values[`colorImages${colorIndex}`]\n          ? values[`colorImages${colorIndex}`].map(imgObj => ({\n              image_name: imgObj.name\n            }))\n          : [],\n        amount: values[`colorAmount${colorIndex}`]\n      };\n    });\n  return !colorsArr[0].id ? [] : colorsArr.reverse();\n};\n\nexport const extractDefaultColorId = values => {\n  const defaultColorInArr = Object.keys(values).filter(\n    key => key.startsWith('colorDefault') && !!values[key]\n  );\n\n  if (defaultColorInArr.length === 0) return;\n\n  const defaultColorIndex =\n    defaultColorInArr[0][defaultColorInArr[0].length - 1];\n  return values[`colorOption${defaultColorIndex}`];\n};\n\nexport const extractProductPlace = (sortIndex, productsList) => {\n  const productsListHashObj = createHash(productsList, 'id');\n  const productsIndexesArr = productsListHashObj\n    .values()\n    .map(({ sort_index }) => sort_index);\n\n  const isFirstProduct = sortIndex === Math.min(...productsIndexesArr);\n  const isLastProduct = sortIndex === Math.max(...productsIndexesArr);\n  \n  const getPlaceInBetween = () =>\n    Math.min(...productsIndexesArr.filter(number => number > sortIndex));\n\n  switch (true) {\n    case isFirstProduct:\n      return FIRST_INDEX;\n\n    case isLastProduct:\n      return LAST_INDEX;\n\n    default:\n      return getPlaceInBetween();\n  }\n};\n\nexport const extractProductIndex = ({ sortPlace }, productsList) => {\n  const productsListHashObj = createHash(productsList, 'id');\n  const productsIndexesArr = productsListHashObj\n    .values()\n    .map(({ sort_index }) => sort_index);\n  const firstProductId = Number(productsListHashObj.keys()[0]);\n  let sortIndex;\n\n  switch (sortPlace) {\n    case LAST_INDEX:\n      sortIndex = null;\n      break;\n\n    case FIRST_INDEX:\n    case firstProductId:\n      const minIndex = Math.min(...productsIndexesArr);\n      sortIndex = Number(\n        Number(minIndex - 0.1 + SORT_INDEX_STEP).toFixed(\n          SORT_INDEX_DIGITS_NUMBER\n        )\n      );\n      break;\n\n    default:\n      const beforeIndex = productsListHashObj.data[sortPlace].sort_index;\n      const nearestSmallestIndex = Math.max(\n        ...productsIndexesArr.filter(number => number < beforeIndex)\n      );\n      sortIndex = Number(\n        Number(nearestSmallestIndex + SORT_INDEX_STEP).toFixed(\n          SORT_INDEX_DIGITS_NUMBER\n        )\n      );\n      while (productsIndexesArr.includes(sortIndex)) {\n        sortIndex = Number(\n          Number(sortIndex + SORT_INDEX_STEP).toFixed(SORT_INDEX_DIGITS_NUMBER)\n        );\n      }\n      break;\n  }\n\n  return sortIndex;\n};\n\nexport const extractProductObj = (values, productsList) => ({\n  name: values.name,\n  slug: extractSlug(values.name),\n  category_id: values.category,\n  category_type_id: values.type,\n  description: values.description,\n  details: values.details,\n  price: values.mainPrice,\n  currency: 'EUR',\n  is_best: values.isBest ? '1' : '0',\n  is_handmade: values.isHandmade ? '1' : '0',\n  stock_status: values.isOutOfStuck ? '0' : '1',\n  default_color_id: extractDefaultColorId(values),\n  sort_index: extractProductIndex(values, productsList),\n  sizes: extractSizesArr(values),\n  colors: extractColorsArr(values),\n});\n\nexport const validateProduct = (paramsObj) => {\n  let errorMessage;\n\n  if(paramsObj.colors.length === 0) {\n    errorMessage = 'There should be at least one color added.';\n  }\n  if(paramsObj.sizes.length === 0) {\n    errorMessage = 'There should be at least one size added.';\n  }\n\n  const colorsIds = paramsObj.colors.map(color => color.id);\n  if(arrayHasDuplicates(colorsIds)) {\n    errorMessage = 'Colors can not be duplicated, each color should be different from the other.';\n  }\n\n  const sizesIds = paramsObj.sizes.map(size => size.id);\n  if(arrayHasDuplicates(sizesIds)) {\n    errorMessage = 'Sizes can not be duplicated, each size should be different from the other.';\n  }\n\n  if(!!errorMessage) {\n    notification.warning({\n      placement: 'bottomRight',\n      errorMessage: 'An error occured!',\n      duration: 7,\n      description: errorMessage\n    });\n    return false;\n  }\n  else{\n    return true;\n  }\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Form } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nimport CreateUpdateProductForm from '../../components/CreateUpdateProductForm';\n\nimport { LayoutContext } from '../../contexts';\nimport { useFetch } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { extractProductObj, validateProduct } from '../../utils/productCreateUpdate';\nimport '../../assets/scss/createProduct.scss';\n\nfunction CreateProduct() {\n  const { setHeaderComponent } = useContext(LayoutContext);\n  const { doFetch: doProductCreateFetch, } = useFetch();\n  const { data: productsList } = useFetch({\n    url: URLS.productListGet,\n    defaultValue: [],\n  });\n  const [productCreated, setProductCreated] = useState(false);\n\n  const handleFormSubmit = values => {\n    const paramsObj = extractProductObj(values, productsList);\n    if(!validateProduct(paramsObj)) return;  \n\n    doProductCreateFetch({\n      url: URLS.productCreate,\n      params: paramsObj,\n      onSuccess: data => !!data.id && setProductCreated(true)\n    });\n  };\n\n  useEffect(() => {\n    setHeaderComponent(<b>Create new product</b>);\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, []);\n\n  return (\n    <div className=\"main\">\n      {productCreated && <Redirect to=\"/\" />}\n      <div className=\"form-wrapper\">\n        <CreateUpdateProductForm handleFormSubmit={handleFormSubmit} productsList={productsList} />\n      </div>\n      <div className=\"brief-wrapper hidden\">sdcsa</div>\n    </div>\n  );\n}\n\nexport default Form.create({ name: 'loginForm' })(CreateProduct);\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Tree,\n  Input,\n  Modal,\n  Row,\n  Icon,\n  notification,\n  Button,\n  Form,\n  Select\n} from 'antd';\n\nimport { StoreContext, LayoutContext } from '../../contexts';\nimport { getParentChildArr, extractSlug } from '../../utils/helpers';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\n\nimport '../../assets/scss/category.scss';\n\nconst { TreeNode } = Tree;\nconst { Search } = Input;\nconst { Option } = Select;\n\nfunction Category({ form }) {\n  const {\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    resetFields\n  } = form;\n  const {\n    data: { categories = [] },\n    doCategoriesFetch\n  } = useContext(StoreContext);\n  const { setHeaderComponent } = useContext(LayoutContext);\n  const categoriesList = getParentChildArr(categories);\n\n  const prevCategories = usePrevious(categories);\n\n  const [expandedKeys, setExpandedKeys] = useState([]);\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\n  const [createCategoryModalOpen, setCreateCategoryModalOpen] = useState(false);\n  const [categoryTypes, setCategoryTypes] = useState([]);\n  const [deleteModalItem, setDeleteModalItem] = useState({});\n  const [updateModalItem, setUpdateModalItem] = useState({});\n  const [updateModalItemName, setUpdateModalItemName] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n\n  const { doFetch: doDeleteFetch } = useFetch();\n  const { doFetch: doUpdateFetch } = useFetch();\n  const { doFetch: doCreateFetch } = useFetch();\n\n  useEffect(() => {\n    if (categoriesList && categoriesList.length && expandedKeys.length === 0) {\n      setExpandedKeys(categoriesList.map(category => category.id));\n    }\n  }, [categoriesList]);\n\n  useEffect(() => {\n    const categoriesChanged =\n      JSON.stringify(categories) !== JSON.stringify(prevCategories);\n    categoriesChanged &&\n      setHeaderComponent(<b>Total categories {categories.length}</b>);\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, [categories]);\n\n  const dataList = [];\n  const generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n      const node = data[i];\n      const { key, name } = node;\n      dataList.push({ key, name });\n      if (node.children) {\n        generateList(node.children);\n      }\n    }\n  };\n\n  const getParentKey = (key, tree) => {\n    let parentKey;\n    for (let i = 0; i < tree.length; i++) {\n      const node = tree[i];\n      if (node.children) {\n        if (node.children.some(item => item.key === key)) {\n          parentKey = node.key;\n        } else if (getParentKey(key, node.children)) {\n          parentKey = getParentKey(key, node.children);\n        }\n      }\n    }\n    return parentKey;\n  };\n\n  generateList(categoriesList);\n\n  const handleTreeExpand = expandedKeys => {\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(true);\n  };\n\n  const handleSearchChange = e => {\n    const { value } = e.target;\n    const expandedKeys = dataList\n      .map(item => {\n        if (item.name && item.name.indexOf(value) > -1) {\n          return getParentKey(item.key, categoriesList);\n        }\n        return null;\n      })\n      .filter((item, i, self) => item && self.indexOf(item) === i);\n    setSearchValue(value);\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(true);\n  };\n\n  const handleCategoryDelete = () => {\n    doDeleteFetch({\n      url: URLS.categoryDelete({ slug: deleteModalItem.slug }),\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Category ${deleteModalItem.name} has been deleted`,\n      onSuccess: data => {\n        doCategoriesFetch();\n        setDeleteModalItem({});\n      }\n    });\n  };\n\n  const handleCategoryUpdate = () => {\n    if (!updateModalItemName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the category name!',\n        duration: 4\n      });\n      return;\n    }\n    doUpdateFetch({\n      url: URLS.categoryUpdate({ slug: updateModalItem.slug }),\n      params: {\n        name: updateModalItemName\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Category ${updateModalItemName} has been updated`,\n      onSuccess: data => {\n        doCategoriesFetch();\n        setUpdateModalItem({});\n        setUpdateModalItemName('');\n      }\n    });\n  };\n\n  const onCategoryChanged = value => {\n    const selectedIndex = categoriesList.findIndex(({ id }) => value === id);\n    setCategoryTypes(categoriesList[selectedIndex].children);\n    setFieldsValue({\n      parentType: undefined\n    });\n  };\n\n  const closeCreateCategoryModal = () => {\n    setCreateCategoryModalOpen(false);\n    setCategoryTypes([]);\n    resetFields();\n  };\n\n  const handleCategoryCreate = async e => {\n    e.preventDefault();\n    const { categoryName, parentCategory, parentType } = await validateFields();\n    doCreateFetch({\n      url: URLS.categoryCreate,\n      params: {\n        name: categoryName,\n        slug: extractSlug(categoryName),\n        parent_id: parentType || parentCategory\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Category ${categoryName} has been created`,\n      onSuccess: data => {\n        doCategoriesFetch();\n        closeCreateCategoryModal();\n      }\n    });\n  };\n\n  const getUpdateIcon = item => (\n    <Icon\n      type=\"edit\"\n      onClick={() => {\n        setUpdateModalItem(item);\n        setUpdateModalItemName(item.name);\n      }}\n      className=\"m-l-20 m-r-15\"\n      theme=\"twoTone\"\n      twoToneColor=\"#1890ff\"\n    />\n  );\n\n  const getDeleteIcon = item => (\n    <Icon\n      type=\"delete\"\n      onClick={() => setDeleteModalItem(item)}\n      theme=\"twoTone\"\n      twoToneColor=\"#f5222d\"\n    />\n  );\n\n  const loop = data =>\n    data.map((item, itemIndex) => {\n      const index = item.name.indexOf(searchValue);\n      const beforeStr = item.name.substr(0, index);\n      const afterStr = item.name.substr(index + searchValue.length);\n      const title =\n        index > -1 ? (\n          <h3 className=\"category-item\">\n            {beforeStr}\n            <span style={{ color: '#f50' }}>{searchValue}</span>\n            {afterStr}\n            {getUpdateIcon(item)}\n            {getDeleteIcon(item)}\n          </h3>\n        ) : (\n          <h3 className=\"category-item\">\n            {item.name}\n            {getUpdateIcon(item)}\n            {getDeleteIcon(item)}\n          </h3>\n        );\n      if (item.children) {\n        return (\n          <TreeNode key={item.key} title={title}>\n            {loop(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode key={item.key} title={title} />;\n    });\n  return (\n    <Row>\n      <Button\n        className=\"category-add-btn\"\n        type=\"primary\"\n        icon=\"folder-add\"\n        onClick={() => setCreateCategoryModalOpen(true)}\n      >\n        Add New Category\n      </Button>\n      <Search\n        style={{ marginBottom: 8 }}\n        placeholder=\"Search\"\n        onChange={handleSearchChange}\n      />\n      <Tree\n        onExpand={handleTreeExpand}\n        expandedKeys={expandedKeys}\n        autoExpandParent={autoExpandParent}\n      >\n        {loop(categoriesList)}\n      </Tree>\n\n      <Modal\n        title={`Delete category - ${deleteModalItem.name}`}\n        visible={!!deleteModalItem.id}\n        onOk={handleCategoryDelete}\n        onCancel={() => setDeleteModalItem({})}\n      >\n        would you really like to Delete <b>{deleteModalItem.name}</b> category?\n      </Modal>\n\n      <Modal\n        title={`Update category - ${updateModalItem.name}`}\n        visible={!!updateModalItem.id}\n        onOk={handleCategoryUpdate}\n        onCancel={() => setUpdateModalItem({})}\n      >\n        <Input\n          value={updateModalItemName}\n          onPressEnter={handleCategoryUpdate}\n          onChange={e => setUpdateModalItemName(e.target.value)}\n        />\n      </Modal>\n\n      <Modal\n        title={`Create new category`}\n        visible={createCategoryModalOpen}\n        onOk={handleCategoryCreate}\n        okText=\"Create\"\n        onCancel={closeCreateCategoryModal}\n      >\n        <Form onSubmit={handleCategoryCreate} className=\"login-form\">\n          <Form.Item label=\"Name\">\n            {getFieldDecorator('categoryName', {\n              rules: [\n                { required: true, message: 'Please enter category name!' }\n              ]\n            })(<Input placeholder=\"Name\" size=\"large\" />)}\n          </Form.Item>\n          <Form.Item label=\"Under Category\">\n            {getFieldDecorator('parentCategory')(\n              <Select\n                placeholder=\"Select a category\"\n                onChange={onCategoryChanged}\n              >\n                {categoriesList.map((cat, index) => (\n                  <Option value={cat.id} key={index}>\n                    {cat.name}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          {categoryTypes.length > 0 && (\n            <Form.Item label=\"Under Type\">\n              {getFieldDecorator('parentType')(\n                <Select placeholder=\"Select a type\">\n                  {categoryTypes.map((cat, index) => (\n                    <Option value={cat.id} key={index}>\n                      {cat.name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          )}\n        </Form>\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Form.create({ name: 'categoryForm' })(Category);\n","import React, { useContext, useState, useEffect } from 'react';\nimport { List, Row, Icon, Modal, Input, Button, notification } from 'antd';\n\nimport { StoreContext, LayoutContext } from '../../contexts';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { extractSlug } from '../../utils/helpers';\n\nfunction Size() {\n  const {\n    data: { sizes = [] },\n    doSizesFetch\n  } = useContext(StoreContext);\n  const { setHeaderComponent } = useContext(LayoutContext);\n\n  const prevSizes = usePrevious(sizes);\n\n  const [deleteModalItem, setDeleteModalItem] = useState({});\n  const [updateModalItem, setUpdateModalItem] = useState({});\n  const [updateModalItemName, setUpdateModalItemName] = useState('');\n  const [createSizeModalOpen, setCreateSizeModalOpen] = useState(false);\n  const [newSizeName, setNewSizeName] = useState('');\n\n  const { doFetch: doCreateFetch } = useFetch();\n  const { doFetch: doUpdateFetch } = useFetch();\n  const { doFetch: doDeleteFetch } = useFetch();\n\n  useEffect(() => {\n    const sizeIsChanged = JSON.stringify(sizes) !== JSON.stringify(prevSizes);\n    sizeIsChanged && setHeaderComponent(<b>Total sizes {sizes.length}</b>);\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, [sizes]);\n\n  const closeCreateSizeModal = () => {\n    setCreateSizeModalOpen(false);\n    setNewSizeName('');\n  };\n\n  const handleSizeDelete = () => {\n    doDeleteFetch({\n      url: URLS.sizeDelete({ slug: deleteModalItem.slug }),\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Size ${deleteModalItem.name} has been deleted`,\n      onSuccess: data => {\n        doSizesFetch();\n        setDeleteModalItem({});\n      }\n    });\n  };\n\n  const handleSizeUpdate = () => {\n    if (!updateModalItemName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the size name!',\n        duration: 4\n      });\n      return;\n    }\n    doUpdateFetch({\n      url: URLS.sizeUpdate({ slug: updateModalItem.slug }),\n      params: {\n        name: updateModalItemName\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Size ${updateModalItemName} has been updated`,\n      onSuccess: data => {\n        doSizesFetch();\n        setUpdateModalItem({});\n        setUpdateModalItemName('');\n      }\n    });\n  };\n\n  const handleSizeCreate = () => {\n    if (!newSizeName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the size name!',\n        duration: 4\n      });\n      return;\n    }\n    doCreateFetch({\n      url: URLS.sizeCreate,\n      params: {\n        name: newSizeName,\n        slug: extractSlug(newSizeName)\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Size ${newSizeName} has been created`,\n      onSuccess: data => {\n        doSizesFetch();\n        closeCreateSizeModal();\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Row>\n        <Button\n          className=\"f-r\"\n          type=\"primary\"\n          icon=\"folder-add\"\n          onClick={() => setCreateSizeModalOpen(true)}\n        >\n          Add New Category\n        </Button>\n      </Row>\n      <h3 style={{ marginBottom: 16 }}>Available Sizes:</h3>\n      <List\n        bordered\n        dataSource={sizes}\n        renderItem={item => (\n          <List.Item className=\"f-s-20\">\n            {item.name}\n            <div className=\"f-r\">\n              <Icon\n                type=\"edit\"\n                onClick={() => {\n                  setUpdateModalItem(item);\n                  setUpdateModalItemName(item.name);\n                }}\n                className=\"m-l-20 m-r-30\"\n                theme=\"twoTone\"\n                twoToneColor=\"#1890ff\"\n              />\n              <Icon\n                type=\"delete\"\n                onClick={() => setDeleteModalItem(item)}\n                theme=\"twoTone\"\n                twoToneColor=\"#f5222d\"\n              />\n            </div>\n          </List.Item>\n        )}\n      />\n\n      <Modal\n        title={`Delete size - ${deleteModalItem.name}`}\n        visible={!!deleteModalItem.id}\n        onOk={handleSizeDelete}\n        onCancel={() => setDeleteModalItem({})}\n      >\n        would you really like to Delete <b>{deleteModalItem.name}</b> size?\n      </Modal>\n\n      <Modal\n        title={`Update size - ${updateModalItem.name}`}\n        visible={!!updateModalItem.id}\n        onOk={handleSizeUpdate}\n        onCancel={() => setUpdateModalItem({})}\n      >\n        <Input\n          value={updateModalItemName}\n          onPressEnter={handleSizeUpdate}\n          onChange={e => setUpdateModalItemName(e.target.value)}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Create new size\"\n        visible={createSizeModalOpen}\n        onOk={handleSizeCreate}\n        onCancel={closeCreateSizeModal}\n      >\n        name:\n        <Input\n          value={newSizeName}\n          onPressEnter={handleSizeCreate}\n          onChange={e => setNewSizeName(e.target.value)}\n        />\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Size;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { List, Row, Icon, Modal, Input, Button, notification } from 'antd';\n//import { SketchPicker } from 'react-color';\n\nimport { StoreContext, LayoutContext } from '../../contexts';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { extractSlug } from '../../utils/helpers';\n\nfunction Color() {\n  const {\n    data: { colors = [] },\n    doColorsFetch\n  } = useContext(StoreContext);\n  const { setHeaderComponent } = useContext(LayoutContext);\n\n  const prevColors = usePrevious(colors);\n\n  const [deleteModalItem, setDeleteModalItem] = useState({});\n  const [updateModalItem, setUpdateModalItem] = useState({});\n  const [updateModalItemName, setUpdateModalItemName] = useState('');\n  const [createColorModalOpen, setCreateColorModalOpen] = useState(false);\n  const [newColorName, setNewColorName] = useState('');\n  //const [selectedColorHex, setSelectedColorHex] = useState('');\n  //const [colorPickerIsVisible, setColorPickerIsVisible] = useState(false);\n\n  const { doFetch: doCreateFetch } = useFetch();\n  const { doFetch: doUpdateFetch } = useFetch();\n  const { doFetch: doDeleteFetch } = useFetch();\n\n  useEffect(() => {\n    const colorIsChanged =\n      JSON.stringify(colors) !== JSON.stringify(prevColors);\n    colorIsChanged && setHeaderComponent(<b>Total colors {colors.length}</b>);\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, [colors]);\n\n  const closeCreateColorModal = () => {\n    setCreateColorModalOpen(false);\n    //setColorPickerIsVisible(false);\n    //setSelectedColorHex('');\n    setNewColorName('');\n  };\n\n  const handleColorDelete = () => {\n    doDeleteFetch({\n      url: URLS.colorDelete({ slug: deleteModalItem.slug }),\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Color ${deleteModalItem.name} has been deleted`,\n      onSuccess: data => {\n        doColorsFetch();\n        setDeleteModalItem({});\n      }\n    });\n  };\n\n  const handleColorUpdate = () => {\n    if (!updateModalItemName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the color name!',\n        duration: 4\n      });\n      return;\n    }\n    doUpdateFetch({\n      url: URLS.colorUpdate({ slug: updateModalItem.slug }),\n      params: {\n        name: updateModalItemName\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Color ${updateModalItemName} has been updated`,\n      onSuccess: data => {\n        doColorsFetch();\n        setUpdateModalItem({});\n        setUpdateModalItemName('');\n      }\n    });\n  };\n\n  const handleColorCreate = () => {\n    if (!newColorName) {\n      notification.warning({\n        placement: 'bottomRight',\n        message: 'Please fill the color name!',\n        duration: 4\n      });\n      return;\n    }\n    doCreateFetch({\n      url: URLS.colorCreate,\n      params: {\n        name: newColorName,\n        slug: extractSlug(newColorName)\n      },\n      method: 'POST',\n      showSuccessNotification: true,\n      successMessage: `Color ${newColorName} has been created`,\n      onSuccess: data => {\n        doColorsFetch();\n        closeCreateColorModal();\n      }\n    });\n  };\n\n  return (\n    <Row>\n      <Row>\n        <Button\n          className=\"f-r\"\n          type=\"primary\"\n          icon=\"folder-add\"\n          onClick={() => setCreateColorModalOpen(true)}\n        >\n          Add New Category\n        </Button>\n      </Row>\n      <h3 style={{ marginBottom: 16 }}>Available Colors:</h3>\n      <List\n        bordered\n        dataSource={colors}\n        renderItem={item => (\n          <List.Item className=\"f-s-20\">\n            <div className=\"w-100\">\n              <div className=\"f-l\">\n                <span className=\"m-r-30\">{item.name}</span>\n                {/* <span style={{ color: item.hex_code }}>{item.hex_code}</span> */}\n              </div>\n              <div className=\"f-r\">\n                <Icon\n                  type=\"edit\"\n                  onClick={() => {\n                    setUpdateModalItem(item);\n                    setUpdateModalItemName(item.name);\n                  }}\n                  className=\"m-l-20 m-r-30\"\n                  theme=\"twoTone\"\n                  twoToneColor=\"#1890ff\"\n                />\n                <Icon\n                  type=\"delete\"\n                  onClick={() => setDeleteModalItem(item)}\n                  theme=\"twoTone\"\n                  twoToneColor=\"#f5222d\"\n                />\n              </div>\n            </div>\n          </List.Item>\n        )}\n      />\n\n      <Modal\n        title={`Delete color - ${deleteModalItem.name}`}\n        visible={!!deleteModalItem.id}\n        onOk={handleColorDelete}\n        onCancel={() => setDeleteModalItem({})}\n      >\n        would you really like to Delete <b>{deleteModalItem.name}</b> color?\n      </Modal>\n\n      <Modal\n        title={`Update color - ${updateModalItem.name}`}\n        visible={!!updateModalItem.id}\n        onOk={handleColorUpdate}\n        onCancel={() => setUpdateModalItem({})}\n      >\n        <div className=\"m-b-10\">Name:</div>\n        <Input\n          value={updateModalItemName}\n          className=\"m-b-30\"\n          onPressEnter={handleColorUpdate}\n          onChange={e => setUpdateModalItemName(e.target.value)}\n        />\n        {/* <div className=\"m-b-10\">Color Hex:</div>\n        <Button\n          style={{ backgroundColor: updateModalItem.hex_code }}\n          onClick={() => setColorPickerIsVisible(!colorPickerIsVisible)}\n        ></Button>\n        {colorPickerIsVisible && (\n          <div style={{ position: 'absolute' }}>\n            <SketchPicker\n              color={updateModalItem.hex_code || '#fff'}\n              onChangeComplete={({ hex }) => setUpdateModalItem({\n                ...updateModalItem,\n                hex_code: hex,\n              })}\n            />\n          </div>\n        )} */}\n      </Modal>\n\n      <Modal\n        title=\"Create new color\"\n        visible={createColorModalOpen}\n        onOk={handleColorCreate}\n        onCancel={closeCreateColorModal}\n      >\n        <div className=\"m-b-10\">Name:</div>\n        <Input\n          value={newColorName}\n          className=\"m-b-30\"\n          onPressEnter={handleColorCreate}\n          onChange={e => setNewColorName(e.target.value)}\n        />\n        {/* <div className=\"m-b-10\">Color Hex:</div>\n        <Button\n          style={{ backgroundColor: selectedColorHex }}\n          onClick={() => setColorPickerIsVisible(!colorPickerIsVisible)}\n        ></Button>\n        {colorPickerIsVisible && (\n          <div style={{ position: 'absolute' }}>\n            <SketchPicker\n              color={selectedColorHex}\n              onChangeComplete={({ hex }) => setSelectedColorHex(hex)}\n            />\n          </div>\n        )} */}\n      </Modal>\n    </Row>\n  );\n}\n\nexport default Color;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Table, Input, Button, Icon, Row, Select, Popover } from 'antd';\nimport Highlighter from 'react-highlight-words';\n\nimport { LayoutContext } from '../../contexts';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { baseURL } from '../../utils/API';\nimport { getUIDate } from '../../utils/helpers';\n\nconst { Option } = Select;\n\nfunction Demands() {\n  const { setHeaderComponent } = useContext(LayoutContext);\n\n  const { data: demandsListData } = useFetch({\n    url: URLS.demandsList,\n    defaultValue: [],\n    onSuccess: data => {\n      const tmpDemandsList = data.map(demand => {\n        demand['key'] = demand.id;\n        return demand;\n      });\n      setDemandsList(tmpDemandsList);\n    }\n  });\n\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const [demandsList, setDemandsList] = useState([]);\n\n  const prevDemandsList = usePrevious(demandsList);\n\n  let searchInput;\n\n  useEffect(() => {\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, []);\n\n  useEffect(() => {\n    const demandsListChanged =\n      JSON.stringify(prevDemandsList) !== JSON.stringify(demandsList);\n    demandsListChanged && setHeaderComponent(getFilterComponent);\n  }, [demandsList]);\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select());\n      }\n    },\n    render: text =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      )\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const handleFilterChange = value => {\n    setSelectedFilter(value);\n    const tmpDemandsList = value\n      ? demandsListData.filter(demand =>\n          value === 'product' ? demand.product_id : !demand.product_id\n        )\n      : demandsListData;\n    setDemandsList(tmpDemandsList);\n  };\n\n  function getFilterComponent() {\n    return (\n      <>\n        <div className=\"filter-item\">\n          <b>Demands count: {demandsList.length}</b>\n        </div>\n        <div className=\"filter-item\">\n          <b>Show demands from:</b>\n          <Select\n            value={selectedFilter}\n            className=\"filter-select\"\n            onChange={handleFilterChange}\n          >\n            <Option value=\"\">All</Option>\n            <Option value=\"contact\">Only from contact page</Option>\n            <Option value=\"product\">Only from products pages</Option>\n          </Select>\n        </div>\n      </>\n    );\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps('name')\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ...getColumnSearchProps('email')\n    },\n    {\n      title: 'Phone Number',\n      dataIndex: 'phone',\n      key: 'phone',\n      ...getColumnSearchProps('phone')\n    },\n    {\n      title: 'Subject',\n      dataIndex: 'subject',\n      key: 'subject',\n      render: subject =>\n        subject && subject.length > 20 ? (\n          <Popover\n            className=\"message-popover\"\n            content={subject}\n            title=\"Subject\"\n          >\n            {subject.substr(0, 20)}...\n          </Popover>\n        ) : (\n          subject\n        )\n    },\n    {\n      title: 'Message',\n      dataIndex: 'message',\n      key: 'message',\n      render: message =>\n        message && message.length > 20 ? (\n          <Popover\n            className=\"message-popover\"\n            content={message}\n            title=\"Message\"\n          >\n            {message.substr(0, 20)}...\n          </Popover>\n        ) : (\n          message\n        )\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date_created',\n      key: 'date_created',\n      render: date_created => getUIDate(date_created)\n    },\n    {\n      title: 'Product',\n      dataIndex: 'product_id',\n      key: 'product_id',\n      render: product_id =>\n        product_id && (\n          <a href={`${baseURL}/${product_id}`} target=\"_blank\">\n            see product\n          </a>\n        )\n    }\n  ];\n\n  return (\n    <Row>\n      <Table columns={columns} dataSource={demandsList} />\n    </Row>\n  );\n}\n\nexport default Demands;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Empty } from 'antd';\nimport { Redirect } from 'react-router-dom';\n\nimport CreateUpdateProductForm from '../../components/CreateUpdateProductForm';\n\nimport { LayoutContext } from '../../contexts';\nimport { useFetch } from '../../hooks';\nimport { extractProductPlace } from '../../utils/productCreateUpdate';\nimport { baseURL } from '../../utils/API';\nimport { extractProductObj, validateProduct } from '../../utils/productCreateUpdate';\nimport { URLS } from '../../constants';\n\nfunction ProductDetails({ match: { params: { productSlug } } }) {\n  const { setHeaderComponent } = useContext(LayoutContext);\n  const { data: productData } = useFetch({\n    url: URLS.productItemGet({slug: productSlug}),\n    defaultValue: { sizes: [], colors: [] },\n    onSuccess: (data) => {\n      setHeaderComponent(<b>Edit product: <i>{data.name}</i></b>)\n    },\n    onError: err => {\n      setNoProductFoundAlert(true);\n    }\n  });\n  const { data: productsList } = useFetch({\n    url: URLS.productListGet,\n    defaultValue: [],\n  });\n  const { doFetch: doProductUpdateFetch, } = useFetch();\n\n  const [noProductFoundAlert, setNoProductFoundAlert] = useState(false);\n  const [productUpdated, setProductUpdated] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, []);\n\n  const productObj = {\n    name: productData.name,\n    category: productData.category_id,\n    type: productData.category_type_id,\n    tag: productData.category_tag_id,\n    description: productData.description,\n    details: productData.details,\n    mainPrice: productData.price,\n    isBest: !!productData.is_best,\n    isHandmade: !!productData.is_handmade,\n    isOutOfStuck: !!!productData.stock_status,\n    sortPlace: extractProductPlace(productData.sort_index, productsList),\n    sizeFieldsCountArr: productData.sizes.length > 0 ? productData.sizes.map((size, index) => index) : [0],\n    colorFieldsCountArr: productData.colors.length > 0 ? productData.colors.map((color, index) => index) : [0],\n  };\n  productData.sizes.forEach((size, index) => {\n    productObj[`sizeOption${index}`] = size.size_id;\n    productObj[`sizeDetail${index}`] = size.size_details;\n    productObj[`sizePrice${index}`] = size.size_price;\n    productObj[`sizeHeight${index}`] = size.height;\n    productObj[`sizeChest${index}`] = size.chest;\n    productObj[`sizeWaist${index}`] = size.waistline;\n    productObj[`sizeHips${index}`] = size.hips;\n    productObj[`sizeRefId${index}`] = size.id;\n\n  });\n  productData.colors.forEach((color, index) => {\n    productObj[`colorOption${index}`] = color.color_id;\n    productObj[`colorCode${index}`] = color.product_color_code;\n    productObj[`colorDefault${index}`] = productData.default_color_id === color.color_id;\n    productObj[`colorRefId${index}`] = color.id;\n    productObj[`colorImages${index}`] = color.images && color.images.map(image => ({\n      name: image.image_name,\n      thumbUrl: baseURL + image.thumbnail_image_link,\n      uid: image.id,\n    }));\n  });\n  productObj['imageListObj'] = productObj.colorFieldsCountArr.reduce((acc, field) => {\n    acc[field] =\n    productData.colors[field] &&\n    productData.colors[field].images.length > 0\n        ? productData.colors[field].images.map(image => ({\n            name: image.image_name,\n            thumbUrl: baseURL + image.thumbnail_image_link,\n            uid: image.id\n          }))\n        : [];\n    return acc;\n  }, {});\n\n  const handleFormSubmit = (values) => {\n    const paramsObj = extractProductObj(values, productsList);\n    delete paramsObj.slug;\n    paramsObj['id'] = productData.id;\n    const sizeRefIds = productData.sizes.map(({ id }) => id);\n    const formSizeRefIds = paramsObj.sizes.map(({ refId }) => refId);\n    sizeRefIds.forEach(sizeRefId => {\n      if(!formSizeRefIds.includes(sizeRefId)) {\n        paramsObj.sizes.push({\n          id: productData.sizes.find(({ id }) => sizeRefId === id).size_id,\n          is_checked: false,\n        })\n      }\n    });\n    const colorRefIds = productData.colors.map(({ id }) => id);\n    const formColorRefIds = paramsObj.colors.map(({ refId }) => refId);\n    colorRefIds.forEach(colorRefId => {\n      if(!formColorRefIds.includes(colorRefId)) {\n        paramsObj.colors.push({\n          id: productData.colors.find(({ id }) => colorRefId === id).color_id,\n          is_checked: false,\n        })\n      }\n    });\n\n    if(!validateProduct(paramsObj)) return; \n    \n    doProductUpdateFetch({\n      url: URLS.productUpdate({ slug: productData.slug}),\n      params: paramsObj,\n      showSuccessNotification: true,\n      onSuccess: data => !!data.id && setProductUpdated(true)\n    });\n  }\n\n  if(productUpdated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if(noProductFoundAlert) {\n    return <Empty description=\"No product found!\"/> \n  }\n\n  return (\n    <CreateUpdateProductForm handleFormSubmit={handleFormSubmit} productsList={productsList} productObj={productObj} />\n  );\n  \n}\n\nexport default ProductDetails;\n","import MainLayout from '../layout';\n// GeneralViews\nimport Login from '../pages/Login';\nimport Home from '../pages/Home';\nimport CreateProduct from '../pages/CreateProduct';\nimport Category from '../pages/Category';\nimport Size from '../pages/Size';\nimport Color from '../pages/Color';\nimport Demands from '../pages/Demands';\nimport Subscribers from '../pages/Subscribers';\nimport Users from '../pages/Users';\nimport ProductDetails from '../pages/ProductDetails';\n\nexport const dashboardRoutes = [\n  {\n    path: '/',\n    component: Home,\n    name: 'Products',\n    icon: 'shop',\n    showAlways: true\n  },\n  {\n    path: '/create-product',\n    component: CreateProduct,\n    name: 'Create Product',\n    icon: 'upload',\n    showAlways: true\n  },\n  {\n    path: '/categories',\n    component: Category,\n    name: 'Categories',\n    icon: 'menu-unfold',\n    showAlways: true\n  },\n  {\n    path: '/sizes',\n    component: Size,\n    name: 'Sizes',\n    icon: 'font-size',\n    showAlways: true\n  },\n  {\n    path: '/colors',\n    component: Color,\n    name: 'Colors',\n    icon: 'bg-colors',\n    showAlways: true\n  },\n  {\n    path: '/demands',\n    component: Demands,\n    name: 'Demands',\n    icon: 'file-search',\n    showAlways: true\n  },\n  {\n    path: '/subscribers',\n    component: Subscribers,\n    name: 'Subscribers',\n    icon: 'notification',\n    showAlways: true\n  },\n  {\n    path: '/users',\n    component: Users,\n    name: 'Users',\n    icon: 'user',\n    showAlways: true\n  },\n  {\n    path: '/product/:productSlug',\n    component: ProductDetails,\n    name: 'Product details',\n    icon: 'team',\n    showAlways: false\n  }\n];\n\nexport const baseRoutes = [\n  {\n    path: '/login',\n    component: Login,\n    name: 'Dashboard',\n    noAuth: true\n  },\n  {\n    path: '/',\n    component: MainLayout,\n    name: 'Main Layout'\n  }\n];\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Table, Row } from 'antd';\n\nimport { LayoutContext } from '../../contexts';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { getUIDate } from '../../utils/helpers';\n\nfunction Subscribers() {\n  const { setHeaderComponent } = useContext(LayoutContext);\n\n  useFetch({\n    url: URLS.subscribersList,\n    defaultValue: [],\n    onSuccess: data => {\n      const tmpSubscribersList = data.map(demand => {\n        demand['key'] = demand.id;\n        return demand;\n      });\n      setSubscribersList(tmpSubscribersList);\n    }\n  });\n\n  const [subscribersList, setSubscribersList] = useState([]);\n\n  const prevSubscribersList = usePrevious(subscribersList);\n\n  useEffect(() => {\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, []);\n\n  useEffect(() => {\n    const subscribersListChanged =\n      JSON.stringify(prevSubscribersList) !== JSON.stringify(subscribersList);\n    subscribersListChanged &&\n      setHeaderComponent(<b>Subscribers count {subscribersList.length}</b>);\n  }, [subscribersList]);\n\n  const columns = [\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date_created',\n      key: 'date_created',\n      render: date_created => getUIDate(date_created)\n    }\n  ];\n\n  return (\n    <Row>\n      <Table columns={columns} dataSource={subscribersList} />\n    </Row>\n  );\n}\n\nexport default Subscribers;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Table, Row } from 'antd';\n\nimport { LayoutContext } from '../../contexts';\nimport { useFetch, usePrevious } from '../../hooks';\nimport { URLS } from '../../constants';\nimport { getUIDate } from '../../utils/helpers';\n\nfunction Users() {\n  const { setHeaderComponent } = useContext(LayoutContext);\n\n  useFetch({\n    url: URLS.usersList,\n    defaultValue: [],\n    onSuccess: data => {\n      const tmpUsersList = data.map(demand => {\n        demand['key'] = demand.id;\n        return demand;\n      });\n      setUsersList(tmpUsersList);\n    }\n  });\n\n  const [usersList, setUsersList] = useState([]);\n\n  const prevUsersList = usePrevious(usersList);\n\n  useEffect(() => {\n    return () => {\n      setHeaderComponent(null);\n    };\n  }, [setHeaderComponent]);\n\n  useEffect(() => {\n    const usersListChanged =\n      JSON.stringify(prevUsersList) !== JSON.stringify(usersList);\n    usersListChanged &&\n      setHeaderComponent(<b>Users count {usersList.length}</b>);\n  }, [usersList]);\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id'\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date_created',\n      key: 'date_created',\n      render: date_created => getUIDate(date_created)\n    }\n  ];\n\n  return (\n    <Row>\n      <Table columns={columns} dataSource={usersList} />\n    </Row>\n  );\n}\n\nexport default Users;\n","import React, { useContext, Fragment, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport { Spin, notification } from 'antd';\nimport 'antd/dist/antd.css';\nimport store from 'store';\n\nimport { LayoutContext, StoreContext } from '../../contexts';\nimport { handleRequestError } from '../../utils/API';\nimport { baseRoutes } from '../../router';\nimport { URL_BASE_NAME } from '../../constants';\n\nimport '../../assets/scss/index.scss';\n\nfunction AppContainer({ history }) {\n  const authToken = store.get('authenticationToken');\n\n  const { loading, error, successNotification } = useContext(LayoutContext);\n  const {\n    doCategoriesFetch,\n    doColorsFetch,\n    doSizesFetch,\n    data: { categories, colors, sizes }\n  } = useContext(StoreContext);\n\n  useEffect(() => {\n    const errorMessage = handleRequestError(error);\n    const isAuthError = errorMessage === 'authentication failed';\n\n    if (authToken) {\n      (!categories || categories.length === 0) && doCategoriesFetch();\n      (!colors || colors.length === 0) && doColorsFetch();\n      (!sizes || sizes.length === 0) && doSizesFetch();\n    }\n\n    !!error &&\n      !isAuthError &&\n      notification.error({\n        placement: 'bottomRight',\n        message: 'An error occured!',\n        duration: 3,\n        description: errorMessage\n      });\n    !!successNotification &&\n      notification.success({\n        placement: 'bottomRight',\n        message: successNotification,\n        duration: 3\n      });\n    isAuthError && store.set('authenticationToken', null);\n  }, [error, successNotification, authToken]);\n\n  return (\n    <Fragment>\n      <Spin spinning={loading}>\n        <Router history={history} basename={URL_BASE_NAME}>\n          <Switch>\n            {baseRoutes.map(route => (\n              <Route\n                key={route.path}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n          </Switch>\n          {!authToken && <Redirect to=\"/login\" />}\n        </Router>\n      </Spin>\n    </Fragment>\n  );\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport store from 'store';\n\nimport AppContainer from './containers/AppContainer';\n\nimport { LayoutProvider, StoreProvider } from '../src/contexts';\nimport { setAuthorizationToken } from '../src/utils/API';\n\nfunction App() {\n  const authToken = store.get('authenticationToken');\n\n  if (!!authToken) {\n    setAuthorizationToken(authToken);\n  }\n\n  return (\n    <LayoutProvider>\n      <StoreProvider>\n        <AppContainer />\n      </StoreProvider>\n    </LayoutProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}